{"version":3,"sources":["Forum.js","ChannelController.js","AuthController.js","TopicController.js","ChatController.js","VideoController.js","SocialController.js","UserInputController.js","UserAgentService.js","NetworkService.js","ForumStorage.js","ForumDeviceInfo.js","URIHelper.js","ChannelService.js","Scorecard.js","TopicDirectives.js","EmbedPlayer.js","ImageControl.js","DataService.js","TopicService.js","VideoService.js","SocialService.js","SplashService.js","CommentService.js","DateUtilityService.js","Bant.js","UserInfoService.js","AuthService.js","StaticData.js","ForumDSUtility.js","MediaUploadService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$locationProvider","state","url","templateUrl","controller","abstract","deepStateRedirect","views","topic-tab-view","controllerAs","when","otherwise","window","history","pushState","HTML5_LOC","html5Mode","enabled","run","$state","$rootScope","filter","$filter","$sce","text","target","replacedText","targetAttr","isDefined","replacePattern1","replace","replacePattern2","trustAsHtml","$scope","$stateParams","$window","$location","networkService","ChannelService","TopicService","URIHelper","AuthService","UserInfoService","setChannel","channelID","channelParams","console","log","init","send","getLiveGameTopic","updateTopic","id","getLiveTopicId","undefined","urlQueryStr","path","search","paramsObj","topicID","channel","go","registerObserverCallback","isUserLoggedIn","NETWORK_DEBUG","isSmartStadiumUser","loginWithEmail","isTechMUser","location","isPeelUser","loginWithPeel","loginAsGuest","$http","ReplyService","ForumDeviceInfo","showSpinner","showFacebookButton","href","indexOf","slice","techMIUser","facebookUser","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","ga","loginToFacebook","techMLogin","name","email","isValid","submitted","fbAsyncInit","FB","appId","xfbml","version","getLoginStatus","response","status","registerParams","setRegistrationParams","authResponse","registerUser","$sanitize","$timeout","CommentService","SplashService","MUService","ForumStorage","FileUploader","SocialService","UserAgentService","isMobileUser","mobileBrowser","mobileUserAgent","getMobileUserAgent","setTopicId","topicType","innerButtonTapped","hideSSSplash","setToLocalStorage","continueToExperience","isMI16User","hasUserVisited","hidePeelSplash","env","setPeelSplash","setSSSplash","setScoreCardUI","$","css","getTopic","getTopicType","isWatchingTopic","getFollowChannelRequest","watchTopicRequest","getTeamA","leftTeam","rightTeam","getTeamB","score","getScore","leftTeamScore","points","rightTeamScore","gameStatus","getGameStatus","gamePeriod","getGamePeriod","gameClock","getGameClock","gameScheduledTime","getGameTime","allScoresTitle","getScoresTitle","allScoresURL","getScoresLink","left","right","pColor","topicTitle","getTitle","thisTopic","topicDescHtml","html","type","topicMediaUrl","mediaUrl","topicMediaAspectFeed","mediaAspectFull","createdAt","getTimeCreatedAt","liked","getLiked","metrics","getMetrics","likesCount","likes","commentsCount","comments","loadingChat","getTopicRequest","setPeelUI","initPage","pageClass","style","paddingBottom","isSocketConnected","MI16","peelClose","peelWatchOnTV","showId","getPeelShowId","showNewCommentsIndicator","imageClick","imageURL","event","cancelBubble","stopPropagation","magnificPopup","open","items","callbacks","bind","e","preventDefault","close","unbind","updateLikeTopic","getUnlikeTopicRequest","getLikeTopicRequest","commentOnTopic","focus","switchTabs","tab","addClass","removeClass","scrollTop","initializeTab","includes","_channelId","getChannel","tabs","tabContainer","tabsTop","tabsHeight","inputHeight","clientHeight","docHeight","headerHeight","debugObj","docVarsSet","setDocVars","offset","top","height","documentElement","fixed","watchScroll","off","on","getCommentsRequest","updateComments","commentsdata","length","lastComment","len","_this","commentsArray","i","tempComment","postAuthorName","author","postAuthorPhoto","photo","isMyComment","isCurrentUser","likeCount","replyCount","replies","postTimestamp","mediaAspectFeed","mediaAspectRatio","mediaOrientation","mediaThumbUrl","isLiked","signal","like","shared","embed","embedCreatedAt","embedCreatedAtFull","embedType","embedMedia","providerName","embedLogo","provider","logo","playable","embedHtml","push","notifyNewComments","commentsData","pinIndex","getNumPinComments","newCommentsAvailable","this","loading","loadRemainingComments","loadedComments","setLoadedComments","loadedAllComments","doneLoading","showNewComments","trustSrc","trustAsResourceUrl","viewPost","is","postParams","postID","replyDirectToPost","directComment","updateLikeComment","isCommentLiked","getUnlikeCommentRequest","getLikeCommentRequest","deleteComment","deleteCommentRequest","reportCommentAsSpam","flagCommentRequest","VideoService","DateUtilityService","updateFeed","feedData","existingLength","tabArray","videoArray","tempItem","itemExists","j","embedAuthor","postAuthorAlias","alias","tweetId","tweet","embedProvider","embedText","retweetCount","providerLogo","embedUrl","embedPlayable","mediaType","loadingVideo","updateTimestamps","getTimeSince","createdAtFull","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","resetVideoOffset","loadContent","getChannelId","getVideoDataRequest","innerHeight","watchContentScroll","currentScroll","retweetPost","method","headers","Access-Control-Allow-Origin","shareTweetToChat","embedShareContent","showShareDialog","fullClient","submitSharedPost","commentData","embedData","postCommentRequestForShare","shareToFacebook","ui","exitShare","highlightPost","unhighlightPost","secureLink","isGuestUser","socialArray","loadingSocial","resetSocialOffset","getSocialDataRequest","generateImagePreview","evt","f","files","match","previewSrc","reader","FileReader","onload","theFile","span","innerHTML","result","join","dontAdd","readAsDataURL","MUS_SERVER_URI","DEV_BUILD","UPLOAD_URL","uploader","autoUpload","removeAfterUpload","queueLimit","isHTML5","filters","fn","item","options","itemType","queue","size","addEventListener","removeMedia","clearQueue","wrap","closest","get","reset","unwrap","fileMaxExceeded","onWhenAddingFileFailed","info","HTML5warning","onAfterAddingFile","fileItem","onAfterAddingAll","addedFileItems","onBeforeUploadItem","user","getUserCredentials","X-UserId","userId","X-SessionId","sessionId","X-AccessToken","accessToken","formData","_file","file","onProgressItem","progress","onProgressAll","onSuccessItem","postMediaRequest","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","resetCommentParams","postComment","commentText","isComment","setCommentParams","topicId","postCommentRequest","getPostReplyRequest","uploadAll","blur","scrollTo","body","scrollHeight","mobileHighlightPost","mobileUnhighlightPost","factory","agent","test","navigator","userAgent","MSStream","_userAgent","check","a","substr","vendor","opera","isUserAgent","$websocket","DataService","initSocket","getWebsocketUri","socketUri","WEBSOCKET_BASE_URI","ws","setWatchTopic","onOpen","onClose","data","onMessage","responseJson","JSON","parse","rid","setTopic","setComments","setReplies","setSocial","setVideo","onError","stringify","disconnectSocket","reconnectSocket","reload","readyState","OPEN","message","key","value","localStorage","localStorageAvailable","setItem","getFromLocalStorage","getItem","clearStorage","clear","_p8","p","Math","random","toString","generateUUID","uuid","getDeviceId","getUrlVars","peelUserName","peelUserId","peelShowId","ssUserName","ssUserId","_MI16","vars","getPeelUserId","getPeelUserName","getPeelParams","substring","getSSUserId","getSSUserName","Bant","FDSUtility","setTopicData","topicData","_liveTopicId","notifyObservers","channelId","reqChannelId","uri","topicParams","timestamp","Date","getTime","callback","callbackLength","observerCallbacks","pop","forEach","directive","restrict","link","$elem","$attrs","element","$eval","secureClick","secureFocus","$element","$last","repeatFinishedNotify","scope","thisPost","trustSource","elem","attr","vidIndex","setYOffset","video","y","setXOffset","x","firstElementChild","childNodes","loadingSpinner","className","zIndex","canPlay","togglePlayPause","thesePlayerNodes","thisVideo","thisThumbnail","thisPlayBtn","thisLoading","paused","ended","play","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","pause","setAspectRatio","aspectRatio","orientation","classStrings","setDimensions","thisWidth","width","styleObj","priority","$attributes","ngElementReady","trustSrcHtml","iframePlayer","setOffsets","image","direction","ref","offsetScale","h","scaledY","w","scaledX","thisImage","service","delegateSetComments","error","updateComment","updateCommentCount","commentId","DATA_BANT_ID_LENGTH","appendToComments","updateCommentLocalData","delegateSetTopic","removeTopic","delegateSetReplies","replyData","updateReply","updateReplyCountById","appendToReplies","getCommentIdByReply","updateReplyLocalData","delegateSetChannel","delegateSetSocial","setSocialData","delegateSetVideo","setVideoData","watched","content","_title","title","_topicType","_id","_game","game","_scheduledAt","getGameScheduledTime","scheduledAt","_score","live","_status","_gameStats","_topic","bant","WATCH_TOPIC_URI","_isTopicWatched","LIKE_TOPIC_URI","updateBantLiked","UNLIKE_TOPIC_URI","updateTopicData","scoreData","setScoreData","TOPIC_BASE_URI","varTopicParams","encodeURI","owner","likeTopicRequest","varLikeParams","unlikeTopicRequest","getTopicId","getGame","teams","links","getHtml","watch","videoData","_videoArray","tempData","results","_videoObject","_offset","nextOffset","reqOffset","request","LIST_SOCIAL_URI","LIMIT","socialData","_socialArray","_socialObject","_hidePeelSplash","_hideSSSplash","val","_comments","tempCommentsData","_commentObject","prevOffset","SHOW_COMMENT_URI","postCommentData","media","pin","_pinnedComments","splice","unshift","commentObj","updateLocalData","newData","updateLikeCommentWithId","tempObject","getCommentById","removeComment","temp","tempObserverCallbacks","commentGetRequest","queryStr","commentPostRequest","LIST_COMMENTS_URI","getCommentByIdRequest","createCommentParams","POST_COMMENT_URI","lang","sections","postCommentRequestForMedia","mediaData","m","likeCommentRequest","LIKE_COMMENT_URI","unlikeCommentRequest","UNLIKE_COMMENT_URI","FLAG_COMMENT_URI","DELETE_COMMENT_URI","isLikedById","tempStructure","deleteById","flagById","UNFLAG_COMMENT_URI","HIDE_COMMENT_URI","hideById","UNHIDE_COMMENT_URI","_loadedComments","timeSince","timeStamp","now","createdDate","secondsPast","parseInt","daysPassed","floor","day","getDate","month","toDateString","year","getFullYear","gameScheduleTime","date_format","getMonth","hour","getHours","minutes","getMinutes","time","ext","timeZone","toLocaleString","timeZoneName","split","date","extractMediaObject","_bantObject","tempMedia","EXTRACT_MEDIA_TYPE_LENGTH","thumbUrl","sizes","mediaAspect16x9","mediaAspect1x1","mediaAspect2x1","extractEmbedObject","embedObject","embedTitle","embedMetrics","embedMini","mini","sectionsLength","ogp","likeObject","_userInfo","userInfoTemp","setUserCredentials","userType","_isUserLoggedIn","GEN_DEBUG","ssUser","MI16User","getUserType","userLoggedInToFacebook","userData","userName","login","utcOffset","deviceId","locale","deviceType","deviceModel","appKey","appVersion","facebook","userID","peel","isMI16","post","REGISTER_SERVER_URI","then","initializeContent","initChannel","initTopic","initPost","getPostId","getPostsForTopicID","staticPosts","fakePhotos","usedFakePhotos","fakeVideos","usedFakeVideos","peelDemoData","postContent","postMedia","peelPost","fakePost","Object","minimumCharacterCount","randomCharacterCount","round","loremIpsum","postType","fakePhoto","fakeVideo","postAuthors","commentCount","getRepliesForPostID","fakeReplies","fakeReply","loremIpsumSubstring","replyContent","replyType","getStructureById","array","getIndexById","isFlaggedById","flag","index","POST_REPLY_URI","tId","isCom","comId","repId","replyId"],"mappings":"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","file":"app.min.js","sourcesContent":["angular.module(\"Forum\", [\"ui.router\",\"ngSanitize\",\"AuthModule\",\"ChannelModule\",\"TopicModule\",\"ChatModule\",\"PostModule\",\"NetworkModule\",\"MediaModule\",\"VideoModule\",\"SocialModule\",\"UserInput\",\"SmartStadiumModule\"])\n.config([\"$stateProvider\", \"$urlRouterProvider\", \"$locationProvider\",\nfunction ($stateProvider, $urlRouterProvider, $locationProvider) {\n  \n  $stateProvider\n  .state('login', {\n    url: '/login',\n    templateUrl:'partials/facebookLogin.html',\n    controller:'AuthController'\n  })\n  .state('channel', {\n    url: '/channel/:channelID?peel&userId&userName&showId&smartStadium&MI16',\n    templateUrl:'partials/login.html',\n    controller:'ChannelController'\n  })\n  .state('topic', {\n    url: '/topic/:topicID?channel&peel&userId&userName&showId&smartStadium&MI16',\n    abstract: true,\n    templateUrl:'partials/topic.html',\n    controller:'TopicController'\n  })\n    .state('topic.chat', {\n      url: '/chat',\n      deepStateRedirect: true,\n      views: {\n        'topic-tab-view': {\n          templateUrl:'partials/chat.html',\n          controller: 'ChatController',\n          controllerAs: 'chat'\n        }\n      }\n    })\n    .state('topic.video', {\n      url: '/video',\n      deepStateRedirect: true,\n      views: {\n        'topic-tab-view': {\n          templateUrl:'partials/video.html',\n          controller: 'VideoController',\n          controllerAs: 'video'\n        }\n      }\n    })\n    .state('topic.social', {\n      url: '/social',\n      deepStateRedirect: true,\n      views: {\n        'topic-tab-view': {\n          templateUrl:'partials/social.html',\n          controller: 'SocialController',\n          controllerAs: 'social'\n        }\n      }\n    })\n  .state('post', {\n    url: '/post/:postID?channel&peel&userId&userName&showId&smartStadium&MI16',\n    templateUrl:'partials/post.html',\n    controller:'PostController'\n  })\n  .state('invalid', {\n    url: 'invalidTopic',\n    templateUrl:'partials/invalidTopic.html'\n  })\n  $urlRouterProvider.when('/topic/:topicID', '/topic/:topicID/chat');\n  $urlRouterProvider.otherwise('invalid');\n\n  if (window.history && window.history.pushState && HTML5_LOC){\n    $locationProvider.html5Mode({\n      enabled:true\n    });\n  }\n}])\n\n.run(['$state','$rootScope',function ($state, $rootScope) {\n  $rootScope.$state = $state;\n}])\n\n.filter('hashtags',['$filter', '$sce',\n  function ($filter, $sce) {\n    return function(text, target) {\n      if (!text) return text;\n\n      var replacedText = $filter('linky')(text, target);\n      var targetAttr = \"\";\n      if (angular.isDefined(target)) {\n          targetAttr = ' target=\"' + target + '\"';\n      }\n      // replace #hashtags and send them to twitter\n      var replacePattern1 = /(^|\\s)#(\\w*[a-zA-Z_]+\\w*)/gim;\n      replacedText = text.replace(replacePattern1, '$1<a href=\"https://twitter.com/search?q=%23$2\"' + targetAttr + '>#$2</a>');\n      // replace @mentions but keep them to our site\n      var replacePattern2 = /(^|\\s)\\@(\\w*[a-zA-Z_]+\\w*)/gim;\n      replacedText = replacedText.replace(replacePattern2, '$1<a href=\"https://twitter.com/$2\"' + targetAttr + '>@$2</a>');\n\n      $sce.trustAsHtml(replacedText);\n      return replacedText;\n  };\n}]);\n","angular.module(\"ChannelModule\", [\"NetworkModule\", \"AuthModule\"])\n.controller(\"ChannelController\", [\"$scope\", \"$state\", \"$stateParams\", \"$window\",\"$location\",\"$sce\",\"networkService\", \"ChannelService\",\"TopicService\",\"URIHelper\",\"AuthService\",\"UserInfoService\",\n\nfunction ($scope,$state,$stateParams,$window,$location,$sce,networkService,ChannelService,TopicService, URIHelper, AuthService, UserInfoService)\n{\n  ChannelService.setChannel($stateParams.channelID);\n  var channelParams = $stateParams;\n  console.log(\"Channel Params: \", channelParams);\n  // if (window.location.href.indexOf('?') !== -1){\n  //   $scope.urlQueryStr = window.location.href.slice(window.location.href.indexOf('?')+1);\n  //   console.log(\" $scope.urlQueryStr: \" + $scope.urlQueryStr);\n  // }\n  \n  $scope.init = function() {\n    console.log(\"Init all connections\");\n    networkService.init();\n    networkService.send(ChannelService.getLiveGameTopic($stateParams.channelID));\n  };\n\n  \n  var updateTopic = function(){\n    var id = ChannelService.getLiveTopicId();\n    if(id !== undefined){\n      console.log(\"Got Topic id from Channel : \" +\"/topic/\" + id + $scope.urlQueryStr);\n      if (HTML5_LOC){\n        if(!!$scope.urlQueryStr)\n          $location.path(\"/topic/\" + id).search($scope.urlQueryStr);\n        else\n          $location.path(\"/topic/\" + id);\n      } else {\n        // if(!!$scope.urlQueryStr)\n        var paramsObj = channelParams;\n        paramsObj.topicID = id;\n        paramsObj.channel = channelParams.channelID;\n        console.log(\"GO Topic: \", paramsObj);\n        $state.go(\"topic.chat\", paramsObj);\n        // else\n          // $window.location = \"#/topic/\" + id;\n      }\n    }\n\n  };\n  \n  \n\n  ChannelService.registerObserverCallback(updateTopic);\n  \n  if(UserInfoService.isUserLoggedIn()){\n    if(NETWORK_DEBUG)\n      console.log(\"User is logged in, checking for connection\");\n    $scope.init();\n  }\n  else if (URIHelper.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    AuthService.loginWithEmail();\n  }\n  else if (URIHelper.isTechMUser()){\n    console.log(\"MI16 User Detected\");\n    $window.location = \"#/login?MI16=true\";\n  }\n  else {\n    if(URIHelper.isPeelUser()){\n      $scope.isPeelUser = true;\n      AuthService.loginWithPeel();\n    }\n    else{\n      AuthService.loginAsGuest();\n    }\n  }\n  \n\n}]);\n","angular.module(\"AuthModule\", [\"NetworkModule\", \"TopicModule\"])\n.controller(\"AuthController\", [\"$scope\", \"$stateParams\", \"$http\", \"AuthService\", \"UserInfoService\", \"TopicService\", \"ReplyService\", \"networkService\",\"ForumDeviceInfo\", \"ChannelService\", \"URIHelper\",\n  function ($scope, $stateParams, $http, AuthService, UserInfoService, TopicService, ReplyService, networkService, ForumDeviceInfo, ChannelService, URIHelper) {\n\n    if (window.location.href.indexOf('?') !== -1){\n      var urlQueryStr = window.location.href.slice(window.location.href.indexOf('?')+1);\n      console.log(\"urlQueryStr: \", urlQueryStr);\n      if (urlQueryStr === 'MI16=true'){\n        $scope.techMIUser = true;\n        $scope.facebookUser = false;\n      }\n    } else {\n      $scope.techMIUser = false;\n      $scope.facebookUser = true;\n    }\n\n    if ($scope.facebookUser){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n      ga('send', 'pageview', 'Facebook Landing');\n    }\n    else {\n      ga('send', 'pageview', 'Tech MI16 Landing');\n    }\n    // FACEBOOK AUTH SECTION\n    $scope.showFacebookButton = true;\n\n    function showSpinner() {\n      $scope.showFacebookButton = false;\n    }\n\n    $scope.loginToFacebook = function() {\n      AuthService.loginToFacebook(showSpinner);\n    };\n\n    $scope.techMLogin = function(name, email, isValid) {\n      if (isValid){\n        AuthService.techMLogin(name, email);\n      }\n      $scope.submitted = true;\n    };\n\n    // load Facebook SDK and initialize\n    // TBD: may want to move this initialization to the run cycle instead of in controller\n    window.fbAsyncInit = function() {\n      \n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n\n      FB.getLoginStatus(function (response) {\n\n        // User is logged in to Facebook and authenticated our app\n        // response.authResponse contains user auth information\n        if (response.status === 'connected') {\n          $scope.showFacebookButton = false;\n          var registerParams = AuthService.setRegistrationParams(\"facebook\", -25200, response.authResponse);\n          AuthService.registerUser(registerParams);\n        }\n        // User is logged in to Facebook but hasn't authenticated our app\n        else if (response.status === 'not_authorized') {\n          // FB.login();\n          $scope.showFacebookButton = false;\n          $scope.loginToFacebook();\n        }\n        // User not logged in to Facebook\n        else {\n          $scope.showFacebookButton = true;\n        }\n\n      });\n\n    };\n\n\n    \n}]);","angular.module(\"TopicModule\", [\"NetworkModule\", \"SplashModule\", \"AuthModule\", \"MediaModule\", \"angularFileUpload\",\"SocialModule\"])\n.controller(\"TopicController\", [\"$scope\", \"$state\", \"$stateParams\", \"$sce\", \"$window\", \"$location\",\"$sanitize\", \"$timeout\", \"networkService\", \"TopicService\",\"CommentService\", \"UserInfoService\",\"URIHelper\",\"AuthService\",\"SplashService\",\"MUService\",\"ForumStorage\",\"FileUploader\",\"SocialService\",\"ChannelService\",\"UserAgentService\",\n\nfunction ($scope, $state, $stateParams, $sce, $window, $location, $sanitize, $timeout, networkService,TopicService, CommentService, UserInfoService, URIHelper, AuthService, SplashService,MUService,ForumStorage,FileUploader,SocialService, ChannelService, UserAgentService)\n{\n  // var lastComment = false;\n  // Check For Mobile Browser\n  if (UserAgentService.isMobileUser()){\n    $scope.mobileBrowser = true;\n    $scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n    console.log(\"MOBILE USER AGENT: \", $scope.mobileUserAgent);\n  } else {\n    $scope.mobileBrowser = false;\n  }\n\n  // if (!$scope.commentsArray){\n  //   $scope.loadingChat = true;\n  // }\n\n  ga('send', 'pageview', \"/topic/\"+$stateParams.topicID);\n  console.log('Sent Pageview from /topic/' + $stateParams.topicID);\n  \n  TopicService.setTopicId($stateParams.topicID);\n  $scope.topicType = \"livegame\";\n  $scope.innerButtonTapped = false;\n  if (UserInfoService.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    // if (!UserInfoService.hasUserVisited()){\n      console.log('SS USER HASNT VISITED');\n      $scope.hideSSSplash = false;\n      ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n      $timeout(function() {$scope.continueToExperience('smartS'); }, 5000);\n    // }\n  }\n  else if (UserInfoService.isMI16User()){\n    $scope.isMI16User = true;\n  }\n  else if(UserInfoService.isPeelUser()){\n    $scope.isPeelUser = true;\n    if (!UserInfoService.hasUserVisited()){\n      console.log('PEEL USER HASNT VISITED');\n      $scope.hidePeelSplash = false;\n      ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n      $timeout(function() {$scope.continueToExperience('peel'); }, 5000);\n    }\n  }\n  else {\n    $scope.isPeelUser = false;  \n    $scope.hidePeelSplash = true;\n    $scope.hideSSSplash = true;\n  }\n\n  $scope.continueToExperience = function(env) {\n    console.log(\"CONTINUE XP CLICKED\");\n    if (env === 'peel'){\n      SplashService.setPeelSplash(true);\n      $scope.hidePeelSplash = true;\n    } else if (env === 'smartS'){\n      SplashService.setSSSplash(true);\n      $scope.hideSSSplash = true;\n    }\n  };\n  $scope.setScoreCardUI = function() {\n    if ($scope.topicType === 'livegame'){\n      if ($scope.isPeelUser){\n        $('#topicSection').css('padding-top','54px');\n      } else if ($scope.isSmartStadiumUser){\n        $('#topicSection').css('padding-top','54px');\n      } else if ($scope.isMI16User){\n        // $('#topicSection').css('padding-top','54px');\n      } else {\n        $('#topicSection').css('padding-top','0px');\n      }\n    }\n  };\n  \n  var updateTopic = function(){\n    if(TopicService.getTopic() !== undefined){\n      $scope.topicType = TopicService.getTopicType();\n      if(TopicService.isWatchingTopic() === false){\n        networkService.send(TopicService.getFollowChannelRequest());\n        networkService.send(TopicService.watchTopicRequest($stateParams.topicID));\n      }\n      \n      \n      $scope.setScoreCardUI();\n      if($scope.topicType == \"livegame\"){\n        console.log(\"Inside topic set :\"+ TopicService.getTeamA());\n        //Score API update\n        $scope.leftTeam = TopicService.getTeamA();\n        $scope.rightTeam = TopicService.getTeamB();\n        var score = TopicService.getScore();\n        if(score != undefined){\n          $scope.leftTeamScore = score.points[0];\n          $scope.rightTeamScore = score.points[1];\n        }\n        $scope.gameStatus = TopicService.getGameStatus();\n        // console.log($scope.gameStatus)\n\n        if($scope.gameStatus == \"live\") {\n          $scope.gamePeriod = TopicService.getGamePeriod();\n          $scope.gameClock = TopicService.getGameClock();\n        }\n\n        $scope.gameScheduledTime = TopicService.getGameTime();\n\n\n\n        $scope.allScoresTitle = TopicService.getScoresTitle();\n        $scope.allScoresURL = TopicService.getScoresLink();\n\n        // renderScoreCard($scope.leftTeam.pColor, $scope.rightTeam.pColor);\n        var left = $('.scoreCardContent');\n        var right = $('.svg-content');\n        left.css('background-color', $scope.leftTeam.pColor);\n        right.css('fill', $scope.rightTeam.pColor);\n      }\n      $scope.topicTitle = TopicService.getTitle();\n      var thisTopic = TopicService.getTopic();\n      $scope.topicDescHtml = thisTopic.html;\n      //console.log(\"has MEDIA  :\"+ thisTopic.type +\"thisTopic.mediaUrl\"+ thisTopic.mediaUrl);\n      if(thisTopic.type == \"media\"){\n      $scope.topicMediaUrl = thisTopic.mediaUrl;\n      $scope.topicMediaAspectFeed = thisTopic.mediaAspectFull;\n      }\n//      var width = window.innerWidth;\n//      console.log(\"Image width :\"+$scope.topicMediaAspectFeed.w +\"  X  \" + $scope.topicMediaAspectFeed.h + \"xxxx \"+width)\n//      $scope.topicMediaAspectFull = thisTopic.mediaAspectFull;\n\n      $scope.createdAt = TopicService.getTimeCreatedAt();\n      $scope.liked = TopicService.getLiked();\n      var metrics = TopicService.getMetrics();\n      $scope.likesCount = metrics.likes;\n      $scope.commentsCount = metrics.comments;\n      if (!$scope.commentsCount || $scope.commentsCount === 0){\n        $scope.loadingChat = false;\n      }\n\n    }\n  };\n\n  // var updateComments = function(){\n  //   var commentsdata = CommentService.comments();\n  //   if(commentsdata != undefined && (commentsdata.length >0 || lastComment === true)){\n  //     lastComment = false;\n  //     // console.log(\"CommentsData : \", commentsdata);\n  //     var len = commentsdata.length;\n\n  //     $scope.commentsArray = [];\n\n  //     for(i=0;i<len;i++){\n  //       var tempComment = {};\n  //       tempComment = commentsdata[i];\n  //       tempComment.postAuthorName = commentsdata[i].author.name;\n  //       tempComment.postAuthorPhoto = commentsdata[i].author.photo;\n  //       tempComment.isMyComment = UserInfoService.isCurrentUser(commentsdata[i].author.id);\n\n  //       tempComment.likeCount = commentsdata[i].metrics.likes;\n  //       tempComment.replyCount = commentsdata[i].metrics.replies;\n\n  //       tempComment.postTimestamp = commentsdata[i].createdAt;\n  //       if (tempComment.type === 'media'){\n  //         tempComment.mediaUrl = commentsdata[i].mediaUrl;\n  //         // tempComment.trustedMediaUrl = $scope.trustSrc(tempComment.mediaUrl);\n  //         tempComment.mediaAspectFeed = commentsdata[i].mediaAspectFeed;\n  //         tempComment.mediaAspectFull = commentsdata[i].mediaAspectFull;\n  //         tempComment.mediaAspectRatio = commentsdata[i].mediaAspectRatio;\n  //         tempComment.mediaOrientation = commentsdata[i].mediaOrientation;\n  //         tempComment.mediaThumbUrl = commentsdata[i].mediaThumbUrl;\n  //       }\n  //       tempComment.isLiked = commentsdata[i].signal.like;\n\n  //       if (tempComment.type === 'embed'){\n  //         tempComment.shared = true;\n  //         tempComment.embed = commentsdata[i].embed;\n  //         tempComment.embed.embedCreatedAt = commentsdata[i].embedCreatedAt;\n  //         tempComment.embed.embedCreatedAtFull = commentsdata[i].embedCreatedAtFull;\n  //         tempComment.embedType = commentsdata[i].embedType;\n          \n  //         if (tempComment.embedType === 'media' || tempComment.embedType === 'link'){\n  //           tempComment.mediaUrl = commentsdata[i].embedMedia.mediaUrl;\n  //           tempComment.mediaThumbUrl = commentsdata[i].embedMedia.mediaThumbUrl;\n  //           tempComment.mediaAspectFeed = commentsdata[i].embedMedia.mediaAspectFeed;\n  //           tempComment.mediaAspectFull = commentsdata[i].embedMedia.mediaAspectFull;\n  //           tempComment.mediaAspectRatio = commentsdata[i].embedMedia.mediaAspectRatio;\n  //           tempComment.mediaOrientation = commentsdata[i].embedMedia.mediaOrientation;\n  //         }\n\n  //         if (tempComment.providerName === \"Twitter\"){\n  //           tempComment.embed.embedLogo = \"img/twitterLogo@2x.png\";\n  //         } else {\n  //           tempComment.embed.embedLogo = commentsdata[i].embed.provider.logo;\n  //         }\n\n  //         if (commentsdata[i].embed.type === 'link' && commentsdata[i].embed.playable === true){\n  //           tempComment.embedHtml = commentsdata[i].embedHtml;\n  //         }\n  //       }\n  //       $scope.commentsArray.push(tempComment);\n  //       if (i === len - 1 && NETWORK_DEBUG){\n  //         console.log(\"Comments Array: \", $scope.commentsArray);\n  //       }\n\n  //     }\n  //   }\n\n  // };\n\n  // $scope.loadRemainingComments = function() {\n  //   console.log(\"LOADING REST OF COMMENTS...\");\n  //   if (!CommentService.loadedComments()){\n  //     networkService.send(CommentService.getCommentsRequest($stateParams.topicID));\n  //     CommentService.setLoadedComments(true);\n  //     $scope.loadedAllComments = true;\n  //   }\n  // };\n\n  $scope.init = function() {\n    networkService.send(TopicService.getTopicRequest($stateParams.topicID));\n    // networkService.send(CommentService.getCommentsRequest($stateParams.topicID));\n  };\n  \n\n  $scope.setPeelUI = function(isPeelUser){\n    //console.log(\"isPeelUser :\"+isPeelUser);\n    $scope.isPeelUser = isPeelUser;\n    \n  };\n\n  \n  $scope.setPeelUI($scope.isPeelUser);\n\n  // $scope.hideLoading = function(){\n  //   console.log(\"HIDING LOAD\");\n  //   $scope.loadingChat = false;\n  //   $scope.loadingSocial = false;\n  //   $scope.loadingSocial = false;\n  // };\n  $scope.initPage = function(){\n    updateTopic();\n    // updateComments();\n    $scope.pageClass = 'page-topic';\n    // $scope.showNewCommentsIndicator = false;\n\n    $scope.topicID = $stateParams.topicID;\n    $scope.init();\n\n    if ($scope.mobileBrowser === true){\n      document.getElementById('topicSection').style.paddingBottom = \"42px\";\n    }\n  };\n\n  // $scope.setLinksOnComments = function(){\n  //   var postDivs = document.getElementsByClassName(\"postRow\");\n  //   for (div in postDivs) {\n  //     var thisDiv = postDivs[div];\n  //     thisDiv.onclick = function(e) {\n  //       if ($(e.target).is('a')) {\n  //         console.log(\"EXTERNAL LINK: \", e, this.id);\n  //         return;\n  //       } \n  //       thisPost = $scope.commentsArray[this.id];\n  //       if ($scope.innerButtonTapped === false) {\n  //         console.log(\"Post Click Active: \", thisPost.id);\n  //         if (HTML5_LOC){\n  //           $location.path(\"/post/\" + thisPost.id);\n  //           if (!$scope.$$phase){\n  //             $scope.$apply();\n  //           }\n  //         } else {\n  //           // $window.location = \"#/post/\" + thisPost.id;\n  //           var postParams = $stateParams;\n  //           postParams.postID = thisPost.id;\n  //           $state.go('post', postParams);\n  //         }\n  //       }\n  //       $scope.innerButtonTapped = false;\n  //     }\n  //   }\n  // }\n\n//  if(URIHelper.isPeelUser())\n//    ga('send', 'event', 'UserType', '0', 'Peel User', { 'nonInteraction': 2 });\n//  else\n//    ga('send', 'event', 'UserType', '0', 'Non Peel User', { 'nonInteraction': 2 });\n  if(UserInfoService.isUserLoggedIn()){\n    if(NETWORK_DEBUG)\n      console.log(\"User is logged in, checking for connection\");\n    if(!networkService.isSocketConnected())\n      networkService.init();\n    $scope.initPage();\n  }\n  else if (URIHelper.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    console.log(\"SS User? \", $scope.isSmartStadiumUser);\n    AuthService.loginWithEmail();\n  }\n  else if (URIHelper.isTechMUser()){\n    // $window.location = \"#/login?MI16=true\";\n    $state.go('login', {MI16: true});\n  }\n  else if (URIHelper.isPeelUser()){\n    $scope.isPeelUser = true;\n    $scope.setPeelUI(true);\n    AuthService.loginWithPeel();\n  }\n  else {\n    // console.log(\"Not logged in to facebook, take user to login page\")\n    AuthService.loginAsGuest();\n  }\n\n\n  $scope.peelClose = function()\n  {\n    ga('send', 'event', 'Peel', 'click', 'BackToPeelHome');\n    console.log(\"peelClose()\");\n    window.location = \"peel://home\";\n  }\n\n  $scope.peelWatchOnTV = function()\n  {\n    ga('send', 'event', 'Peel', 'click', 'PeelWatchOnTV');\n    console.log(\"peelWatchOnTV()\");\n    var showId = URIHelper.getPeelShowId();\n    console.log(\"Peel show on TV uri :  \"+ \"peel://tunein/\"+showId);\n    if(showId != undefined)\n      window.location = \"peel://tunein/\"+showId;\n    else\n      window.location = \"peel://home\";\n  }\n\n  $scope.showNewCommentsIndicator = false;\n  // $scope.newCommentsIndicatorTapped = function()\n  // {\n  //   console.log(\"newCommentsIndicatorTapped\");\n  //   $scope.showNewCommentsIndicator = false;\n  //   updateComments();\n  //   $(document).scrollTop(0);\n  // }\n\n  $scope.imageClick = function(imageURL) {\n    event.cancelBubble = true;\n    if(event.stopPropagation) event.stopPropagation();\n\n    $.magnificPopup.open({\n      items: {\n        type:'image',\n        src: imageURL,\n      },\n      type: 'inline',\n      callbacks: {\n        open: function(){\n          $('body').bind('touchmove', function(e){e.preventDefault()})\n        },\n        close: function(){\n          $('body').unbind('touchmove')\n        }\n      }\n    });\n  };\n\n  // $scope.moreButtonTapped = function() {\n  //   $scope.innerButtonTapped = true;\n  // };\n\n  $scope.updateLikeTopic = function() {\n    console.log(\"TopicController update like Topic\");\n    if(TopicService.getLiked() == true)\n      networkService.send(TopicService.getUnlikeTopicRequest());\n    else\n      networkService.send(TopicService.getLikeTopicRequest());  \n  };\n\n  $scope.commentOnTopic = function() {\n    document.getElementById(\"topicCommentField\").focus();\n  };\n\n  // $scope.updateLikeComment = function(id) {\n  //   $scope.innerButtonTapped = true;\n    \n  //   console.log(\"TopicController updateLike (\" + id + \")\");\n  //   if(CommentService.isCommentLiked(id)){\n  //     networkService.send(CommentService.getUnlikeCommentRequest(id));\n  //   }\n  //   else{\n  //     networkService.send(CommentService.getLikeCommentRequest(id));  \n  //   }\n  // };\n\n  // $scope.deleteComment = function(id) {\n  //   console.log(\"deleteComment(\" + id + \")\");\n  //   if ($scope.commentsArray.length === 1){\n  //     console.log(\"Deleting Final Comment\");\n  //     lastComment = true;\n  //   }\n  //   $scope.innerButtonTapped = true;\n  //   networkService.send(CommentService.deleteCommentRequest(id));\n  // };\n\n  // $scope.reportCommentAsSpam = function(id) {\n  //   console.log(\"reportCommentAsSpam(\" + id + \")\");\n  //   $scope.innerButtonTapped = true;\n  //   networkService.send(CommentService.flagCommentRequest(id)); \n  // };\n\n  // $scope.goToRepliesWithKeyboardTriggered = function(id) {\n  //   // event.cancelBubble = true;\n  //   // if(event.stopPropagation) event.stopPropagation();\n\n  //   // console.log(\"TopicController.goToRepliesWithKeyboardTriggered(\" + id + \")\");\n  //   TopicService.directComment = true;\n  //   if (HTML5_LOC){\n  //     $location.path(\"/post/\" + id);\n  //   } else {\n  //     // $window.location = \"#/post/\" + id;\n  //     $state.go('post', {postID: id});\n  //   }\n  // };\n\n  // $scope.secureLink = function(url, id) {\n  //   if (UserInfoService.isGuestUser()){\n  //     return \"\";\n  //   } else {\n  //     return url + id;\n  //   }\n  // };\n\n  // var notifyNewComments = function() {\n  //   if($scope.commentsArray == undefined)\n  //   {\n  //     updateComments();\n  //   }\n  //   else {\n  //     var commentsdata = CommentService.comments();\n  //     var len = commentsdata.length;\n  //     var pinIndex = CommentService.getNumPinComments();\n  //     if($scope.commentsArray.length < len){\n  //       if(!UserInfoService.isCurrentUser(commentsdata[pinIndex].author.id)){\n  //         $scope.showNewCommentsIndicator = true;\n  //       }\n  //       else {\n  //         updateComments();\n  //       }\n  //     }\n  //     else{\n  //       updateComments();\n  //     }\n  //   }\n  // };\n\n  TopicService.registerObserverCallback(updateTopic);\n  // CommentService.registerObserverCallback(notifyNewComments);\n  // CommentService.registerObserverCallback(updateComments, true);\n\n  // $scope.trustSrc = function(src) {\n  //   return $sce.trustAsResourceUrl(src);\n  // }\n\n  // CONTENT TABS\n  $scope.switchTabs = function(tab) {\n    if (tab === 'chat'){\n      $('#chatTab').addClass('selectedTab');\n      $('#videoTab').removeClass('selectedTab');\n      $('#socialTab').removeClass('selectedTab');\n      $state.go('topic.chat');\n      $(document).scrollTop(0);\n      updateTopic();\n    }\n    if (tab === 'video'){\n      $('#chatTab').removeClass('selectedTab');\n      $('#videoTab').addClass('selectedTab');\n      $('#socialTab').removeClass('selectedTab');\n      $state.go('topic.video');\n      $(document).scrollTop(0);\n    }\n    if (tab === 'social'){\n      $('#chatTab').removeClass('selectedTab');\n      $('#videoTab').removeClass('selectedTab');\n      $('#socialTab').addClass('selectedTab');\n      $state.go('topic.social');\n      $(document).scrollTop(0);\n    }\n  };\n\n  $scope.initializeTab = function() {\n    console.log(\"Initializing Tabs\");\n    if ($state.includes(\"topic.chat\")){\n      console.log(\"In Chat\");\n      $('#chatTab').addClass('selectedTab');\n    }\n    else if ($state.includes(\"topic.video\")){\n      console.log(\"In Video\");\n      $('#videoTab').addClass('selectedTab');\n    }\n    else if ($state.includes(\"topic.social\")){\n      console.log(\"In Social\");\n      $('#socialTab').addClass('selectedTab');\n    }\n  };\n\n  var _channelId = ChannelService.getChannel();\n  TopicService.setChannel(_channelId);\n\n  function debounce(func, wait, immediate) {\n    var timeout;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  };\n\n  var docVarsSet = false;\n  var tabs,\n      tabContainer,\n      tabsTop,\n      tabsHeight,\n      inputHeight,\n      clientHeight,\n      docHeight,\n      headerHeight;\n  var debugObj;\n  $scope.setDocVars = function() {\n    console.log(\"Setting Doc Vars\");\n    if (!docVarsSet){\n      tabs = $('#inputControls');\n      tabContainer = $('.tabContainer');\n      tabsTop = tabs.offset().top;\n      tabsHeight = tabContainer.height();\n      inputHeight = tabs.height();\n      clientHeight = document.documentElement.clientHeight;\n      docHeight = $(document).height();\n      docVarsSet = true;\n      if ($scope.isSmartStadiumUser){\n        headerHeight = 54;\n      } else if ($scope.isPeelUser){\n        headerHeight = 54;\n      } else {\n        headerHeight = 0;\n      }\n      debugObj = {\n        tabs: tabs,\n        tabsTop: tabsTop,\n        inputHeight: inputHeight,\n        tabContainer: tabContainer,\n        tabsHeight: tabsHeight,\n        clientHeight: clientHeight,\n        docHeight: docHeight,\n        headerHeight: headerHeight\n      }\n    }\n  };\n\n  var fixed = false;\n  var watchScroll = function watchScroll() {\n    console.log(\"Tabs Top: \", tabsTop, debugObj);\n    if ($scope.showNewCommentsIndicator){\n      $scope.showNewCommentsIndicator = false;\n    }\n      if ($(document).scrollTop() > (tabsTop - headerHeight) && (docHeight - clientHeight) > (tabsTop + inputHeight - tabsHeight)) {\n        tabs.addClass('fixTabsPeel');\n        tabs.css('top',headerHeight);\n        tabContainer.addClass('fixTabContainer');\n        $('.commentsContainer').css('padding-top',$('#inputControls').height());\n        fixed = true;\n      } else if (fixed) {\n        tabs.removeClass('fixTabsPeel');\n        tabs.css('top','');\n        tabContainer.removeClass('fixTabContainer');\n        $('.commentsContainer').css('padding-top','');\n        fixed = false;\n      }\n  };\n\n  $(document).off('scroll');\n  $(document).on('scroll', watchScroll);\n\n\n}]);\n\n","angular.module('ChatModule', ['NetworkModule','AuthModule','SocialModule'])\n.controller('ChatController', ['$state','$stateParams','$sce','$window','$timeout','CommentService','ChannelService','TopicService','networkService','URIHelper','UserInfoService','UserAgentService',\n  function ($state,$stateParams,$sce,$window,$timeout,CommentService,ChannelService,TopicService,networkService,URIHelper,UserInfoService,UserAgentService) {\n\n    // Chat Initialization\n    var _this = this;\n    var lastComment = false;\n    _this.newCommentsAvailable = false;\n\n    if (!this.commentsArray){\n      this.loading = true;\n    }\n\n    function init() {\n      if (NETWORK_DEBUG) console.log(\"Init Chat for Topic: \", $stateParams.topicID)\n      networkService.send(CommentService.getCommentsRequest($stateParams.topicID));\n    }\n\n    // Comment Loading\n    function updateComments(){\n      var commentsdata = CommentService.comments();\n      if (commentsdata != undefined && (commentsdata.length > 0 || lastComment === true)){\n        lastComment = false;\n        var len = commentsdata.length;\n\n        _this.commentsArray = [];\n\n        for(i=0;i<len;i++){\n          var tempComment = {};\n          tempComment = commentsdata[i];\n          tempComment.postAuthorName = commentsdata[i].author.name;\n          tempComment.postAuthorPhoto = commentsdata[i].author.photo;\n          tempComment.isMyComment = UserInfoService.isCurrentUser(commentsdata[i].author.id);\n\n          tempComment.likeCount = commentsdata[i].metrics.likes;\n          tempComment.replyCount = commentsdata[i].metrics.replies;\n\n          tempComment.postTimestamp = commentsdata[i].createdAt;\n          if (tempComment.type === 'media'){\n            tempComment.mediaUrl = commentsdata[i].mediaUrl;\n            tempComment.mediaAspectFeed = commentsdata[i].mediaAspectFeed;\n            tempComment.mediaAspectFull = commentsdata[i].mediaAspectFull;\n            tempComment.mediaAspectRatio = commentsdata[i].mediaAspectRatio;\n            tempComment.mediaOrientation = commentsdata[i].mediaOrientation;\n            tempComment.mediaThumbUrl = commentsdata[i].mediaThumbUrl;\n          }\n          tempComment.isLiked = commentsdata[i].signal.like;\n\n          if (tempComment.type === 'embed'){\n            tempComment.shared = true;\n            tempComment.embed = commentsdata[i].embed;\n            tempComment.embed.embedCreatedAt = commentsdata[i].embedCreatedAt;\n            tempComment.embed.embedCreatedAtFull = commentsdata[i].embedCreatedAtFull;\n            tempComment.embedType = commentsdata[i].embedType;\n            \n            if (tempComment.embedType === 'media' || tempComment.embedType === 'link'){\n              tempComment.mediaUrl = commentsdata[i].embedMedia.mediaUrl;\n              tempComment.mediaThumbUrl = commentsdata[i].embedMedia.mediaThumbUrl;\n              tempComment.mediaAspectFeed = commentsdata[i].embedMedia.mediaAspectFeed;\n              tempComment.mediaAspectFull = commentsdata[i].embedMedia.mediaAspectFull;\n              tempComment.mediaAspectRatio = commentsdata[i].embedMedia.mediaAspectRatio;\n              tempComment.mediaOrientation = commentsdata[i].embedMedia.mediaOrientation;\n            }\n\n            if (tempComment.providerName === \"Twitter\"){\n              tempComment.embed.embedLogo = \"img/twitterLogo@2x.png\";\n            } else {\n              tempComment.embed.embedLogo = commentsdata[i].embed.provider.logo;\n            }\n\n            if (commentsdata[i].embed.type === 'link' && commentsdata[i].embed.playable === true){\n              tempComment.embedHtml = commentsdata[i].embedHtml;\n            }\n          }\n          _this.commentsArray.push(tempComment);\n        }\n        if (NETWORK_DEBUG) console.log(\"Comments Array: \", _this.commentsArray);\n      }\n    }\n\n    this.loadRemainingComments = function() {\n      console.log(\"LOADING REST OF COMMENTS...\");\n      if (!CommentService.loadedComments()){\n        networkService.send(CommentService.getCommentsRequest($stateParams.topicID));\n        CommentService.setLoadedComments(true);\n        _this.loadedAllComments = true;\n      }\n    };\n\n    this.doneLoading = function() {\n      _this.loading = false;\n    };\n\n    this.showNewComments = function() {\n      _this.newCommentsAvailable = false;\n      updateComments();\n      $(document).scrollTop(0);\n    };\n\n    function notifyNewComments() {\n      if(!_this.commentsArray){\n        updateComments();\n      } else {\n        var commentsData = CommentService.comments();\n        var len = commentsData.length;\n        var pinIndex = CommentService.getNumPinComments();\n        if (_this.commentsArray.length < len){\n          if (!UserInfoService.isCurrentUser(commentsData[pinIndex].author.id)){\n            _this.newCommentsAvailable = true;\n          } else {\n            updateComments();\n          }\n        } else {\n          updateComments();\n        }\n      }\n    }\n\n    CommentService.registerObserverCallback(notifyNewComments);\n    CommentService.registerObserverCallback(updateComments, true);\n\n    this.trustSrc = function(src) {\n      return $sce.trustAsResourceUrl(src);\n    }\n\n    // Chat Navigation\n    this.viewPost = function(e, id) {\n      if ($(e.target).is('a')){\n        return;\n      }\n      var postParams = $stateParams;\n      postParams.postID = id;\n      $state.go('post', postParams);\n    };\n\n    this.replyDirectToPost = function(id) {\n      TopicService.directComment = true;\n      var postParams = $stateParams;\n      postParams.postID = id;\n      $state.go('post', postParams);\n    };\n\n    // Comment Operations\n    this.updateLikeComment = function(id) {\n      if (NETWORK_DEBUG) console.log(\"Like Comment: \", id);\n      if (CommentService.isCommentLiked(id)){\n        networkService.send(CommentService.getUnlikeCommentRequest(id));\n      } else {\n        networkService.send(CommentService.getLikeCommentRequest(id));  \n      }\n    };\n\n    this.deleteComment = function(id) {\n      if (NETWORK_DEBUG) console.log(\"Delete Comment: \", id);\n      if (_this.commentsArray.length === 1){\n        if (NETWORK_DEBUG) console.log(\"Deleting Final Comment\");\n        lastComment = true;\n      }\n      networkService.send(CommentService.deleteCommentRequest(id));\n    };\n\n    this.reportCommentAsSpam = function(id) {\n      if (NETWORK_DEBUG) console.log(\"Report Comment As Spam: \", id);\n      networkService.send(CommentService.flagCommentRequest(id)); \n    };\n\n    init();\n\n}]);\n","angular.module(\"VideoModule\", [\"NetworkModule\",\"ChannelModule\",\"TopicModule\"])\n.controller(\"VideoController\", [\"$state\",\"$stateParams\",\"$sce\",\"$window\",\"$http\",\"VideoService\",\"networkService\",\"ChannelService\",\"TopicService\",\"DateUtilityService\",\"CommentService\",\"URIHelper\",\"UserInfoService\",\n  function ($state,$stateParams,$sce,$window,$http,VideoService,networkService,ChannelService,TopicService,DateUtilityService,CommentService,URIHelper, UserInfoService){\n\n    var _this = this;\n    if (!this.videoArray){\n      this.loading = true;\n    }\n    if (!!this.videoArray){\n      updateTimestamps();\n    }\n    VideoService.resetVideoOffset();\n    VideoService.registerObserverCallback(function(){updateFeed();});\n\n\n    this.loadContent = function(offset) {\n      var channelID = $stateParams.channel || ChannelService.getChannel()||TopicService.getChannelId();\n      console.log(\"LOADING VIDEO: \", channelID);\n      networkService.send(VideoService.getVideoDataRequest(channelID,offset));\n    };\n    this.loadContent();\n\n    function updateFeed() {\n      console.log(\"Updating Video Feed\");\n      // Get Appropriate Content\n      var feedData,\n          existingLength,\n          tabArray;\n      feedData = VideoService.videoArray();\n      _this.videoArray = _this.videoArray || [];\n      existingLength = _this.videoArray.length;\n      tabArray = _this.videoArray;\n\n      var len = feedData.length;\n      if (!!feedData && len > 0){\n        // console.log(\"Feed Data: \", feedData, \" Type: \", tab);\n\n        for (var i = 0; i < len; i++){\n          var tempItem = feedData[i];\n\n          // Check to See if Item Already Exists in Scope Array\n          var itemExists = false;\n          for (var j = 0; j < existingLength; j++){\n            if (tempItem.id === tabArray[j].id){\n              itemExists = true;\n            }\n          }\n          // If Exists, Skip To Next Item\n          if (itemExists){\n            continue;\n          }\n          \n          tempItem.postAuthorName = feedData[i].embedAuthor.name;\n          tempItem.postAuthorAlias = feedData[i].embedAuthor.alias;\n          tempItem.postAuthorPhoto = feedData[i].embedAuthor.photo;\n          tempItem.tweetId = feedData[i].tweet.id;\n          \n          tempItem.postTimestamp = feedData[i].createdAt;\n          tempItem.providerName = feedData[i].embedProvider.name;\n          tempItem.html = feedData[i].embedText;\n          tempItem.retweetCount = feedData[i].tweet.metrics.retweetCount;\n          tempItem.likeCount = feedData[i].tweet.metrics.likeCount;\n          tempItem.replyCount = feedData[i].tweet.metrics.replyCount;\n\n          // Embed Object for Sharing\n          tempItem.embed = feedData[i].embed;\n          tempItem.embed.embedCreatedAt = feedData[i].embedCreatedAt;\n          // tempItem.embed.embedCreatedAtFull = feedData[i].embedCreatedAtFull;\n\n          if (tempItem.providerName === \"Twitter\"){\n            tempItem.providerLogo = \"img/twitterLogo@2x.png\";\n            tempItem.embed.provider.logo = \"img/twitterLogo@2x.png\";\n          } else {\n            tempItem.providerLogo = feedData[i].embedProvider.logo;\n            tempItem.embed.provider.logo = feedData[i].embedProvider.logo;\n          }\n\n          tempItem.embedType = feedData[i].embedType;\n          tempItem.embedUrl = feedData[i].embedUrl;\n          if (feedData[i].embedType === \"link\" && feedData[i].embedPlayable === true){\n            tempItem.embedHtml = feedData[i].embedHtml;\n            tempItem.embedPlayable = true;\n          }\n          if (feedData[i].embedType === \"media\" || feedData[i].embedType === \"link\"){\n            tempItem.mediaType = feedData[i].embedMedia.mediaType;\n            tempItem.mediaUrl = feedData[i].embedMedia.mediaUrl;\n            tempItem.mediaThumbUrl = feedData[i].embedMedia.mediaThumbUrl;\n            tempItem.mediaAspectRatio = feedData[i].embedMedia.mediaAspectRatio;\n            tempItem.mediaAspectFeed = feedData[i].embedMedia.mediaAspectFeed;\n            tempItem.mediaAspectFull = feedData[i].embedMedia.mediaAspectFull;\n            tempItem.mediaOrientation = feedData[i].embedMedia.mediaOrientation;\n          }\n\n          _this.videoArray.push(tempItem);\n          if (NETWORK_DEBUG && i === len - 1){\n            _this.loadingVideo = false;\n            console.log(\"Video Array: \", _this.videoArray);\n          }\n        }\n      }\n    };\n\n    function trustSrc(src) {\n      return $sce.trustAsResourceUrl(src);\n    };\n\n    function updateTimestamps(){\n      for (var i = 0; i < _this.videoArray.length; i++){\n        _this.videoArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.videoArray[i].createdAtFull);\n      }\n    };\n\n    \n    // Limit Rate that Function Can be Called\n    function debounce(func, wait, immediate) {\n      var timeout;\n      return function() {\n        var context = this, args = arguments;\n        var later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    var watchContentScroll = debounce(function() {\n      var currentScroll = $(document).height() - clientHeight - 50;\n      if ($(document).scrollTop() > currentScroll && currentScroll > 500) {\n        // We are Loading More Content -->\n        // Base offset on Current Length of Scope Array\n        _this.loadContent(_this.videoArray.length);\n      }\n    }, 100);\n\n    $(document).on('scroll', watchContentScroll);\n\n    this.retweetPost = function(id) {\n      $http({\n        method: 'GET',\n        url: 'https://twitter.com/intent/retweet?tweet_id=' + id,\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    };\n\n    this.shareTweetToChat = function (embed) {\n      _this.embedShareContent = embed;\n      _this.showShareDialog = true;\n      console.log(\"Embed Object: \", embed);\n      if (URIHelper.isPeelUser()){\n        var fullClient = document.documentElement.clientHeight - 54;\n        console.log(\"fullClient Height: \", fullClient);\n        setTimeout(function(){\n          $('#sharePreviewContainer').css({top: '54px'}).height(fullClient);\n        },25);\n      }\n    };\n\n    this.submitSharedPost = function (commentData,embedData) {\n      var topicID = $stateParams.topicID;\n      console.log(\"topicID From Parent: \", topicID);\n      networkService.send(CommentService.postCommentRequestForShare(topicID,commentData,embedData));\n      _this.showShareDialog = false;\n      $state.go('topic.chat', $stateParams);\n    };\n\n    console.log(\"WAY BEFOREEEE\");\n    if (!window.FB){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n    }\n\n    window.fbAsyncInit = function() {\n      console.log(\"BEFOREEEE\");\n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n      console.log(\"AFTERRRRR\");\n    };\n\n    this.shareToFacebook = function (id,embedUrl) {\n      FB.ui({\n        method: 'share',\n        href: embedUrl\n      }, function (response){\n        // Keep Track of User Shares to Facebook?\n        console.log(\"FB Response Post-Share: \", response);\n      });\n    };\n\n    this.exitShare = function () {\n      _this.showShareDialog = false;\n    };\n\n    this.highlightPost = function(){\n      $('#postShareContent').css('color','rgb(22,189,231)');\n    };\n\n    this.unhighlightPost = function(){\n      $('#postShareContent').css('color','rgb(211,214,215)');\n    };\n    \n    this.doneLoading = function() {\n      _this.loading = false;\n    };\n\n    this.secureLink = function(url, id) {\n      if (UserInfoService.isGuestUser()){\n        return \"\";\n      } else {\n        return url + id;\n      }\n    };\n\n}]);\n\n","angular.module(\"SocialModule\", [\"NetworkModule\",\"ChannelModule\",\"TopicModule\"])\n.controller(\"SocialController\", [\"$state\",\"$stateParams\",\"$sce\",\"$window\",\"$http\",\"SocialService\",\"networkService\",\"ChannelService\",\"TopicService\",\"DateUtilityService\",\"CommentService\",\"URIHelper\",\"UserInfoService\",\n  function ($state,$stateParams,$sce,$window,$http,SocialService,networkService,ChannelService,TopicService,DateUtilityService,CommentService,URIHelper,UserInfoService){\n\n    var _this = this;\n    if (!this.socialArray){\n      this.loading = true;\n    }\n    if (!!this.socialArray){\n      updateTimestamps();\n    }\n    SocialService.resetSocialOffset();\n    SocialService.registerObserverCallback(function(){updateFeed();});\n\n\n    this.loadContent = function(offset) {\n      var channelID = $stateParams.channel || ChannelService.getChannel()||TopicService.getChannelId();\n      console.log(\"LOADING SOCIAL: \", channelID);\n      networkService.send(SocialService.getSocialDataRequest(channelID,offset));\n    };\n    this.loadContent();\n\n    function updateFeed() {\n\n      // Get Appropriate Content\n      var feedData,\n          existingLength,\n          tabArray;\n      feedData = SocialService.socialArray();\n      _this.socialArray = _this.socialArray || [];\n      existingLength = _this.socialArray.length;\n      tabArray = _this.socialArray;\n\n      var len = feedData.length;\n      if (!!feedData && len > 0){\n        // console.log(\"Feed Data: \", feedData, \" Type: \", tab);\n\n        for (var i = 0; i < len; i++){\n          var tempItem = feedData[i];\n\n          // Check to See if Item Already Exists in Scope Array\n          var itemExists = false;\n          for (var j = 0; j < existingLength; j++){\n            if (tempItem.id === tabArray[j].id){\n              itemExists = true;\n            }\n          }\n          // If Exists, Skip To Next Item\n          if (itemExists){\n            continue;\n          }\n          \n          tempItem.postAuthorName = feedData[i].embedAuthor.name;\n          tempItem.postAuthorAlias = feedData[i].embedAuthor.alias;\n          tempItem.postAuthorPhoto = feedData[i].embedAuthor.photo;\n          tempItem.tweetId = feedData[i].tweet.id;\n          \n          tempItem.postTimestamp = feedData[i].createdAt;\n          tempItem.providerName = feedData[i].embedProvider.name;\n          tempItem.html = feedData[i].embedText;\n          tempItem.retweetCount = feedData[i].tweet.metrics.retweetCount;\n          tempItem.likeCount = feedData[i].tweet.metrics.likeCount;\n          tempItem.replyCount = feedData[i].tweet.metrics.replyCount;\n\n          // Embed Object for Sharing\n          tempItem.embed = feedData[i].embed;\n          tempItem.embed.embedCreatedAt = feedData[i].embedCreatedAt;\n          // tempItem.embed.embedCreatedAtFull = feedData[i].embedCreatedAtFull;\n\n          if (tempItem.providerName === \"Twitter\"){\n            tempItem.providerLogo = \"img/twitterLogo@2x.png\";\n            tempItem.embed.provider.logo = \"img/twitterLogo@2x.png\";\n          } else {\n            tempItem.providerLogo = feedData[i].embedProvider.logo;\n            tempItem.embed.provider.logo = feedData[i].embedProvider.logo;\n          }\n\n          tempItem.embedType = feedData[i].embedType;\n          tempItem.embedUrl = feedData[i].embedUrl;\n          if (feedData[i].embedType === \"link\" && feedData[i].embedPlayable === true){\n            tempItem.embedHtml = feedData[i].embedHtml;\n            tempItem.embedPlayable = true;\n          }\n          if (feedData[i].embedType === \"media\" || feedData[i].embedType === \"link\"){\n            tempItem.mediaType = feedData[i].embedMedia.mediaType;\n            tempItem.mediaUrl = feedData[i].embedMedia.mediaUrl;\n            tempItem.mediaThumbUrl = feedData[i].embedMedia.mediaThumbUrl;\n            tempItem.mediaAspectRatio = feedData[i].embedMedia.mediaAspectRatio;\n            tempItem.mediaAspectFeed = feedData[i].embedMedia.mediaAspectFeed;\n            tempItem.mediaAspectFull = feedData[i].embedMedia.mediaAspectFull;\n            tempItem.mediaOrientation = feedData[i].embedMedia.mediaOrientation;\n          }\n\n          _this.socialArray.push(tempItem);\n          if (NETWORK_DEBUG && i === len - 1){\n            _this.loadingSocial = false;\n            console.log(\"Social Array: \", _this.socialArray);\n          }\n        }\n      }\n    };\n\n    function trustSrc(src) {\n      return $sce.trustAsResourceUrl(src);\n    };\n\n    function updateTimestamps(){\n      for (var i = 0; i < _this.socialArray.length; i++){\n        _this.socialArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.socialArray[i].createdAtFull);\n      }\n    };\n\n    \n    // Limit Rate that Function Can be Called\n    function debounce(func, wait, immediate) {\n      var timeout;\n      return function() {\n        var context = this, args = arguments;\n        var later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    var watchContentScroll = debounce(function() {\n      var currentScroll = $(document).height() - clientHeight - 50;\n      if ($(document).scrollTop() > currentScroll && currentScroll > 500) {\n        // We are Loading More Content -->\n        // Base offset on Current Length of Scope Array\n        _this.loadContent(_this.socialArray.length);\n      }\n    }, 100);\n\n    $(document).on('scroll', watchContentScroll);\n\n    this.retweetPost = function(id) {\n      $http({\n        method: 'GET',\n        url: 'https://twitter.com/intent/retweet?tweet_id=' + id,\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    };\n\n    this.shareTweetToChat = function (embed) {\n      _this.embedShareContent = embed;\n      _this.showShareDialog = true;\n      console.log(\"Embed Object: \", embed);\n      if (URIHelper.isPeelUser()){\n        var fullClient = document.documentElement.clientHeight - 54;\n        console.log(\"fullClient Height: \", fullClient);\n        setTimeout(function(){\n          $('#sharePreviewContainer').css({top: '54px'}).height(fullClient);\n        },25);\n      }\n    };\n\n    this.submitSharedPost = function (commentData,embedData) {\n      var topicID = $stateParams.topicID;\n      console.log(\"topicID From Parent: \", topicID);\n      networkService.send(CommentService.postCommentRequestForShare(topicID,commentData,embedData));\n      _this.showShareDialog = false;\n      $state.go('topic.chat', $stateParams);\n    };\n\n    console.log(\"WAY BEFOREEEE\");\n    if (!window.FB){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n    }\n\n    window.fbAsyncInit = function() {\n      console.log(\"BEFOREEEE\");\n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n      console.log(\"AFTERRRRR\");\n    };\n\n    this.shareToFacebook = function (id,embedUrl) {\n      FB.ui({\n        method: 'share',\n        href: embedUrl\n      }, function (response){\n        // Keep Track of User Shares to Facebook?\n        console.log(\"FB Response Post-Share: \", response);\n      });\n    };\n\n    this.exitShare = function () {\n      _this.showShareDialog = false;\n    };\n\n    this.highlightPost = function(){\n      $('#postShareContent').css('color','rgb(22,189,231)');\n    };\n\n    this.unhighlightPost = function(){\n      $('#postShareContent').css('color','rgb(211,214,215)');\n    };\n    \n    this.doneLoading = function() {\n      _this.loading = false;\n    };\n\n    this.secureLink = function(url, id) {\n      if (UserInfoService.isGuestUser()){\n        return \"\";\n      } else {\n        return url + id;\n      }\n    };\n\n}]);\n\n","angular.module(\"UserInput\", [\"NetworkModule\",\"TopicModule\",\"MediaModule\",\"angularFileUpload\"])\n  .controller(\"UserInputController\", [\"$scope\",\"$window\",\"$timeout\",\"$stateParams\",\"networkService\",\"TopicService\",\"CommentService\",\"ReplyService\",\"UserInfoService\",\"FileUploader\",\"MUService\",\n    function ($scope,$window,$timeout,$stateParams,networkService,TopicService,CommentService,ReplyService,UserInfoService,FileUploader,MUService){\n\n      // ATTACH MEDIA\n      var MUS_SERVER_URI;\n      if (DEV_BUILD === true){\n        MUS_SERVER_URI = 'https://dev.fankave.com:8080';\n      } else {\n        MUS_SERVER_URI = 'https://mus.fankave.com';\n      }\n      var UPLOAD_URL = '/v1.0/media/upload';\n\n      var uploader = this.uploader = new FileUploader({\n        url: MUS_SERVER_URI + UPLOAD_URL,\n        autoUpload: false,\n        removeAfterUpload: true,\n        queueLimit: 1\n      });\n\n      var _this = this;\n      this.isHTML5 = this.uploader.isHTML5;\n      this.mediaType;\n      this.uploader.filters.push({\n        name: 'customFilter',\n        fn: function(item /*{File|FileLikeObject}*/, options) {\n          var itemType = item.type;\n          if(itemType.indexOf(\"image\") != -1){\n            _this.mediaType = \"image\";\n            return this.queue.length < 1 && (item.size < 5242880);\n          }\n          else if(itemType.indexOf(\"video\") != -1){\n            _this.mediaType = \"video\";\n            return this.queue.length < 1 && (item.size < 268435456);\n          }\n          return this.queue.length < 10;\n        }\n      });\n\n      // MEDIA PREVIEW\n      var dontAdd;\n      function generateImagePreview(evt) {\n        var f = evt.target.files[0];\n        console.log('F:', f);\n\n        if (!f.type.match('image.*')) {\n          var previewSrc = \"img/videoPrevIcon@2x.png\";\n        }\n\n        var reader = new FileReader();\n        reader.onload = (function (theFile) {\n          return function (e) {\n            var span = document.createElement('span');\n            span.innerHTML = ['<img class=\"thumb\" src=\"',\n              previewSrc || e.target.result,\n              '\"/>'].join('');\n            if ($scope.mobileBrowser === true && !dontAdd){\n              document.getElementById('mobilePreview').insertBefore(span, null);\n            } else if (!dontAdd) {\n              document.getElementById('preview').insertBefore(span, null);\n            }\n            };\n          })(f);\n          reader.readAsDataURL(f);\n        };\n\n      document.getElementById('fileUpload').addEventListener('change',\n        generateImagePreview, false);\n\n      this.removeMedia = function(){\n        _this.uploader.clearQueue();\n        var e = $('#fileUpload');\n        e.wrap('<form>').closest('form').get(0).reset();\n        e.unwrap();\n        dontAdd = false;\n        _this.unhighlightPost();\n      };\n\n      // CALLBACKS\n      this.fileMaxExceeded = false;\n      this.uploader.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\n        dontAdd = true;\n        console.info('onWhenAddingFileFailed', item, filter, options);\n        if (!_this.isHTML5){\n          console.log(\"Browser Doesn't Support HTML5\");\n          _this.HTML5warning = true;\n        } else if (_this.uploader.queue.length < 1) {\n          _this.fileMaxExceeded = true;\n          _this.removeMedia();\n          $timeout(function(){_this.fileMaxExceeded = false;}, 5000);\n        }\n      };\n      this.uploader.onAfterAddingFile = function(fileItem) {\n        console.info('onAfterAddingFile', fileItem);\n        _this.highlightPost();\n      };\n      this.uploader.onAfterAddingAll = function(addedFileItems) {\n        console.info('onAfterAddingAll', addedFileItems);\n      };\n      this.uploader.onBeforeUploadItem = function(item) {\n        var user = UserInfoService.getUserCredentials();\n        item.headers = {  \n            'X-UserId': user.userId,\n            'X-SessionId': user.sessionId,\n            'X-AccessToken': user.accessToken};\n        item.formData =[{'type':item._file.type},{'size': item._file.size},{'file': item._file}];\n\n        console.info('onBeforeUploadItem', item);\n      };\n      this.uploader.onProgressItem = function(fileItem, progress) {\n        console.info('onProgressItem', fileItem, progress);\n      };\n      this.uploader.onProgressAll = function(progress) {\n        console.info('onProgressAll', progress);\n      };\n      this.uploader.onSuccessItem = function(fileItem, response, status, headers) {\n        console.info('onSuccessItem', fileItem, response, status, headers);\n        networkService.send(MUService.postMediaRequest(response));\n      };\n      this.uploader.onErrorItem = function(fileItem, response, status, headers) {\n        console.info('onErrorItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCancelItem = function(fileItem, response, status, headers) {\n        console.info('onCancelItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCompleteItem = function(fileItem, response, status, headers) {\n        console.info('onCompleteItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCompleteAll = function() {\n        console.info('onCompleteAll');\n        _this.uploader.clearQueue();\n        MUService.resetCommentParams();\n      };\n\n      console.info('uploader', this.uploader);\n\n      // POST COMMENT\n      this.postComment = function(commentText, isComment) {\n        // console.log(\"In New Controller: \", isComment);\n        if (_this.uploader.queue.length > 0 && isComment){\n          MUService.setCommentParams($scope.topicID, commentText, true);\n        } else if (_this.uploader.queue.length > 0 && !isComment){\n          MUService.setCommentParams($scope.topicId, commentText, false, $scope.postID);\n        } else if (!!commentText && commentText !== \"\" && isComment){\n          networkService.send(CommentService.postCommentRequest($scope.topicID, commentText));\n        } else if (!!commentText && commentText !== \"\" && !isComment){\n          networkService.send(ReplyService.getPostReplyRequest($scope.topicId, $scope.postID, commentText));\n        }\n        _this.uploader.uploadAll();\n        $scope.commentText = \"\";\n        $('input#topicCommentField').blur();\n        $('#postCommentButton').css('color','rgb(211,214,215)');\n        if (isComment){\n          $(document).scrollTop(0);\n        } else {\n          window.scrollTo(0, document.body.scrollHeight);\n        }\n      };\n\n      this.highlightPost = function(){\n        console.log(\"Styling post\");\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      };\n\n      this.unhighlightPost = function(){\n        console.log(\"Styling post\");\n        $('#postCommentButton').css('color','rgb(211,214,215)');\n      };\n\n      this.mobileHighlightPost = function(){\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      }\n\n      this.mobileUnhighlightPost = function(){\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      }\n\n      $('input#topicCommentField').bind('focusin focus', function(e){\n        e.preventDefault();\n      });\n\n      $('input').bind('focusin focus', function(e){\n        e.preventDefault();\n      });\n\n    }]);","angular.module('Forum')\n.factory(\"UserAgentService\", [\"ForumStorage\",\"UserInfoService\",\n  function (ForumStorage,UserInfoService){\n\n    var _userAgent;\n\n    function getMobileUserAgent() {\n      var agent;\n      if (isMobileUser()){\n        if (/iPad|iPhone|iPod/i.test(navigator.userAgent) && !window.MSStream){\n          agent = 'iOS';\n        } else if (/Android/i.test(navigator.userAgent)){\n          agent = 'android';\n        } else if (/IEMobile/i.test(navigator.userAgent)){\n          agent = 'windows';\n        }\n      }\n      _userAgent = agent;\n      return agent;\n    }\n\n    function isMobileUser() {\n      var check = false;\n      (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\n      return check;\n    }\n\n    function isUserAgent(type) {\n      if (_userAgent === type){\n        return true;\n      }\n      return false;\n    }\n\n    return {\n      getMobileUserAgent: getMobileUserAgent,\n      isMobileUser: isMobileUser,\n      isUserAgent: isUserAgent\n    };\n\n}]);","angular.module(\"NetworkModule\", ['ngWebSocket'])\n.factory(\"networkService\",[\"$websocket\",\"$state\",\"DataService\",\"UserInfoService\",\n\nfunction ($websocket,$state,DataService,UserInfoService)\n{\n  var ws;\n\n  disconnectSocket = function(){\n    console.log(\"Disconnect Callback triggered\");\n    if(ws !== undefined) {\n      ws.close();\n      ws = undefined;\n    }\n  }\n\n  reconnectSocket = function(){\n    console.log(\"Reconnect Callback triggered\");\n    $state.reload();\n  }\n  \n  // window.document.addEventListener(visEvent, function(){\n  //     visChange(reconnectSocket, disconnectSocket);\n  //   });\n\n  function initSocket() { \n    ws = $websocket(getWebsocketUri());\n    DataService.setWatchTopic(false);\n    //Websocket callbacks below\n    ws.onOpen(function() {\n      console.log(\"Websocket Connected\");\n    });\n\n    ws.onClose(function(evt) {\n      ws = undefined;\n      console.log(\"Websocket Closed :\"+evt.data);\n    });\n\n    ws.onMessage(function(evt) {\n      if(NETWORK_DEBUG) console.log(\"Websocket Message Recieved :  \" +evt.data);\n      var responseJson = JSON.parse(evt.data);\n      var type = responseJson.rid;\n      if(type !== undefined){\n        if(type === \"channel\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Channel\");\n          DataService.setChannel(responseJson);\n        }\n        if(type === \"topic\" || type === \"score\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Topic\");\n          DataService.setTopic(responseJson);\n        }else if(type === \"comment\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Comments\");\n          DataService.setComments(responseJson);\n        }\n        else if(type === \"reply\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Reply\");\n          DataService.setReplies(responseJson);\n        }\n        else if(type === \"social\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Social\");\n          DataService.setSocial(responseJson);\n        }\n        else if(type === \"video\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Video\");\n          DataService.setVideo(responseJson);\n        }\n      }\n    });\n\n    ws.onError(function(evt) {\n      \n      console.log(\"Websocket OnError: \"+JSON.stringify(evt) );\n    });\n\n    function getWebsocketUri(){\n      var user = UserInfoService.getUserCredentials();\n      var socketUri = WEBSOCKET_BASE_URI+\n      'userId='+user.userId+\n      '&sessionId='+user.sessionId+\n      '&accessToken='+user.accessToken+\n      '/';\n      if(NETWORK_DEBUG) console.log(\"socketUri: \" + socketUri);\n      return socketUri;\n    }\n  }\n  return{\n    isSocketConnected:function(){\n      if(NETWORK_DEBUG){\n        if(ws!= null)\n        console.log(\"ws status : \"+ ws.readyState);\n        else\n          console.log(\"ws is null\");\n      }\n      if(ws != undefined && ws.readyState == ws.OPEN){\n        return true;\n      }\n      return false;\n    },\n    send:function(message) { \n      if(ws == undefined){ \n        initSocket();\n      }\n      ws.send(JSON.stringify(message));\n    },\n    init:initSocket\n  }\n}]);","angular.module('NetworkModule')\n.factory('ForumStorage', function () {\n\tvar localStorageAvailable = false;\n\tif(typeof(Storage) != undefined) {\n\t\tconsole.log(\"Local storage available :\"+ typeof(Storage));\n\t\tlocalStorageAvailable = true;\n\t}  \n\telse {\n\t\tconsole.log(\"Sorry! No Storage support on this browser..\");\n\t}\n\t\n\tfunction setToLocalStorage(key, value){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\tlocalStorage.setItem(key,value);\n\t}\n\t\n\tfunction getFromLocalStorage(key){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\treturn localStorage.getItem(key);\n\t\treturn undefined;\n\t}\n\t\n\tfunction clearStorage(){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\tlocalStorage.clear();\n\t}\n\t\n\treturn{\n\t\tgetFromLocalStorage:getFromLocalStorage,\n\t\tsetToLocalStorage:setToLocalStorage,\n\t\tclearStorage:clearStorage\n\t}\n\t\n\t\n\n});","angular.module('NetworkModule')\n.factory('ForumDeviceInfo', [\"ForumStorage\",\n\tfunction (ForumStorage) {\n\t//TODO : TEMP function to generate uuid. change this in final version\n\tfunction _p8(s) {\n\t\tvar p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n\t\treturn s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n\t}\n\tfunction generateUUID() {\n\t\tconsole.log(\"GEnerating UUID\");\n\t\tvar uuid = _p8() + _p8(true) + _p8(true) + _p8();\n\t\tconsole.log(\" UUID :\"+ uuid);\n\t\treturn uuid;\n\t}\n\n\treturn{\n\t\tgetDeviceId:function(){\n\t\t\tvar id = ForumStorage.getFromLocalStorage(\"forumUUID\");\n\t\t\tif(id == undefined || id.length <15){\n\t\t\t\tid = generateUUID();\n\t\t\t\tForumStorage.setToLocalStorage(\"forumUUID\",id);\n\t\t\t}\n\t\t\tconsole.log(\"generated ID : \"+ id);\n\t\t\treturn id;\n\n\t\t}\n\t}\n}]);\n","angular.module('NetworkModule')\n.factory('URIHelper', [\"ForumStorage\",\"$stateParams\",\n\tfunction (ForumStorage,$stateParams) {\n\n\tvar peelUserName;\n\tvar peelUserId;\n\tvar peelShowId;\n\n\tvar ssUserName;\n\tvar ssUserId;\n\n\tvar _MI16;\n\n\tfunction getUrlVars() {\n\t\t// var vars = [], hash;\n\t\t// var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\n\t\t// for (var i = 0; i < hashes.length; i++) {\n\t\t// \thash = hashes[i].split('=');\n\t\t// \tvars.push(hash[0]);\n\t\t// \tvars[hash[0]] = hash[1];\n\t\t// }\n\t\treturn $stateParams;\n\t}\n\t\n\t\n\n\treturn {\n\t\tisPeelUser:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif(vars[\"peel\"]){\n\t\t\t\tpeelUserId = vars[\"userId\"];\n\t\t\t\tpeelUserName = vars[\"userName\"];\n\t\t\t\tpeelShowId = vars[\"showId\"];\n\t\t\t\t//If diff previous peel user, clear storage\n\t\t\t\tvar prevPeelUser = ForumStorage.getFromLocalStorage(\"forumUserType\");\n\t\t\t\t// if(prevPeelUser != undefined && prevPeelUser == \"peel\" && ForumStorage.setToLocalStorage(\"forumPeelUserId\") != peelUserId)\n\t\t\t\t\t// ForumStorage.clearStorage();\n\t\t\t\tForumStorage.setToLocalStorage(\"forumPeelUserId\",peelUserId);\n\t\t\t\tForumStorage.setToLocalStorage(\"forumPeelShowId\",peelShowId);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\treturn false;\n\t\t},\n\t\tisSmartStadiumUser:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif(vars[\"smartStadium\"]){\n\t\t\t\tssUserId = vars[\"userId\"];\n\t\t\t\tssUserName = vars[\"userName\"];\n\t\t\t\tForumStorage.setToLocalStorage(\"forumSmartStadiumUserId\",ssUserId);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tisTechMUser:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif (vars[\"MI16\"]){\n\t\t\t\t_MI16 = true;\n\t\t\t\tForumStorage.setToLocalStorage(\"techMIUser\",true);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (_MI16){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetPeelUserId:function(){\n\t\t\treturn peelUserId;\n\t\t},\n\t\tgetPeelUserName:function(){\n\t\t\treturn peelUserName;\n\t\t},\n\t\tgetPeelShowId:function(){\n\t\t\treturn peelShowId;\n\t\t},\n\t\tgetPeelParams:function(){\n\t\t\treturn window.location.search.substring(1);\n\t\t},\n\t\tgetSSUserId:function(){\n\t\t\treturn ssUserId;\n\t\t},\n\t\tgetSSUserName:function(){\n\t\t\treturn ssUserName;\n\t\t}\n\n\n\t};\n\n}]);","angular.module('ChannelModule')\n.factory('ChannelService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\",\n  function (DateUtilityService,Bant,FDSUtility) {\n\n\n  var _channelId;\n  var _liveTopicId;\n\n  var observerCallbacks = []; \n\n  function setTopicData(topicData) \n  {\n    if(topicData.data != undefined){\n      _liveTopicId = topicData.data.id;\n      console.log(\"_liveTopicId : \"+ _liveTopicId);\n      notifyObservers();\n    }\n  }\n\n  function getLiveGameTopic(channelId){\n    var reqChannelId = channelId || _channelId;\n    var uri = \"/v1.0/channel/topic/show/\" + reqChannelId + \"?type=livegame\";\n    if(reqChannelId == \"404\" || reqChannelId == \"5066\")\n    uri = \"/v1.0/channel/topic/show/\" + reqChannelId;\n\n    var topicParams = {\"rid\": \"channel\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\":uri };\n    console.log(\"Ch.getLiveGameTopic: \", topicParams);\n    return topicParams;\n  }\n\n  //call this when you know 'data' has been changed\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n  \n  function registerObserverCallback(callback){\n    //register an observer\n    // console.log(\"topic callback registered\");\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  }\n\n  return {\n    setTopicData:setTopicData,\n    getLiveTopicId:function(){ return _liveTopicId;},\n    getLiveGameTopic:getLiveGameTopic,\n    setChannel: function(channelId){\n      _channelId = channelId;\n    },\n    getChannel: function(){\n      return _channelId;\n    },\n    registerObserverCallback:registerObserverCallback\n\n\n  };\n\n}]);","angular.module('TopicModule')\n.directive('scorecard', function() {\n  return {\n    restrict: 'E',\n    templateUrl: 'partials/scorecard.html'\n  }\n});","angular.module('TopicModule')\n.directive('secureClick', ['$state','$stateParams','UserInfoService',\n  function ($state, $stateParams, UserInfoService) {\n    return {\n      restrict: 'A',\n      link: function($scope, $elem, $attrs){\n        var element = $elem[0];\n        $(element).on('click', function(e){\n          e.preventDefault();\n          if (UserInfoService.isGuestUser()){\n            $state.go('login', $stateParams);\n          } else {\n            $scope.$eval($attrs.secureClick);\n          }\n        });\n      }\n    }\n}]);\n\nangular.module('TopicModule')\n.directive('secureFocus', ['$state','$stateParams','UserInfoService',\n  function ($state, $stateParams, UserInfoService) {\n    return {\n      restrict: 'A',\n      link: function($scope, $elem, $attrs){\n        var element = $elem[0];\n        $(element).on('focus', function(e){\n          e.preventDefault();\n          if (UserInfoService.isGuestUser()){\n            $state.go('login', $stateParams);\n          } else {\n            $scope.$eval($attrs.secureFocus);\n          }\n        });\n      }\n    }\n}]);\n\nangular.module('TopicModule')\n.directive('repeatFinishedNotify', function () {\n  return function ($scope, $element, $attrs) {\n    if ($scope.$last){\n      $scope.$eval($attrs.repeatFinishedNotify);\n    }\n  };\n});\n\nangular.module('TopicModule')\n.directive('embedSharedContent', ['UserAgentService',\n  function (UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=embedPost',\n      trustSource: '&'      \n    },\n    link: function(scope,elem,attr){\n      scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n    },\n    templateUrl: 'partials/shared.html'\n  };\n}]);\n\nangular.module('TopicModule')\n.directive('mediaPlayer', ['$sce', 'UserAgentService',\n  function ($sce, UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=',\n      vidIndex: '@'\n    },\n    link: function(scope,elem,attr) {\n\n      scope.isMobileUser = UserAgentService.isMobileUser();\n\n      scope.trustSrc = function(src){\n        return $sce.trustAsResourceUrl(src);\n      }\n\n      var video = elem[0].firstElementChild.childNodes[1];\n      var loadingSpinner = elem[0].firstElementChild.childNodes[7];\n      \n      // Video Loading Event Listeners\n      $(video).on('waiting', function() {\n        if (NETWORK_DEBUG)\n          console.log(\"Video Waiting\");\n        if (scope.isMobileUser){\n          loadingSpinner.className = 'media-loading-fullscreen';\n          loadingSpinner.style.zIndex = \"2147483647\";\n        } else {\n          loadingSpinner.className = 'media-loading';\n        }\n      });\n      $(video).on('stalled', function() {\n        if (NETWORK_DEBUG)\n          console.log(\"Video Stalled\");\n        if (scope.isMobileUser){\n          loadingSpinner.className = 'media-loading-fullscreen';\n          loadingSpinner.style.zIndex = \"2147483647\";\n        } else {\n          loadingSpinner.className = 'media-loading';\n        }\n      });\n      var canPlay;\n      $(video).on('canplay', function() {\n        canPlay = true;\n      });\n      $(video).on('playing', function() {\n        if (NETWORK_DEBUG)\n          console.log(\"Video Playing\");\n        loadingSpinner.className = 'media-loading-default';\n      });\n\n      scope.togglePlayPause = function(e) {\n        var thesePlayerNodes = elem[0].firstElementChild.childNodes;\n        var thisVideo = thesePlayerNodes[1];\n        var thisThumbnail = thesePlayerNodes[3];\n        var thisPlayBtn = thesePlayerNodes[5];\n        var thisLoading = thesePlayerNodes[7];\n\n        if (thisVideo.paused || thisVideo.ended){\n          thisPlayBtn.className = 'pause';\n          thisThumbnail.className = 'pause';\n          thisVideo.play();\n          if (scope.isMobileUser){\n            if (thisVideo.requestFullscreen){\n              thisVideo.requestFullscreen();\n            } else if (thisVideo.webkitRequestFullscreen){\n              thisVideo.webkitRequestFullscreen();\n            } else if (thisVideo.mozRequestFullScreen){\n              thisVideo.mozRequestFullScreen();\n            } else if (thisVideo.msRequestFullscreen){\n              thisVideo.msRequestFullscreen();\n            }\n          }\n        }\n        else {\n          thisLoading.className = 'media-loading-default';\n          thisPlayBtn.className = 'media-controls';\n          thisThumbnail.className = 'media-thumbnail';\n          thisVideo.pause();\n        }\n      }\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (NETWORK_DEBUG){\n          // console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-portrait-9x16\");\n          } else {\n            classStrings.push(\"video-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"video-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-landscape-16x9\");\n          } else {\n            classStrings.push(\"video-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, video) {\n        var thesePlayerNodes = elem[0].firstElementChild.childNodes;\n        var thisVideo = thesePlayerNodes[1];\n        var thisWidth = $(thisVideo).width();\n        if (NETWORK_DEBUG){\n          // console.log(\"Elem in setD: \", elem);\n          // console.log(\"PlayerNodes in setD: \", thesePlayerNodes);\n          // console.log(\"Video in setD: \", thisVideo);\n          // console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var styleObj = {};\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        styleObj['height'] = height;\n        if (!!video){\n          styleObj['background-image'] = 'url(' + video.mediaThumbUrl + ')';\n          styleObj['background-size'] = 'cover';\n          styleObj['background-position-y'] = setYOffset(video);\n          styleObj['background-position-x'] = setXOffset(video);\n        }\n        if (NETWORK_DEBUG){\n          // console.log(\"Set Dimensions Object: \", styleObj);\n        }\n        return styleObj;\n      }\n\n      function setYOffset(video){\n        var offset;\n        if (!!video.mediaAspectFeed.y){\n          offset = '-' + video.mediaAspectFeed.y + 'px';\n        }\n        else if (!!video.mediaAspectFull.y){\n          offset = '-' + video.mediaAspectFull.y + 'px';\n        }\n        return offset;\n      }\n\n      function setXOffset(video){\n        var offset;\n        if (!!video.mediaAspectFeed.x){\n          offset = '-' + video.mediaAspectFeed.x + 'px';\n        }\n        else if (!!video.mediaAspectFull.x){\n          offset = '-' + video.mediaAspectFull.x + 'px';\n        }\n        return offset;\n      }\n\n    },\n    templateUrl: 'partials/mediaPlayer.html'\n  };\n}]);\n\nangular.module('TopicModule')\n.directive('ngElementReady', [function() {\n  return {\n    priority: -1000,\n    restrict: \"A\",\n    link: function($scope, $element, $attributes) {\n        $scope.$eval($attributes.ngElementReady); // execute expression from attribute\n    }\n  };\n}]);\n\n","angular.module('TopicModule')\n.directive('embedPlayer', ['$sce', 'UserAgentService',\n  function ($sce, UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '='\n    },\n    link: function(scope,elem,attr) {\n\n      scope.isMobileUser = UserAgentService.isMobileUser();\n\n      scope.trustSrcHtml = function(src){\n        return $sce.trustAsHtml(src);\n      }\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (NETWORK_DEBUG){\n          // console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-portrait-9x16\");\n          } else {\n            classStrings.push(\"video-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"video-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-landscape-16x9\");\n          } else {\n            classStrings.push(\"video-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, video) {\n        var thesePlayerNodes = elem[0].childNodes;\n        var thisVideo = thesePlayerNodes[0];\n        var thisWidth = $(thisVideo).width();\n        if (NETWORK_DEBUG){\n          // console.log(\"PlayerNodes in setD: \", thesePlayerNodes);\n          // console.log(\"Video in setD: \", thisVideo);\n          // console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        var iframePlayer = thisVideo.childNodes[0];\n        $(iframePlayer).css('height',height);\n        if (NETWORK_DEBUG){\n          // console.log(\"Setting Height On: \", iframePlayer, height);\n        }\n      }\n\n    },\n    templateUrl: 'partials/embedPlayer.html'\n  };\n}]);","angular.module('TopicModule')\n.directive('imageControl', ['$sce',\n  function ($sce) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '='\n    },\n    link: function(scope,elem,attr) {\n\n      scope.imageClick = function(imageURL) {\n        event.cancelBubble = true;\n        if(event.stopPropagation) event.stopPropagation();\n\n        $.magnificPopup.open({\n          items: {\n            type:'image',\n            src: imageURL,\n          },\n          type: 'inline',\n          callbacks: {\n            open: function(){\n              $('body').bind('touchmove', function(e){e.preventDefault()});\n            },\n            close: function(){\n              $('body').unbind('touchmove');\n            }\n          }\n        });\n      };\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (NETWORK_DEBUG){\n          // console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"image-portrait-9x16\");\n          } else {\n            classStrings.push(\"image-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"image-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"image-landscape-16x9\");\n          } else {\n            classStrings.push(\"image-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, image) {\n        var thisImage = elem[0].childNodes[0];\n        var thisWidth = $(thisImage).width();\n        if (NETWORK_DEBUG){\n          // console.log(\"Image in setD: \", thisImage);\n          // console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var styleObj = {};\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        styleObj['height'] = height;\n        if (!!image){\n          styleObj['background-image'] = 'url(' + image.mediaUrl + ')';\n          styleObj['background-size'] = 'cover';\n          styleObj['background-position-y'] = setOffsets(image, 'y', height) || '';\n          styleObj['background-position-x'] = setOffsets(image, 'x', thisWidth) || '';\n        }\n\n        if (NETWORK_DEBUG){\n          // console.log(\"Set Dimensions Object: \", styleObj);\n        }\n        return styleObj;\n      }\n\n      function setOffsets(image, direction, ref){\n        var offset;\n        var offsetScale; \n        if (direction === 'y'){\n          if (!!image.mediaAspectFeed.y){\n            offsetScale = ref / image.mediaAspectFeed.h;\n            var scaledY = image.mediaAspectFeed.y * offsetScale;\n            offset = '-' + scaledY + 'px';\n          }\n        }\n        if (direction === 'x'){\n          if (!!image.mediaAspectFeed.x){\n            offsetScale = ref / image.mediaAspectFeed.w;\n            var scaledX = image.mediaAspectFeed.x * offsetScale;\n            offset = '-' + scaledX + 'px';\n          }\n        }\n        return offset;\n      }\n\n    },\n    templateUrl: 'partials/imageControl.html'\n  };\n}]);","angular.module('NetworkModule')\n.service('DataService', [\"TopicService\",\"CommentService\",\"ReplyService\",\"ChannelService\",\"SocialService\",\"VideoService\",\n  function (TopicService, CommentService, ReplyService, ChannelService, SocialService, VideoService) {\n  \n  var DATA_TYPE_TOPIC = \"topic\";\n  var DATA_TYPE_COMMENT = \"comment\";\n  var DATA_TYPE_REPLY = \"reply\";\n  var DATA_TYPE_SCORE = \"score\";\n  var DATA_BANT_ID_LENGTH = 16;\n\n  function delegateSetComments(commentsData) \n  { \n    if(commentsData.error){\n      console.log(\"Comments Error message from network: \", commentsData.error);\n    }\n    else if(commentsData.push){\n      if(commentsData.method == \"UPSERT\")\n        if(CommentService.updateComment(commentsData) == 0)\n          TopicService.updateCommentCount(1);\n      else if(commentsData.method == \"REMOVE\"){\n        //TODO: Design requirement for how to show a deleted comment\n//        if(CommentService.removeComment(commentsData) == 0)\n//          TopicService.updateCommentCount(-1);  \n      }\n    }\n    else {\n      if(commentsData.method == \"POST\"){\n        var uri = commentsData.uri;\n        if(uri != undefined){\n          var commentId = uri.slice(-DATA_BANT_ID_LENGTH);\n//          console.log(\"Comment ID: \"+ commentId);\n//          console.log(\"uri: \"+ uri);\n          if(uri == \"/v1.0/comment/create\"){\n            CommentService.appendToComments(commentsData);\n            TopicService.updateCommentCount(1);\n          }\n          else{\n            if(CommentService.updateCommentLocalData(uri, commentId) == 0)\n              TopicService.updateCommentCount(-1);\n          }\n        }\n      }\n      else\n        CommentService.setComments(commentsData);\n\n    }\n  }\n\n  function delegateSetTopic(topicData)\n  {\n    if(topicData.error){\n      console.log(\"Topic Error message from network: \", topicData.error);\n    }\n    else if(topicData.push){\n      if(topicData.method == \"UPSERT\")\n        TopicService.updateTopic(topicData.data);\n      else if(topicData.method == \"REMOVE\")\n        TopicService.removeTopic(topicData.data);\n    }\n    else\n      TopicService.setTopic(topicData);\n  }\n\n  function delegateSetReplies(replyData)\n  {\n    if(replyData.error){\n      console.log(\"Topic Error message from network: \", replyData.error);\n    }\n    else if(replyData.push){\n      console.log(\"reply pushed \");\n      if(replyData.method == \"UPSERT\")\n        if(ReplyService.updateReply(replyData) === 0){\n          if(replyData.data != undefined)\n          CommentService.updateReplyCountById(replyData.data.commentId,1);\n        }\n      else if(replyData.method == \"REMOVE\"){\n        //TODO: no action required\n        //ReplyService.removeReply(replyData);\n      }\n    }\n    else {\n      if(replyData.method == \"POST\"){\n        var uri = replyData.uri;\n        if(uri != undefined){\n          var id = uri.slice(-DATA_BANT_ID_LENGTH);\n//          console.log(\"Comment ID: \"+ id);\n//          console.log(\"uri: \"+ uri);\n          if(uri == \"/v1.0/reply/create\"){\n            ReplyService.appendToReplies(replyData);\n            if(replyData.data != undefined)\n              CommentService.updateReplyCountById(replyData.data.commentId, 1);\n          }\n          else{\n            var commentId =  ReplyService.getCommentIdByReply(id);\n            if(ReplyService.updateReplyLocalData(uri, id) == 0)\n              CommentService.updateReplyCountById(commentId, -1);\n          }\n        }\n      }\n      else\n        ReplyService.setReplies(replyData);\n    }\n      \n  }\n  \n  function delegateSetChannel(data) {\n    if(data.error){\n      console.log(\"Topic Error message from network: \", data.error);\n    }\n    else {\n      console.log(\"delegateSetChannel: \", data);\n      ChannelService.setTopicData(data);\n    }\n  }\n  \n  function delegateSetSocial(data) {\n    if(data.error){\n      console.log(\"Social Error message from network: \", data.error);\n    }\n    else {\n      console.log(\"SOCIAL GET\");\n      SocialService.setSocialData(data);\n    }\n  }\n\n  function delegateSetVideo(data) {\n    if(data.error){\n      console.log(\"Video Error message from network: \", data.error);\n    }\n    else {\n      console.log(\"VIDEO GET\");\n      VideoService.setVideoData(data);\n    }\n  }\n\n  return {\n    setVideo:delegateSetVideo,\n    setSocial:delegateSetSocial,\n    setChannel:delegateSetChannel,\n    setTopic:delegateSetTopic,\n    setComments:delegateSetComments,\n    setReplies:delegateSetReplies,\n    setWatchTopic:function(watched){\n      TopicService.setWatchTopic(watched);\n    }\n  };\n\n}]);","angular.module('TopicModule')\n.factory('TopicService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\",\n  function (DateUtilityService,Bant,FDSUtility) {\n\n  var TOPIC_BASE_URI = \"/v1.0/topic/show/\";\n  var LIKE_TOPIC_URI = \"/v1.0/topic/like/\";\n  var UNLIKE_TOPIC_URI = \"/v1.0/topic/unlike/\";\n  var WATCH_TOPIC_URI = \"/v1.0/topic/watch/\";\n  \n  var _channelId;\n  var _userType;\n  \n  var _isTopicWatched = false;\n  var _topic;\n  var _topicType;\n  var _id;\n  var _title;\n  var _game;\n  var _status;\n  var _score;\n  var _gameStats;\n  var _links;\n  var _scheduledAt;\n  var observerCallbacks = []; \n  var directComment; //bool flag to indicate whether user tapped on a comment's \"comment\" icon\n\n  function setTopicData(topicData) \n  {\n    if(topicData.data != undefined){\n      if(topicData.data.content != undefined ){\n        _title = topicData.data.content.title;\n      }\n\n\n      _topicType = topicData.data.topicType;\n      console.log(\"TOPIC TYPE :\"+_topicType );\n      _id = topicData.data.id;\n      if(_topicType == \"livegame\"){\n        _game = topicData.data.game;\n        if(_game != undefined){\n          _scheduledAt = DateUtilityService.getGameScheduledTime(_game.scheduledAt);\n          _score = _game.score;\n  //        Future game: live == false AND final == false.\n  //        Live game: live == true.\n  //        Past game: final == true.\n          if(_score.live == undefined && _score.final == undefined)\n            _status = \"future\";\n          else if(_score.live == true)\n            _status = \"live\";\n          else if(_score.final == true)\n            _status = \"past\";\n          // console.log(\"GAME Status  :\"+ _status );\n  \n          if(_status == \"live\"){\n            console.log(\"_gameStats\" + _score.status);\n            _gameStats = _score.status;\n          }\n        }\n      }\n\n      _topic = Bant.bant(topicData.data);\n      notifyObservers();\n    }\n    else if(topicData.method == \"POST\"){\n\n      //Handle operations dependent on POST\n      if(topicData.uri == WATCH_TOPIC_URI+_id){\n        if(NETWORK_DEBUG)\n          console.log(\"Topic watch success\");\n        _isTopicWatched = true;\n      }\n      else if(topicData.uri == LIKE_TOPIC_URI+_id)\n      {\n        if(NETWORK_DEBUG)\n          console.log(\"Topic liked success\");\n        _topic = Bant.updateBantLiked(_topic, true);\n        notifyObservers();\n      }\n      else if(topicData.uri == UNLIKE_TOPIC_URI+_id){\n        if(NETWORK_DEBUG)\n          console.log(\"Topic unliked success\");\n        _topic = Bant.updateBantLiked(_topic, false);\n        notifyObservers();\n      }\n    }\n  }\n\n  function updateTopicData(scoreData){\n    console.log(\"Topic Service scoreData :\" + scoreData)\n    setScoreData(scoreData);\n  }\n\n  function setScoreData(scoreData) \n  {\n    _score = scoreData;\n    //console.log(\"TopicService  insideScore\"+_score );\n    if(_score != undefined){\n      if(_score.live == true){\n        _status = \"live\";\n      }\n      _gameStats = _score.status;\n      console.log(\"Game Points :\" + _score.points[0] + \" : : \"+_score.points[1] );\n      console.log(\"Game Period :\" + _gameStats[0]);\n      console.log(\"Game Period :\" + _gameStats[1]);\n      notifyObservers();\n    }\n  }\n  \n  function updateCommentCount(value){\n    console.log(\"Update comment count: \" + _topic.metrics.comments + \"     Value : \"+ value);\n    if(_topic!= undefined && _topic.metrics != undefined){\n      if(value == 1)\n      _topic.metrics.comments == undefined ? _topic.metrics.comments =1: _topic.metrics.comments = _topic.metrics.comments+1;\n      else\n        _topic.metrics.comments == undefined ? _topic.metrics.comments =0: _topic.metrics.comments = _topic.metrics.comments-1; \n    }\n    notifyObservers();\n  }\n\n  function getTopicRequest(topicId){\n    var uri = TOPIC_BASE_URI+topicId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"GET\",\n        \"uri\": encodeURI(uri)};\n  }\n  function getFollowChannelRequest(){\n    \n    var channelId = 0;\n    if(_topic!= undefined && _topic.owner!= undefined)\n      channelId = _topic.owner.id;\n      _channelId = channelId;\n    var uri = \"/v1.0/channel/follow/\" + channelId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(uri)};\n  }\n  \n  function watchTopicRequest(topicId){\n    var uri = WATCH_TOPIC_URI+topicId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(uri)};\n  }\n\n  function likeTopicRequest(){\n    console.log(\"Like topic request invoked\"+_id);\n    return  varLikeParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(LIKE_TOPIC_URI + _id)};\n\n\n  }\n\n  function unlikeTopicRequest(){\n    return  varLikeParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(UNLIKE_TOPIC_URI + _id)};\n\n\n  }\n\n  //call this when you know 'data' has been changed\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n  \n  function registerObserverCallback(callback){\n    //register an observer\n    // console.log(\"topic callback registered\");\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  }\n\n  return {\n    getTopic: function(){ \n      return _topic ;},\n    getTopicId: function(){ \n      return _id ;},\n    getTopicType: function(){ \n      return _topicType ;},\n    getGame: function(){  \n      return _game;},\n    getGameTime: function(){\n      return _scheduledAt;\n    },\n    getTeamA: function(){ \n      if(_game != undefined) {\n        return _game.teams[0];\n      }},\n    getTeamB: function(){ \n      if(_game != undefined) {\n        return _game.teams[1];}\n    },\n    getScoresTitle: function(){   \n      if(_game != undefined && _game.links != undefined) \n        return _game.links[0].title;},\n    getScoresLink: function(){  \n      if((_game != undefined) && (_game.links != undefined)) \n        return _game.links[0].url;},\n    getScore: function(){ \n      if(_score != undefined) \n        return _score;},\n    getGameStatus: function() { \n      return _status;},\n    getGamePeriod: function() { \n      return _gameStats[0];},\n    getGameClock: function() {  \n      return _gameStats[1];},\n//    getSectionType: function(sectionNumber){ \n//    //TODO check for section length\n//    if(sectionNumber == undefined )\n//    return _topic.data.content.sections[0].type;\n//    else\n//    return _topic.data.content.sections[sectionNumber].type\n//    },\n    getChannelId:function(){  \n      if(_topic != undefined) \n        return _topic.owner.id;},\n    getTitle:function(){  \n      return _title;},\n    getHtml:function(){ \n      if(_topic != undefined) \n        return _topic.html},\n//    getMedia:function(){return _media},\n//    getTweet:function(){return _tweet},\n//    getOgp:function(){return _ogp},\n//    getLink:function(){return _link},\n    getTimeCreatedAt:function(){  \n      if(_topic != undefined) \n        return _topic.createdAt},\n    getLiked:function(){  \n      if(_topic != undefined) \n        return _topic.signal.like},\n    getMetrics:function(){  \n      if(_topic != undefined) \n        return _topic.metrics},\n    \n    watchTopicRequest:watchTopicRequest,\n    \n    getLikeTopicRequest:likeTopicRequest,\n    \n    getUnlikeTopicRequest:unlikeTopicRequest,\n    \n    getFollowChannelRequest:getFollowChannelRequest,\n    \n    getTopicRequest:getTopicRequest,\n    \n    isWatchingTopic: function(){ return _isTopicWatched;},\n    \n    setWatchTopic: function(watch){_isTopicWatched = watch;},\n    \n    setTopicId: function(topicId){_id = topicId ;},\n    \n    setChannel: function(channelId){_channelId = channelId; },\n    getChannel: function(){return _channelId ; },\n    \n    setTopic:setTopicData,\n    \n    updateTopic:updateTopicData,\n    \n    updateCommentCount: updateCommentCount,\n    \n    registerObserverCallback:registerObserverCallback,\n    \n    directComment:directComment\n\n  };\n\n}]);","angular.module('SocialModule')\n.factory('VideoService', [\"Bant\",\n\tfunction (Bant) {\n\tvar LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n\tvar observerCallbacks = [];\n\tvar _videoArray = [];\n\tvar _offset = 0;\n\tvar LIMIT = 10;\n\n\n\tfunction setVideoData(videoData) {\n\t\t_videoArray = [];\n\t\tvar tempData = videoData.data.results;\n\t\tvar len = tempData.length;\n\n\t\tif (!!tempData && len > 0){\n\t\t\tfor (i = 0; i < len; i++){\n\t\t\t\tvar _videoObject = Bant.bant(tempData[i]);\n\t\t\t\tif (!!_videoObject.id)\n\t\t\t\t\t_videoArray.push(_videoObject);\n\t\t\t}\n\t\t\t_offset = videoData.data.nextOffset;\n\t\t\tnotifyObservers();\n\t\t}\n\t}\n\n\n\t//call this when you know 'comments' has been changed\n\tvar notifyObservers = function(){\n\t\tangular.forEach(observerCallbacks, function(callback){\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tfunction registerObserverCallback(callback){\n\t\t//register an observer\n\t\tvar callbackLength  = observerCallbacks.length;\n\t\twhile(callbackLength > 0){\n\t\t\tcallbackLength = observerCallbacks.length;\n\t\t\tobserverCallbacks.pop();\n\t\t}\n\t\tobserverCallbacks.push(callback);\n\t}\n\n\tfunction getVideoDataRequest(id, offset){\n\t\tvar reqOffset = offset || _offset;\n\t\tvar request = {\n\t\t\t\"rid\": \"video\",\n\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\"method\": \"GET\",\n\t\t\t\"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset+\"&filter=video\")\n\t\t};\n\t\tconsole.log(\"Video Request: \", request);\n\t\treturn request;\n\t}\n\n\treturn {\n\t\tvideoArray: function(){\n\t\t\treturn _videoArray;\n\t\t},\n\t\tresetVideoOffset: function(){\n      _offset = 0;\n    },\n\t\tsetVideoData:setVideoData,\n\t\tgetVideoDataRequest:getVideoDataRequest,\n\t\tregisterObserverCallback:registerObserverCallback\n\t};\n\n}]);","angular.module('SocialModule')\n.factory('SocialService', [\"Bant\", \n  function (Bant) {\n  var LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n  var observerCallbacks = [];\n  var _socialArray = [];\n  var _offset = 0;\n  var LIMIT = 20;\n\n\n  function setSocialData(socialData) {\n    _socialArray = [];\n    var tempData = socialData.data.results;\n    var len = tempData.length;\n\n    if (!!tempData && len > 0){\n      for (i = 0; i < len; i++){\n        var _socialObject = Bant.bant(tempData[i]);\n        if (!!_socialObject.id)\n          _socialArray.push(_socialObject);\n      }\n      _offset = socialData.data.nextOffset;\n      notifyObservers();\n    }\n  };\n\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n\n  function registerObserverCallback(callback){\n    // register an observer for provided feed\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  };\n\n  function getSocialDataRequest(id, offset){\n    var reqOffset = offset || _offset;\n    var request = {\n      \"rid\": \"social\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset)\n    };\n    console.log(\"Social Request: \", request);\n    return request;\n  };\n\n  return {\n    socialArray: function(){\n      return _socialArray;\n    },\n    resetSocialOffset: function(){\n      _offset = 0;\n    },\n    setSocialData: setSocialData,\n    getSocialDataRequest: getSocialDataRequest,\n    registerObserverCallback: registerObserverCallback\n  };\n\n}]);","angular.module(\"SplashModule\", [])\n.factory(\"SplashService\", function(){\n  var _hidePeelSplash = true;\n  var _hideSSSplash = true;\n \n  return {\n    hidePeelSplash: function(){\n      return _hidePeelSplash;\n    },\n    hideSSSplash: function(){\n      return _hideSSSplash;\n    },\n    setPeelSplash: function(val){\n      _hidePeelSplash = val;\n    },\n    setSSSplash: function(val){\n      _hideSSSplash = val;\n    }\n  }\n});","angular.module('NetworkModule')\n.factory('CommentService', [\"Bant\",\"DateUtilityService\",\"FDSUtility\",\n  function (Bant,DateUtilityService,FDSUtility) {\n  var LIST_COMMENTS_URI = \"/v1.0/topic/comments/list/\"\n  var SHOW_COMMENT_URI = \"/v1.0/comment/show/\";\n    \n  var POST_COMMENT_URI=\"/v1.0/comment/create\";\n  var UPDATE_COMMNET_URI = \"/v1.0/comment/content/update/\";\n  var PIN_COMMENT_URI = \"/v1.0/comment/pin/\";\n  var DELETE_COMMENT_URI = \"/v1.0/comment/delete/\";\n  \n  var LIKE_COMMENT_URI = \"/v1.0/comment/like/\";\n  var UNLIKE_COMMENT_URI = \"/v1.0/comment/unlike/\";\n\n  var HIDE_COMMENT_URI = \"/v1.0/comment/hide/\";\n  var UNHIDE_COMMENT_URI = \"/v1.0/comment/unhide/\";\n  \n  var FLAG_COMMENT_URI = \"/v1.0/comment/flag/\";\n  var UNFLAG_COMMENT_URI = \"/v1.0/comment/unflag/\";\n  \n  var observerCallbacks = [];\n  var tempObserverCallbacks = [];\n  var _comments = [];\n  var _pinnedComments = 0;\n  var _offset = 0;\n\n  var _loadedComments = false;\n\n  function setComments(commentsData) {\n    //TODO clear comments for complete refresh Comments API\n    _comments = [];\n    tempCommentsData = commentsData.data.results;\n    if(tempCommentsData != undefined && tempCommentsData.length>0){\n      var len = tempCommentsData.length;\n      for(i=0;i<len;i++){\n        var _commentObject = {};\n        _commentObject = Bant.bant(tempCommentsData[i]);\n        if(_commentObject.id != undefined)\n          _comments.push(_commentObject);\n        // console.log(\"Comments in set comment Service type:\"+_commentObject.type + \"  \" +_commentObject.html );\n      }\n      if (commentsData.data.prevOffset === \"\"){\n        notifyObservers(true);\n      } else {\n        notifyObservers();\n      }\n      _offset = commentsData.data.nextOffset;\n    }\n    else{\n      //PArticular case when user is on reply page and requires comment by comment ID\n      var data = commentsData.data;\n      if((commentsData.method == \"GET\") &&(commentsData.uri.substring(0,SHOW_COMMENT_URI.length) == SHOW_COMMENT_URI) ){\n        if(NETWORK_DEBUG) console.log(\"Processing Show comment\");\n        var _commentObject = {};\n        _commentObject = Bant.bant(data);\n        if(_commentObject.id != undefined)\n          _comments.push(_commentObject); \n        notifyObservers();\n      }\n    }\n  }\n\n  function appendToComments(postCommentData) {\n    var tempComment = postCommentData.data;\n    if(tempComment!= undefined){\n      var _commentObject = {};\n      _commentObject = Bant.bant(tempComment);\n      if(_commentObject.id != undefined && (_commentObject.html != undefined || _commentObject.media != undefined)){\n        var i = 0;\n        if(_comments.length >0)\n        while(_comments[i].pin == true)\n          i++; \n        _pinnedComments = i;\n        //console.log(\"Pinned comments \"+ i);\n        if(_pinnedComments>0)\n          _comments.splice(i,0,_commentObject);\n        else\n          _comments.unshift(_commentObject);\n      }\n      // console.log(\"appendToComments CommentService\"+_commentObject.html );\n    }\n    notifyObservers();\n  }\n\n\n\n\n  function updateComment(commentData){\n    //if comments ID exist, update it \n    //else append to existing list\n    var commentObj = commentData.data;\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == commentObj.id){\n        //update\n        _comments[i] = Bant.bant(commentObj);\n        return 1;\n      }\n    }\n    appendToComments(commentData);\n    //notifyObservers();\n    console.log(\"In Comment Service update comment\");\n    return 0;\n  }\n  \n  function updateLocalData(newData){\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == newData.id){\n        //update\n        _comments[i] = newData;\n        return;\n      }\n    }\n  }\n  \n  function updateLikeCommentWithId(id, liked){\n    if(NETWORK_DEBUG)\n    console.log(\"updateLikeCommentWithId :\"+ id + \"   liked \"+ liked);\n    if((id != undefined)){\n      var tempObject;\n      tempObject = getCommentById(id);\n      tempObject = Bant.updateBantLiked(tempObject, liked);\n      updateLocalData(tempObject);\n\n      notifyObservers();\n    }\n    \n  }\n\n  function removeComment(commentData){\n    var commentObj = commentData.data;\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == commentObj.id){\n        //remove element\n        _comments.splice(i,1);\n        console.log(\"found Comment\")\n        return 0;\n      }\n    }\n    return 1;\n\n  }\n  \n  function getCommentById(id){\n    if(NETWORK_DEBUG) console.log(\"_comments :\"+ _comments.length);\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == id){\n        //remove element\n        return _comments[i];\n      }\n    }\n  }\n\n\n\n\n  //call this when you know 'comments' has been changed\n  var notifyObservers = function(temp){\n    if (temp){\n      console.log(\"IN TEMP\");\n      angular.forEach(tempObserverCallbacks, function(callback){\n        callback();\n      });\n    } else {\n      console.log(\"IN REG\");\n      angular.forEach(observerCallbacks, function(callback){\n        callback();\n      });\n    }\n  };\n  \n  function registerObserverCallback(callback, temp){\n    //register an observer\n    if (temp){\n      var callbackLength = tempObserverCallbacks.length;\n      while (callbackLength > 0){\n        callbackLength = tempObserverCallbacks.length;\n        tempObserverCallbacks.pop();\n      }\n      tempObserverCallbacks.push(callback);\n    } else {\n      var callbackLength  = observerCallbacks.length;\n      while (callbackLength > 0){\n        callbackLength = observerCallbacks.length;\n        observerCallbacks.pop();\n      }\n      observerCallbacks.push(callback);\n    }\n  }\n  \n  function commentGetRequest(uri){\n    var queryStr;\n    if (_offset === 0){\n      queryStr = \"?limit=10&offset=\" + _offset;\n    } else {\n      queryStr = \"?offset=\" + _offset;\n    }\n    return  {\"rid\": \"comment\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(uri + queryStr)}\n  }\n  function commentPostRequest(uri){\n    return  {\"rid\": \"comment\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"POST\",\n      \"uri\": encodeURI(uri)}\n  }\n  function getCommentsRequest(commentId){\n    var uri = LIST_COMMENTS_URI+commentId;\n    return  commentGetRequest(uri);\n  }\n  \n  function getCommentByIdRequest(commentId){\n    var uri = SHOW_COMMENT_URI + commentId;\n    return  commentGetRequest(uri);\n  }\n\n  function postCommentRequest(topicId, commentData){\n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData}]},\n          \"topicId\": topicId,\n        };\n    return createCommentParams;\n  }\n  function postCommentRequestForMedia(topicId, commentData, mediaData){\n    var m = {\"media\":[mediaData]};\n    \n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData},{\"type\":\"media\"}]},\n          \n          \"topicId\": topicId,\n        };\n    createCommentParams.data.content.sections[1].media = m.media;\n    console.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n    return createCommentParams;\n  }\n\n  function postCommentRequestForShare(topicId, commentData, embedData){\n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData},{\"type\":\"embed\"}]},\n          \n          \"topicId\": topicId,\n        };\n    createCommentParams.data.content.sections[1].embed = embedData;\n    console.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n    return createCommentParams;\n  }\n\n  function likeCommentRequest(id){\n    return commentPostRequest(LIKE_COMMENT_URI + id);\n\n  }\n\n  function unlikeCommentRequest(id){\n    return commentPostRequest(UNLIKE_COMMENT_URI + id);\n  }\n  \n  function hideCommentRequest(id){\n    return commentPostRequest(HIDE_COMMENT_URI + id);\n\n  }\n\n  function unhideCommentRequest(id){\n    return commentPostRequest(UNHIDE_COMMENT_URI + id);\n  }\n  \n  function flagCommentRequest(id){\n    return commentPostRequest(FLAG_COMMENT_URI + id + \"?reason=spam\");\n\n  }\n\n  function unflagCommentRequest(id){\n    return commentPostRequest(UNFLAG_COMMENT_URI + id);\n  }\n  \n  function deleteCommentRequest(id){\n    return commentPostRequest(DELETE_COMMENT_URI + id);\n  }\n  \n  function isCommentLiked(id){\n    return FDSUtility.isLikedById(_comments,id);\n  }\n  \n  \n  function updateReplyCountById(id, value){\n    if(id != undefined ){\n    //var id = replyData.commentId;\n    var tempStructure = getCommentById(id);\n    if(tempStructure != undefined){\n      if(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.metrics.replies :\"+ tempStructure.metrics.replies);\n      if(value == -1){\n      tempStructure.metrics.replies == undefined ? tempStructure.metrics.replies = 0: tempStructure.metrics.replies = tempStructure.metrics.replies - 1;\n      }\n      else {\n        \n        tempStructure.metrics.replies == undefined ? tempStructure.metrics.replies = 1: tempStructure.metrics.replies = tempStructure.metrics.replies + 1;\n      }\n      updateLocalData(tempStructure); \n    notifyObservers();\n    }\n    }\n    \n  }\n\n  function updateCommentLocalData(uri,id){\n    if(uri == LIKE_COMMENT_URI+id){\n      console.log(\"calling update like \");\n      updateLikeCommentWithId(id, true)\n    }\n    else if(uri == UNLIKE_COMMENT_URI+id){\n      updateLikeCommentWithId(id, false)\n    }\n    else if(uri == DELETE_COMMENT_URI+id){\n      _comments = FDSUtility.deleteById(_comments,id);\n      notifyObservers();\n      return 0;\n    }\n    else if(uri == FLAG_COMMENT_URI+id){\n      _comments = FDSUtility.flagById(_comments, false);\n      }\n    else if(uri == UNFLAG_COMMENT_URI+id){\n      _comments = FDSUtility.flagById(_comments, false);\n    }\n    else if(uri == HIDE_COMMENT_URI+id){\n      _comments = FDSUtility.hideById(_comments, true);\n    }\n    else if(uri == UNHIDE_COMMENT_URI+id){\n      _comments = FDSUtility.hideById(_comments, false);\n    }\n  }\n\n\n  return {\n    comments: function(){\n      return _comments },\n\n      setComments:setComments,\n      updateComment:updateComment,\n      appendToComments:appendToComments,\n      updateLikeCommentWithId:updateLikeCommentWithId,\n      updateCommentLocalData:updateCommentLocalData,\n      updateReplyCountById:updateReplyCountById,\n      removeComment:removeComment,\n      postCommentRequest:postCommentRequest,\n      postCommentRequestForMedia:postCommentRequestForMedia,\n      postCommentRequestForShare:postCommentRequestForShare,\n      getLikeCommentRequest:likeCommentRequest,\n      getUnlikeCommentRequest:unlikeCommentRequest,\n      registerObserverCallback:registerObserverCallback,\n      getCommentsRequest:getCommentsRequest,\n      getCommentById:getCommentById,\n      getCommentByIdRequest:getCommentByIdRequest,\n      deleteCommentRequest:deleteCommentRequest,\n      flagCommentRequest:flagCommentRequest,\n      isCommentLiked:isCommentLiked,\n      getNumPinComments:function(){\n        return _pinnedComments;\n      },\n      loadedComments: function(){\n        return _loadedComments;\n      },\n      setLoadedComments: function(val){\n        _loadedComments = val;\n      }\n  };\n\n}]);","angular.module('NetworkModule')\n.service('DateUtilityService', function () {\n\n\tfunction timeSince(timeStamp) {\n\t\t// console.log(\"timeSatmp\", timeStamp);\n\t\tvar now = new Date();\n\t\tvar createdDate = new Date(timeStamp);\n\t\tsecondsPast = (now.getTime() - createdDate.getTime()) / 1000;\n\t\tif(secondsPast < 60){\n\t\t\treturn 'now';\n\t\t}\n\t\tif(secondsPast < 3600){\n\t\t\treturn parseInt(secondsPast/60) + 'm';\n\t\t}\n\t\tif(secondsPast < 86400){\n\t\t\treturn parseInt(secondsPast/3600) + 'h';\n\t\t}\n\t\tif(secondsPast < 2592000){\n\n\t\t\tvar daysPassed = secondsPast/86400;\n\t\t\treturn Math.floor(daysPassed) + 'd';\n\t\t}\n\t\tif(secondsPast > 2592000){\n\t\t\tday = createdDate.getDate();\n\t\t\tmonth = createdDate.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \",\"\");\n\t\t\tyear = createdDate.getFullYear() == now.getFullYear() ? \"\" :  \" \"+createdDate.getFullYear();\n\t\t\tconsole.log(\"DATE \"+ day + \" \" + month + year);\n\t\t\treturn day + \" \" + month + year;\n\t\t}\n\t}\n\t\n\tfunction gameScheduleTime(timeStamp){\n\t\tvar date_format = '12';\n\t\tvar createdDate = new Date(timeStamp);\n\t\tday = createdDate.getDate();\n\t\tmonth = createdDate.getMonth() + 1;\n\t\thour = createdDate.getHours();\n\t\tvar hour    = createdDate.getHours();  /* Returns the hour (from 0-23) */\n\t\tvar minutes     = createdDate.getMinutes();  /* Returns the minutes (from 0-59) */\n\t\tvar time  = hour;\n\t\tvar ext     = '';\n\t\tvar timeZone = createdDate.toLocaleString('en', {timeZoneName:'short'}).split(' ').pop();\n\n\t\tif(date_format == '12'){\n\t\t    if(hour > 12){\n\t\t        ext = 'PM';\n\t\t        hour = (hour - 12);\n\n\t\t        if(hour < 10){\n\t\t        \ttime = \"0\" + hour;\n\t\t        }else if(hour == 12){\n\t\t            hour = \"00\";\n\t\t            ext = 'AM';\n\t\t        }\n\t\t    }\n\t\t    else if(hour < 12){\n\t\t    \ttime = ((hour < 10) ? \"0\" + hour : hour);\n\t\t        ext = 'AM';\n\t\t    }else if(hour == 12){\n\t\t        ext = 'PM';\n\t\t    }\n\t\t}\n\n\t\tif(minutes < 10){\n\t\t    minutes = \"0\" + minutes; \n\t\t}\n\n\t\ttime = time + \":\" + minutes + ' ' + ext + ' '+timeZone; \n\t\tdate = month+ \"/\" +day;\n\t\tresult = {\"date\":date,\"time\":time};\n\n\t\tconsole.log(\"Scheduled date : \"+ result.date + \"  Scheduled time : \"+result.time);\n\t\t\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\treturn{\n\t\tgetTimeSince:timeSince,\n\t\tgetGameScheduledTime:gameScheduleTime\n\t};\t\n});","angular.module('NetworkModule')\n.factory('Bant', [\"DateUtilityService\",\n  function (DateUtilityService) {\n  var EXTRACT_MEDIA_TYPE_LENGTH = 5;\n  \n  function extractMediaObject (_bantObject, tempMedia){\n    //if Video update\n    _bantObject.mediaType = tempMedia.mediaType.substring(EXTRACT_MEDIA_TYPE_LENGTH,0);\n    if(_bantObject.mediaType ==\"video\"){\n      _bantObject.mediaThumbUrl = tempMedia.thumbUrl;\n    }\n    _bantObject.mediaUrl = tempMedia.url;\n    if(tempMedia.sizes != undefined){\n    _bantObject.mediaAspectFull = tempMedia.sizes[\"full\"];\n    _bantObject.mediaAspect16x9 = tempMedia.sizes[\"16:9\"];\n    _bantObject.mediaAspect1x1 = tempMedia.sizes[\"1:1\"];\n    _bantObject.mediaAspect2x1 = tempMedia.sizes[\"2:1\"];\n    }\n    if(_bantObject.mediaAspect16x9 != undefined){\n      _bantObject.mediaAspectRatio = 1.778;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect16x9;\n      if (_bantObject.mediaAspect16x9.w < _bantObject.mediaAspect16x9.h){\n        _bantObject.mediaOrientation = \"portrait\";\n      } else {\n        _bantObject.mediaOrientation = \"landscape\";\n      }\n    }\n    else if(_bantObject.mediaAspect1x1 != undefined){\n      _bantObject.mediaAspectRatio = 1;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect1x1;\n      _bantObject.mediaOrientation = \"square\";\n    }\n    else if(_bantObject.mediaAspect2x1 != undefined){\n      _bantObject.mediaAspectRatio = 2;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect2x1;\n      if (_bantObject.mediaAspect2x1.w < _bantObject.mediaAspect2x1.h){\n        _bantObject.mediaOrientation = \"portrait\";\n      } else {\n        _bantObject.mediaOrientation = \"landscape\";\n      }\n    }\n    if(_bantObject.mediaAspectFeed != undefined){\n      _bantObject.mediaAspectFeed.x == undefined ? 0 : _bantObject.mediaAspectFeed.x;\n      _bantObject.mediaAspectFeed.y == undefined ? 0 : _bantObject.mediaAspectFeed.y;\n      _bantObject.mediaAspectFeed.w == undefined ? 0 : _bantObject.mediaAspectFeed.w;\n      _bantObject.mediaAspectFeed.h == undefined ? 0 : _bantObject.mediaAspectFeed.h;\n    }\n    if(_bantObject.mediaAspectFull != undefined){\n      _bantObject.mediaAspectFull.x == undefined ? 0 : _bantObject.mediaAspectFull.x;\n      _bantObject.mediaAspectFull.y == undefined ? 0 : _bantObject.mediaAspectFull.y;\n      _bantObject.mediaAspectFull.w == undefined ? 0 : _bantObject.mediaAspectFull.w;\n      _bantObject.mediaAspectFull.h == undefined ? 0 : _bantObject.mediaAspectFull.h;\n    }\n    return _bantObject;\n  }\n  \n  function extractEmbedObject(_bantObject, embedObject){\n//    Type      string        `json:\"type,omitempty\"`      // Type: \"link\", \"media\" or \"html\".\n//    Title     string        `json:\"title,omitempty\"`     // Title.\n//    Text      string        `json:\"text,omitempty\"`      // Text.\n//    Media     []Media       `json:\"media,omitempty\"`     // List of images or videos.\n//    Url       string        `json:\"url,omitempty\"`       // URL.\n//    Playable  bool          `json:\"playable,omitempty\"`  // Link contains playable content such as video.\n//    Html      string        `json:\"html,omitempty\"`      // HTML code to embed.\n//    Mini      bool          `json:\"mini,omitempty\"`      // Use mini display format.\n//    Author    EmbedAuthor   `json:\"author,omitempty\"`    // Author info.\n//    Provider  EmbedProvider `json:\"provider,omitempty\"`  // Provider info.\n//    CreatedAt string        `json:\"createdAt,omitempty\"` // Publication time in RFC3339 format.\n    _bantObject.embedType = embedObject.type;\n    _bantObject.embedTitle = embedObject.title;\n    _bantObject.embedText = embedObject.text;\n    _bantObject.embedMedia = {};\n    if(embedObject.type === 'media' || embedObject.type === 'link'){\n      // console.log(\"*****!!embedObject.media\",embedObject.media,embedObject);\n      if (embedObject.media){\n        _bantObject.embedMedia = extractMediaObject(_bantObject.embedMedia, embedObject.media[0]);\n      }\n    }\n    _bantObject.embedUrl = embedObject.url;\n    _bantObject.embedPlayable = embedObject.playable;\n    _bantObject.embedHtml = embedObject.html;\n    _bantObject.embedMetrics = embedObject.metrics;\n    _bantObject.embedMini = embedObject.mini;\n    _bantObject.embedAuthor = embedObject.author;\n    _bantObject.embedProvider = embedObject.provider;\n    _bantObject.embedCreatedAt = DateUtilityService.getTimeSince(embedObject.createdAt);\n    _bantObject.embedCreatedAtFull = embedObject.createdAt;\n    \n    \n    return _bantObject;\n\n  }\n\n  function Bant(data){\n    var _bantObject = {};\n    _bantObject.id = data.id;\n    _bantObject.author = data.author;\n    _bantObject.owner = data.owner;\n    if(data.content.sections != undefined){\n      _bantObject.sectionsLength = data.content.sections.length;\n\n      for(j=0;j<_bantObject.sectionsLength;j++){\n        _bantObject.type = data.content.sections[j].type;\n        if(_bantObject.type == \"html\")\n          _bantObject.html = data.content.sections[j].html;\n\n        if(_bantObject.type == \"media\"){\n          _bantObject.media = data.content.sections[j].media;\n          _bantObject = extractMediaObject(_bantObject, _bantObject.media[0]);\n        }\n        if(_bantObject.type == \"embed\" || _bantObject.type == \"tweet\"){\n          if (data.content.sections[j].embed !== null){\n            // console.log(\"!!!!!Fiding ID:\",data.content.sections[j]);\n            _bantObject = extractEmbedObject(_bantObject,data.content.sections[j].embed);\n            _bantObject.embed = data.content.sections[j].embed;\n          }\n        }\n        _bantObject.tweet = data.content.sections[j].tweet;\n        _bantObject.ogp = data.content.sections[j].ogp;\n        _bantObject.link = data.content.sections[j].link;\n      }\n    }\n    _bantObject.signal = data.signal;\n    if(_bantObject.signal == undefined){\n      var likeObject = {like:false};\n      _bantObject.signal = likeObject;\n    }\n    else if(_bantObject.signal.like == undefined)\n      _bantObject.signal.like = false;\n    _bantObject.metrics = data.metrics;\n    _bantObject.createdAtFull = data.createdAt;\n    _bantObject.createdAt = DateUtilityService.getTimeSince(data.createdAt);\n    _bantObject.pin = data.pin;\n    _bantObject.commentId = data.commentId;\n    _bantObject.topicId = data.topicId;\n    \n    return _bantObject;\n\n  }\n  \n  \n  \n  function updateBantLiked(data, liked){\n    //if same state, dont do anything\n    if(data.signal.like == liked){\n      if(NETWORK_DEBUG)\n        console.log(\"no need to change   data.signal.like:\"+ data.signal.like);\n      return data;\n    }\n    if(liked){\n      //update like status\n      data.signal.like = true;\n      //increment like count.\n      (data.metrics.likes == undefined) ? data.metrics.likes = 1: data.metrics.likes = (data.metrics.likes + 1);\n    }\n    else{\n      //update like status\n      data.signal.like = false;\n      //decrement like count.\n      if(data.metrics.likes != undefined) \n      data.metrics.likes = (data.metrics.likes - 1);\n    }\n    if(NETWORK_DEBUG)\n      console.log(\"data.metrics.likes :\"+ data.metrics.likes);\n    return data;\n  }\n\n  return {\n    bant: Bant,\n    updateBantLiked : updateBantLiked\n  };\n\n}]);","angular.module('NetworkModule')\n.factory('UserInfoService', [\"ForumStorage\",\"URIHelper\",\n\tfunction (ForumStorage, URIHelper) {\n\t//OLD Creds userId=1, sessionId=dac24379, accessToken=7uFF3QGh-84=\n\t//NEW Creds userId=193, sessionId=53d7b518, accessToken=dsKGKXyZgGs=\n\tvar _userInfo = {};\n\tvar userInfoTemp = {\n\t\t\t\"userId\":\"193\",\n\t\t\t\"accessToken\":\"dsKGKXyZgGs=\",\n\t\t\t\"sessionId\":\"53d7b518\"\n\t};\n\tvar _isUserLoggedIn = false;\n\tvar _userType = \"\";\n\n//\tvar userInfoTemp = {\n//\t\"userId\":\"204\",\n//\t\"accessToken\":\"_uO41ylA_xs=\",\n//\t\"sessionId\":\"b7427f4a\"\n//\t};\n\n\tfunction getUserCredentials(){\n\t\tif(_userInfo == undefined){\n\t\t\tconsole.log(\"UserInfoService : UserId is not defined , using static user, TODO : Remove this for release build\");\n\t\t\t_userInfo = userInfoTemp;\n\t\t\treturn userInfoTemp;\n\t\t}\n\n\t\treturn _userInfo;\n\t}\n\n\tfunction isCurrentUser(id){\n\t\t//console.log(\"Current user id  && id :\"+_userInfo.userId + \" :   \"+ id);\n\t\tif(id == _userInfo.userId)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tfunction setUserCredentials(userId, accessToken, sessionId, userType){\n\t\tconsole.log(\"setUserCredentials: \", userId, accessToken, sessionId, userType);\n\t\t// _userInfo = {};\n\t\t_userInfo.userId = userId;\n\t\t_userInfo.accessToken = accessToken;\n\t\t_userInfo.sessionId = sessionId;\n\t\t_isUserLoggedIn = true;\n\t\t_userInfo.userType = userType;\n\t\t// ForumStorage.clearStorage();\n\t\tForumStorage.setToLocalStorage(\"forumIsLoggedIn\",_isUserLoggedIn);\n\t\tForumStorage.setToLocalStorage(\"forumUserId\",userId);\n\t\tForumStorage.setToLocalStorage(\"forumAccessToken\",accessToken);\n\t\tForumStorage.setToLocalStorage(\"forumSessionId\",sessionId);\n\t\tForumStorage.setToLocalStorage(\"forumUserType\",userType);\n\n\t\t// console.log(\"this.userInfo.userId :\"+ _userInfo.userId);\n\t}\n\n\tfunction hasUserVisited() {\n\t\treturn ForumStorage.getFromLocalStorage(\"hasUserVisited\") ? true : false;\n\t}\n\n\treturn{\n\t\tgetUserCredentials:getUserCredentials,\n\t\tsetUserCredentials:setUserCredentials,\n\t\tisCurrentUser:isCurrentUser,\n\t\thasUserVisited: hasUserVisited,\n\t\tisUserLoggedIn:function(){\n\n\t\t\t//console.log(\"cached : is user logged in : \"+_isUserLoggedIn);\n\t\t\tif(_isUserLoggedIn)\n\t\t\t\treturn true;\n\t\t\telse{\n//\t\t\t\tvar islogged = ForumStorage.getFromLocalStorage(\"forumIsLoggedIn\");\n//\t\t\t\tconsole.log(\"storage : is user logged in : \"+islogged);\n\t\t\t\tif(ForumStorage.getFromLocalStorage(\"forumIsLoggedIn\"))\n\t\t\t\t{\n\t\t\t\t\t_userInfo = {};\n\t\t\t\t\t_userInfo.userId = ForumStorage.getFromLocalStorage(\"forumUserId\");\n\t\t\t\t\t_userInfo.accessToken = ForumStorage.getFromLocalStorage(\"forumAccessToken\");\n\t\t\t\t\t_userInfo.sessionId = ForumStorage.getFromLocalStorage(\"forumSessionId\");\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tisPeelUser:function(){\n\t\t\tURIHelper.isPeelUser();\n\t\t\tif (GEN_DEBUG) console.log(\"ForumStorage.getFromLocalStorage: \"+ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(_userInfo.userType === \"peel\")\n\t\t\t\treturn true;\n\t\t\tif(ForumStorage.getFromLocalStorage(\"forumUserType\") === \"peel\")\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t},\n\t\tisSmartStadiumUser:function(){\n\t\t\tvar ssUser = URIHelper.isSmartStadiumUser();\n\t\t\tif (GEN_DEBUG) console.log(\"ForumStorage.getFromLocalStorage: \", ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(ssUser){\n\t\t\t\t_userInfo.userType = 'email';\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(_userInfo.userType === \"email\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (ForumStorage.getFromLocalStorage(\"forumUserType\") === \"email\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tisMI16User:function(){\n\t\t\tvar MI16User = URIHelper.isTechMUser();\n\t\t\tif (GEN_DEBUG) console.log(\"ForumStorage.getFromLocalStorage: \", ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(MI16User){\n\t\t\t\t_userInfo.userType = 'MI16';\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(_userInfo.userType === \"MI16\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (ForumStorage.getFromLocalStorage(\"forumUserType\") === \"MI16\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetUserType:function(){\n\t\t\tif (GEN_DEBUG) console.log(\"UIS _userType - - - \", _userInfo.userType);\n\t\t\treturn _userInfo.userType;\n\t\t},\n\t\tisGuestUser:function(){\n\t\t\tif (GEN_DEBUG) console.log(\"UIS _userType - - - \", _userInfo.userType);\n\t\t\tif(_userInfo.userType === \"guest\" || ForumStorage.getFromLocalStorage(\"forumUserType\") === \"guest\")\n\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\n\t};\n\n}]);","angular.module('AuthModule')\n.factory(\"AuthService\", [\"$http\",\"$window\",\"$location\",\"UserInfoService\", \"TopicService\", \"ReplyService\", \"networkService\", \"ForumDeviceInfo\", \"ChannelService\", \"URIHelper\", \n  function ($http, $window, $location, UserInfoService, TopicService, ReplyService, networkService, ForumDeviceInfo, ChannelService, URIHelper) {\n\n  var userLoggedInToFacebook = false;\n\n  var loginAsGuest = function() {\n  console.log(\"Logging in as Guest\");\n    var userData = {};\n    userData.id = ForumDeviceInfo.getDeviceId();\n    userData.userName = \"GuestUser\";\n\n    var registerParams = setRegistrationParams(\"guest\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var loginToFacebook = function(callback) {\n    FB.login(function (response) {\n      if (response.status === 'connected') {\n        callback();\n        var registerParams = setRegistrationParams(\"facebook\", -25200, response.authResponse);\n        registerUser(registerParams);\n      }\n    });\n  };\n\n  var loginWithPeel = function() {\n    var userData = {};\n    userData.id = URIHelper.getPeelUserId();\n    userData.userName = URIHelper.getPeelUserName();\n\n    var registerParams = setRegistrationParams(\"peel\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var loginWithEmail = function() {\n    var userData = {\n      \"id\": URIHelper.getSSUserId(),\n      \"userName\": URIHelper.getSSUserName()\n    };\n\n    var registerParams = setRegistrationParams(\"email\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var techMLogin = function (name, email) {\n    var userData = {\n      \"id\": email,\n      \"userName\": name\n    };\n\n    console.log(\"techMLogin: \", userData);\n    var registerParams = setRegistrationParams(\"email\", -28800, userData);\n    registerUser(registerParams, true);\n  };\n\n  var setRegistrationParams = function (type, utcOffset, userData) {\n    var deviceId = ForumDeviceInfo.getDeviceId();\n    var registerParams = {\n      \"type\": type,\n      \"locale\": \"en_US\",\n      \"utcOffset\": utcOffset,\n      \"deviceType\": \"web\",\n      \"deviceId\": deviceId,\n      \"deviceModel\": \"browser\",\n      \"appKey\": \"testKey\",\n      \"appVersion\": \"1.0\"\n    };\n\n    if (type === 'facebook'){\n      registerParams.facebook = {\n        \"id\": userData.userID,\n        \"accessToken\": userData.accessToken\n      };\n    } else if (type === 'peel'){\n      registerParams.peel = {\n        \"id\": userData.id,\n        \"name\": userData.userName\n      }; \n    } else if (type === 'email'){\n      registerParams.email = {\n        \"id\": userData.id,\n        \"name\": userData.userName\n      }\n    }\n    return registerParams;\n  };\n\n  var registerUser = function(registerParams, isMI16) {\n    // Post request to our api to register/retrieve user\n    var userType = registerParams.type;\n    if (isMI16){\n      userType = 'MI16';\n    }\n    $http.post(REGISTER_SERVER_URI, JSON.stringify(registerParams))\n      .then(function (response) {\n        if (response.status === 200) {\n          console.log(\"Successfully Registered User of Type: \" + userType);\n          if (registerParams.type === 'facebook'){\n            userLoggedInToFacebook = true;\n          }\n\n          // Store user credentials in Local Storage\n          UserInfoService.setUserCredentials(\n            response.data.userId, \n            response.data.accessToken, \n            response.data.sessionId,\n            userType);\n        }\n      },\n      function (response) {\n        console.log('Registration Error: ', response);\n      }).then(function (response) {\n        initializeContent();\n      });\n  };\n\n  var initializeContent = function() {\n    console.log(\"Initializing Content\");\n    // Initialize Network Service and determine what type of resource is being accessed\n    networkService.init();\n\n    var initChannel = ChannelService.getChannel();\n    var initTopic = TopicService.getTopicId();\n\n    if (!!initChannel) {\n      console.log(\"found channel ID: \" + initChannel);\n      networkService.send(ChannelService.getLiveGameTopic(initChannel));\n    }\n    else if (!!initTopic) {\n      console.log(\"found Topic ID: \" + initTopic);\n      if (HTML5_LOC){\n        $location.path(\"/topic/\" + initTopic);\n      } else {\n        $window.location = \"#/topic/\" + initTopic;\n      }\n    }\n    else {\n      var initPost = ReplyService.getPostId();\n      if (!!initPost){\n        console.log(\"found post ID: \" + initPost);\n        if (HTML5_LOC){\n          $location.path(\"/post/\" + initPost);\n        } else {\n          $window.location = \"#/post/\" + initPost;\n        }\n      }\n    }\n  };\n\n  return {\n    loginAsGuest:loginAsGuest,\n    loginToFacebook: loginToFacebook,\n    loginWithPeel: loginWithPeel,\n    loginWithEmail: loginWithEmail,\n    techMLogin: techMLogin,\n    setRegistrationParams: setRegistrationParams,\n    registerUser: registerUser,\n    initializeContent: initializeContent,\n    userLoggedInToFacebook: userLoggedInToFacebook\n  };\n\n}]);\n","angular.module('NetworkModule')\n.service('StaticData', function () {\n\t//TODO: Static data used for Demo, remove this once the Development is complete\n\tvar postAuthors = [\n\t                   {\n\t                \t   \"photo\":\"ana.png\",\n\t                \t   \"name\":\"Ana\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"arod.png\",\n\t                \t   \"name\":\"A-Rod\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"cristiano.png\",\n\t                \t   \"name\":\"Cristiano\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"derek.png\",\n\t                \t   \"name\":\"Derek\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"dwayne.png\",\n\t                \t   \"name\":\"Dwayne\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"erin.png\",\n\t                \t   \"name\":\"Erin\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"jordan.png\",\n\t                \t   \"name\":\"Michael\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"lebron.png\",\n\t                \t   \"name\":\"Lebron\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"lionel.png\",\n\t                \t   \"name\":\"Lionel\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"maria.png\",\n\t                \t   \"name\":\"Maria\"\n\t                   }\n\t                   ];\n\n\tvar loremIpsum = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\";\n\tvar postTypes = [\"text\", \"text\", \"text\", \"photo\", \"video\"];\n\n\tfunction getPostsForTopicID()\n\t{\n\t\tvar staticPosts = [];\n\n\t\tvar fakePhotos = [\"fakePhoto1.jpg\", \"fakePhoto2.jpg\", \"fakePhoto3.jpg\", \"fakePhoto4.jpg\", \"fakePhoto5.jpg\", \"fakePhoto6.jpg\"];\n\t\tvar usedFakePhotos = 0;\n\n\t\tvar fakeVideos = [\"fakeVideo1.jpg\", \"fakeVideo2.jpg\", \"fakeVideo3.jpg\"];\n\t\tvar usedFakeVideos = 0;\n\n\t\tvar peelDemoData = [\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Will this be the year Kaep teaches Sherman a lesson or will Kaep get schooled again?\",\n\t\t                    \t\"postMedia\":\"fakePhoto1.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Remember Kyle Williams - for some reason, I am having recurring nightmares about him again - weird but true:(\",\n\t\t                    \t\"postMedia\":\"fakeVideo1.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Will Kaep be given a free reign to do whatever he wants? Please don't make him a pocket passer because HE IS NOT ONE\",\n\t\t                    \t\"postMedia\":\"fakePhoto2.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Running back of the 9ers this season truly scares the hell out of me - thoughts?\",\n\t\t                    \t\"postMedia\":\"fakeVideo2.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Will our defense save us again? We have seen that this offense needs lot of help:(\",\n\t\t                    \t\"postMedia\":\"fakeVideo3.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Can't wait for this game - gets me want to kick Seahawks every time we play them\",\n\t\t                    \t\"postMedia\":\"fakePhoto3.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Jimmy Graham is going to be such a formidable match-up for our secondary. Not sure if we have the personnel to cover him. Hate the fact that the saehawks offense just got whole lot better this year\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"From contenders to last in the league - reasons for our free fall down the ranks\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"One more drubbing - when are we going to be good again?\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"How do we always fuck up the second half? It is always the take of two halves with us this year. Sucks\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Are you fuckin kidding me - how did we miss that tackle? Why do we keep messing up defensively during 3rd and long? That is the 5th 3rd and long conversion for the Hawks.. Come on DDDDD\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Time to talk about the next season already? Sure nothing is going to change and we are going to suck again.. \",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"We miss Aldon Smith so much - we absolutely don't have an edge rusher.. what a jack-ass.. blew away so much second chances:(\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    }\n\t\t                    ]\n\n\t\tfor(var i = 0 ; i < peelDemoData.length ; i++)\n\t\t{\n\t\t\tvar peelPost = peelDemoData[i];\n\t\t\tvar fakePost = new Object();\n\t\t\tfakePost.postID = i;\n\t\t\tvar minimumCharacterCount = 20\n\t\t\tvar randomCharacterCount = minimumCharacterCount + Math.round(Math.random() * (loremIpsum.length - minimumCharacterCount));\n\t\t\t// console.log(\"random character count: \" + randomCharacterCount);\n\t\t\tvar loremIpsumSubstring = loremIpsum.substring(0, randomCharacterCount);\n\t\t\t// console.log(\"-> \" + loremIpsumSubstring);\n\t\t\tfakePost.postContent = peelPost.postContent;//loremIpsumSubstring\n\t\t\tvar postType = peelPost.type;//postTypes[Math.floor(Math.random() * postTypes.length)];\n\t\t\tfakePost.postType = postType;\n\t\t\tif(postType == \"photo\")\n\t\t\t{\n\t\t\t\tvar fakePhoto = fakePhotos[usedFakePhotos % fakePhotos.length];\n\t\t\t\tfakePost.photo = fakePhoto;\n\t\t\t\t// peelPost.photo = peelPost.postMedia\n\t\t\t\tusedFakePhotos++;\n\t\t\t}\n\t\t\telse if(postType == \"video\")\n\t\t\t{\n\t\t\t\tvar fakeVideo = fakeVideos[usedFakeVideos % fakeVideos.length];\n\t\t\t\tfakePost.video = fakeVideo;\n\t\t\t\t// peelPost.video = peelPost.postMedia\n\t\t\t\tusedFakeVideos++;\n\t\t\t}\n\n\t\t\tvar author = postAuthors[i % postAuthors.length];\n\t\t\tfakePost.postAuthorPhoto = author.photo;\n\t\t\tpeelPost.postAuthorPhoto = author.photo;\n\t\t\tfakePost.postAuthorName = author.name;\n\t\t\tpeelPost.postAuthorName = author.name;\n\n\t\t\tfakePost.likeCount = Math.floor(Math.random() * 100);\n\t\t\tpeelPost.likeCount = Math.floor(Math.random() * 100);\n\t\t\tfakePost.commentCount = Math.floor(Math.random() * 500);\n\t\t\tpeelPost.commentCount = Math.floor(Math.random() * 500);\n\n\t\t\t// console.log(\"fake post \" + i + \" :  \" + JSON.stringify(fakePost));\n\t\t\t// console.log(\"fake post \" + i + \" :  \" + JSON.stringify(peelPost));\n\n\t\t\t// staticPosts.push(fakePost);\n\t\t\tstaticPosts.push(peelPost);\n\t\t}\n\t\treturn staticPosts\n\t}\n\n\tfunction getRepliesForPostID()\n\t{\n\t\t/*\n\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"0\",\n\t\t\t\t\t\t\"replyContent\":\"reply A\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"1\",\n\t\t\t\t\t\t\"replyContent\":\"reply B\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"2\",\n\t\t\t\t\t\t\"replyContent\":\"reply C\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"3\",\n\t\t\t\t\t\t\"replyContent\":\"reply D\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"4\",\n\t\t\t\t\t\t\"replyContent\":\"reply E\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t */\n\n\t\tvar fakeReplies = [];\n\t\tfor(var i = 0 ; i < 10 ; i++)\n\t\t{\n\t\t\tvar fakeReply = new Object();\n\t\t\tfakeReply.postID = i;\n\t\t\tvar minimumCharacterCount = 20\n\t\t\tvar randomCharacterCount = minimumCharacterCount + Math.round(Math.random() * (loremIpsum.length - minimumCharacterCount));\n\t\t\t// console.log(\"random character count: \" + randomCharacterCount);\n\t\t\tvar loremIpsumSubstring = loremIpsum.substring(0, randomCharacterCount);\n\t\t\t// console.log(\"-> \" + loremIpsumSubstring);\n\t\t\tfakeReply.replyContent = loremIpsumSubstring\n\t\t\tfakeReply.replyType = \"text\";\n\n\t\t\tvar author = postAuthors[i % postAuthors.length];\n\t\t\tfakeReply.postAuthorPhoto = author.photo;\n\t\t\tfakeReply.postAuthorName = author.name;\n\n\t\t\tfakeReply.likeCount = Math.floor(Math.random() * 100);\n\t\t\tfakeReply.commentCount = Math.floor(Math.random() * 500);\n\n\t\t\t// staticPosts.push(fakePost);\n\t\t\tfakeReplies.push(fakeReply);\n\t\t}\n\n\t\treturn fakeReplies\n\t}\n\t\n\treturn{\n\tgetPostsForTopicID:getPostsForTopicID,\n\tgetRepliesForPostID:getRepliesForPostID\n\t}\n});","angular.module('NetworkModule')\n.factory('FDSUtility', function () {\n\t\n\tfunction getStructureById(array, id){\n\t\tif(NETWORK_DEBUG) console.log(\"structureLengths :\"+ array.length);\n\t\tfor(i=0;i<array.length;i++){\n\t\t\tif(array[i].id == id){\n\t\t\t\treturn array[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getIndexById(array, id){\n\t\tif(NETWORK_DEBUG) console.log(\"structureLengths :\"+ array.length);\n\t\tfor(i=0;i<array.length;i++){\n\t\t\tif(array[i].id == id){\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t\n\tfunction isLikedById(array, id){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.like :\"+ tempStructure.signal.like);\n\t\t\tif(tempStructure.signal.like == true){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction isFlaggedById(array, id){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.flag :\"+ tempStructure.signal.flag);\n\t\t\tif(tempStructure.signal.flag == true){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t}\n\t\treturn false;\n\t}\n\n\t\n\tfunction flagById(array, id, flag){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.flag :\"+ tempStructure.signal.flag);\n\t\t\ttempStructure.signal.flag = flag;\n\t\t\t}\n\t}\n\t\n\t\n\tfunction deleteById(array, id){\n\t\tvar index = getIndexById(array,id);\n\t\t\n\t\tif(index != -1){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element at:\"+index );\n\t\t\tarray.splice(index,1);\n\t\t\t}\n\t\treturn array;\n\t}\n\n\treturn {\n\t\tisLikedById:isLikedById,\n\t\tisFlaggedById:isFlaggedById,\n\t\tflagById:flagById,\n\t\tdeleteById:deleteById\n\t\t\n\t\t\n\t};\n\n});","angular.module('MediaModule', ['angularFileUpload', 'NetworkModule', 'TopicModule'])\n.factory('MUService',  function () {\n\tvar POST_COMMENT_URI=\"/v1.0/comment/create\";\n\tvar POST_REPLY_URI=\"/v1.0/reply/create\";\n\tvar isComment = true;\n\tvar commentText = \"\";\n\tvar topicId = \"\";\n\tvar commentId = \"\";\n\tvar replyId = \"\";\n\n\tfunction commentPostRequest(){\n\t\tvar createCommentParams = {\"rid\": \"comment\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(POST_COMMENT_URI)};\n\t\tcreateCommentParams.data =\n\t\t{\n\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\"topicId\": topicId,\n\t\t};\n\t\tif(!isComment){\n\t\t\tcreateCommentParams = {\"rid\": \"reply\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(POST_REPLY_URI)};\n\t\t\tcreateCommentParams.data =\n\t\t\t{\n\t\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\t\"topicId\": topicId,\n\t\t\t};\n\t\t\tcreateCommentParams.data.target = {\n\t\t\t\t\t\"type\": \"comment\", // Target type: “comment” or “reply”.\n\t\t\t\t\t\"id\": commentId,  // Target bant ID of comment or reply.\n\t\t\t};\n\n\t\t\tcreateCommentParams.data.commentId = commentId;\n\t\t}\n\t\treturn createCommentParams;\n\t}\n\n\tfunction setCommentParams(tId,text,isCom,comId,repId){\n\t\tif (text === undefined){\n\t\t\ttext = \"\";\n\t\t}\n\t\tconsole.log(\"Setting Comment Params: \", tId, text, isCom, comId, repId);\n\t\ttopicId = tId;\n\t\tcommentText = text;\n\t\tisComment = isCom;\n\t\t\n\t\tcommentId = comId;\n\t\treplyId = repId;\n\t}\n\n\tfunction postMediaRequest(mediaData){\n\t\tvar m = {\"media\":[mediaData]};\n\t\tvar sections = [];\n\t\tif(commentText !== undefined){\n\t\t\tsections.push({\"type\": \"html\",\"html\":commentText});\n\t\t}\n\t\tsections.push({\"type\": \"media\", \"media\" : m.media});\n\n\t\tvar createCommentParams = commentPostRequest();\n\t\t\n\t\tvar content =  {\"sections\": sections};\n\t\tcreateCommentParams.data.content = content;\n\t\tconsole.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n\t\treturn createCommentParams;\n\t}\n\treturn {\n\t\tpostMediaRequest:postMediaRequest,\n\t\tsetCommentParams:setCommentParams,\n\t\tresetCommentParams:function(){\n\t\t\ttopicId = \"\";\n\t\t\tcommentId = \"\";\n\t\t\tcommentText = \"\";\n\t\t}\n\t}\n});\n"],"sourceRoot":"/source/"}