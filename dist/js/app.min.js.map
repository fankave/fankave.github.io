{"version":3,"sources":["Forum.js","ChannelController.js","AuthController.js","TopicController.js","ChatController.js","VideoController.js","SocialController.js","UserInputController.js","UserAgentService.js","NetworkService.js","ForumStorage.js","ForumDeviceInfo.js","URIHelper.js","ChannelService.js","Scorecard.js","TopicDirectives.js","EmbedPlayer.js","ImageControl.js","DataService.js","TopicService.js","VideoService.js","SocialService.js","SplashService.js","CommentService.js","DateUtilityService.js","Bant.js","UserInfoService.js","AuthService.js","StaticData.js","ForumDSUtility.js","MediaUploadService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$locationProvider","state","url","templateUrl","controller","abstract","deepStateRedirect","views","topic-tab-view","controllerAs","when","otherwise","window","history","pushState","HTML5_LOC","html5Mode","enabled","run","$state","$rootScope","filter","$filter","$sce","text","target","replacedText","targetAttr","isDefined","replacePattern1","replace","replacePattern2","trustAsHtml","$scope","$stateParams","$window","$location","networkService","ChannelService","TopicService","URIHelper","AuthService","UserInfoService","setChannel","channelID","channelParams","console","log","init","send","getLiveGameTopic","updateTopic","id","getLiveTopicId","undefined","urlQueryStr","path","search","paramsObj","topicID","go","registerObserverCallback","isUserLoggedIn","NETWORK_DEBUG","isSmartStadiumUser","loginWithEmail","isTechMUser","location","isPeelUser","loginWithPeel","loginAsGuest","$http","ReplyService","ForumDeviceInfo","showSpinner","showFacebookButton","href","indexOf","slice","techMIUser","facebookUser","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","ga","loginToFacebook","techMLogin","name","email","isValid","submitted","fbAsyncInit","FB","appId","xfbml","version","getLoginStatus","response","status","registerParams","setRegistrationParams","authResponse","registerUser","$sanitize","$timeout","CommentService","SplashService","MUService","ForumStorage","FileUploader","SocialService","UserAgentService","isMobileUser","mobileBrowser","mobileUserAgent","getMobileUserAgent","setTopicId","topicType","innerButtonTapped","hideSSSplash","setToLocalStorage","continueToExperience","isMI16User","hasUserVisited","hidePeelSplash","env","setPeelSplash","setSSSplash","setScoreCardUI","$","css","getTopic","getTopicType","isWatchingTopic","getFollowChannelRequest","watchTopicRequest","getTeamA","leftTeam","rightTeam","getTeamB","score","getScore","leftTeamScore","points","rightTeamScore","gameStatus","getGameStatus","gamePeriod","getGamePeriod","gameClock","getGameClock","gameScheduledTime","getGameTime","allScoresTitle","getScoresTitle","allScoresURL","getScoresLink","left","right","pColor","topicTitle","getTitle","thisTopic","topicDescHtml","html","type","topicMediaUrl","mediaUrl","topicMediaAspectFeed","mediaAspectFull","createdAt","getTimeCreatedAt","liked","getLiked","metrics","getMetrics","likesCount","likes","commentsCount","comments","loadingChat","getTopicRequest","setPeelUI","initPage","pageClass","style","paddingBottom","isSocketConnected","MI16","peelClose","peelWatchOnTV","showId","getPeelShowId","showNewCommentsIndicator","imageClick","imageURL","event","cancelBubble","stopPropagation","magnificPopup","open","items","callbacks","bind","e","preventDefault","close","unbind","updateLikeTopic","getUnlikeTopicRequest","getLikeTopicRequest","commentOnTopic","focus","switchTabs","tab","addClass","removeClass","scrollTop","initializeTab","includes","_channelId","getChannel","tabs","tabContainer","tabsTop","tabsHeight","inputHeight","clientHeight","docHeight","headerHeight","debugObj","docVarsSet","setDocVars","first","offset","top","height","documentElement","fixed","watchScroll","off","on","getCommentsRequest","updateComments","commentsdata","length","lastComment","len","_this","commentsArray","i","tempComment","postAuthorName","author","postAuthorPhoto","photo","isMyComment","isCurrentUser","likeCount","replyCount","replies","postTimestamp","mediaAspectFeed","mediaAspectRatio","mediaOrientation","mediaThumbUrl","isLiked","signal","like","shared","embed","embedCreatedAt","embedCreatedAtFull","embedType","embedMedia","providerName","embedLogo","provider","logo","playable","embedHtml","push","notifyNewComments","commentsData","pinIndex","getNumPinComments","newCommentsAvailable","this","loading","loadRemainingComments","loadedComments","setLoadedComments","loadedAllComments","doneLoading","showNewComments","trustSrc","trustAsResourceUrl","viewPost","is","postParams","postID","replyDirectToPost","directComment","updateLikeComment","isCommentLiked","getUnlikeCommentRequest","getLikeCommentRequest","deleteComment","deleteCommentRequest","reportCommentAsSpam","flagCommentRequest","VideoService","DateUtilityService","updateFeed","feedData","existingLength","tabArray","videoArray","tempItem","itemExists","j","embedAuthor","postAuthorAlias","alias","tweetId","tweet","embedProvider","embedText","retweetCount","providerLogo","embedUrl","embedPlayable","mediaType","loadingVideo","updateTimestamps","getTimeSince","createdAtFull","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","resetVideoOffset","loadContent","channel","getChannelId","getVideoDataRequest","innerHeight","watchContentScroll","currentScroll","retweetPost","method","headers","Access-Control-Allow-Origin","shareTweetToChat","embedShareContent","showShareDialog","fullClient","submitSharedPost","commentData","embedData","postCommentRequestForShare","shareToFacebook","ui","exitShare","highlightPost","unhighlightPost","secureLink","isGuestUser","socialArray","loadingSocial","resetSocialOffset","getSocialDataRequest","generateImagePreview","evt","f","files","match","previewSrc","reader","FileReader","onload","theFile","span","innerHTML","result","join","dontAdd","readAsDataURL","MUS_SERVER_URI","DEV_BUILD","UPLOAD_URL","uploader","autoUpload","removeAfterUpload","queueLimit","isHTML5","filters","fn","item","options","itemType","queue","size","addEventListener","removeMedia","clearQueue","wrap","closest","get","reset","unwrap","fileMaxExceeded","onWhenAddingFileFailed","info","HTML5warning","onAfterAddingFile","fileItem","onAfterAddingAll","addedFileItems","onBeforeUploadItem","user","getUserCredentials","X-UserId","userId","X-SessionId","sessionId","X-AccessToken","accessToken","formData","_file","file","onProgressItem","progress","onProgressAll","onSuccessItem","postMediaRequest","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","resetCommentParams","postComment","commentText","isComment","setCommentParams","topicId","postCommentRequest","getPostReplyRequest","uploadAll","blur","scrollTo","body","scrollHeight","mobileHighlightPost","mobileUnhighlightPost","factory","agent","test","navigator","userAgent","MSStream","_userAgent","check","a","substr","vendor","opera","isUserAgent","$websocket","DataService","initSocket","getWebsocketUri","socketUri","WEBSOCKET_BASE_URI","ws","setWatchTopic","onOpen","onClose","data","onMessage","responseJson","JSON","parse","rid","setTopic","setComments","setReplies","setSocial","setVideo","onError","stringify","disconnectSocket","reconnectSocket","reload","readyState","OPEN","message","key","value","localStorage","localStorageAvailable","setItem","getFromLocalStorage","getItem","clearStorage","clear","_p8","p","Math","random","toString","generateUUID","uuid","getDeviceId","getUrlVars","peelUserName","peelUserId","peelShowId","ssUserName","ssUserId","_MI16","vars","getPeelUserId","getPeelUserName","getPeelParams","substring","getSSUserId","getSSUserName","Bant","FDSUtility","setTopicData","topicData","_liveTopicId","notifyObservers","channelId","reqChannelId","uri","topicParams","timestamp","Date","getTime","callback","callbackLength","observerCallbacks","pop","forEach","directive","restrict","link","$elem","$attrs","element","$eval","secureClick","secureFocus","$element","$last","repeatFinishedNotify","scope","thisPost","trustSource","elem","attr","vidIndex","setYOffset","video","y","setXOffset","x","firstElementChild","childNodes","loadingSpinner","className","zIndex","canPlay","togglePlayPause","thesePlayerNodes","thisVideo","thisThumbnail","thisPlayBtn","thisLoading","paused","ended","play","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","pause","setAspectRatio","aspectRatio","orientation","classStrings","setDimensions","thisWidth","width","styleObj","priority","$attributes","ngElementReady","trustSrcHtml","iframePlayer","setOffsets","image","direction","ref","offsetScale","h","scaledY","w","scaledX","thisImage","service","delegateSetComments","error","updateComment","updateCommentCount","commentId","DATA_BANT_ID_LENGTH","appendToComments","updateCommentLocalData","delegateSetTopic","removeTopic","delegateSetReplies","replyData","updateReply","updateReplyCountById","appendToReplies","getCommentIdByReply","updateReplyLocalData","delegateSetChannel","delegateSetSocial","setSocialData","delegateSetVideo","setVideoData","watched","content","_title","title","_topicType","_id","_game","game","_scheduledAt","getGameScheduledTime","scheduledAt","_score","live","_status","_gameStats","_topic","bant","WATCH_TOPIC_URI","_isTopicWatched","LIKE_TOPIC_URI","updateBantLiked","UNLIKE_TOPIC_URI","updateTopicData","scoreData","setScoreData","TOPIC_BASE_URI","varTopicParams","encodeURI","owner","likeTopicRequest","varLikeParams","unlikeTopicRequest","getTopicId","getGame","teams","links","getHtml","watch","videoData","_videoArray","tempData","results","_videoObject","_offset","nextOffset","reqOffset","request","LIST_SOCIAL_URI","LIMIT","socialData","_socialArray","_socialObject","_hidePeelSplash","_hideSSSplash","val","_comments","tempCommentsData","_commentObject","prevOffset","SHOW_COMMENT_URI","postCommentData","media","pin","_pinnedComments","splice","unshift","commentObj","updateLocalData","newData","updateLikeCommentWithId","tempObject","getCommentById","removeComment","temp","tempObserverCallbacks","commentGetRequest","queryStr","commentPostRequest","LIST_COMMENTS_URI","getCommentByIdRequest","createCommentParams","POST_COMMENT_URI","lang","sections","postCommentRequestForMedia","mediaData","m","likeCommentRequest","LIKE_COMMENT_URI","unlikeCommentRequest","UNLIKE_COMMENT_URI","FLAG_COMMENT_URI","DELETE_COMMENT_URI","isLikedById","tempStructure","deleteById","flagById","UNFLAG_COMMENT_URI","HIDE_COMMENT_URI","hideById","UNHIDE_COMMENT_URI","_loadedComments","timeSince","timeStamp","now","createdDate","secondsPast","parseInt","daysPassed","floor","day","getDate","month","toDateString","year","getFullYear","gameScheduleTime","date_format","getMonth","hour","getHours","minutes","getMinutes","time","ext","timeZone","toLocaleString","timeZoneName","split","date","extractMediaObject","_bantObject","tempMedia","EXTRACT_MEDIA_TYPE_LENGTH","thumbUrl","sizes","mediaAspect16x9","mediaAspect1x1","mediaAspect2x1","extractEmbedObject","embedObject","embedTitle","embedMetrics","embedMini","mini","sectionsLength","ogp","likeObject","_userInfo","userInfoTemp","setUserCredentials","userType","_isUserLoggedIn","GEN_DEBUG","ssUser","MI16User","getUserType","userLoggedInToFacebook","userData","userName","login","utcOffset","deviceId","locale","deviceType","deviceModel","appKey","appVersion","facebook","userID","peel","isMI16","post","REGISTER_SERVER_URI","then","initializeContent","initChannel","initTopic","initPost","getPostId","getPostsForTopicID","staticPosts","fakePhotos","usedFakePhotos","fakeVideos","usedFakeVideos","peelDemoData","postContent","postMedia","peelPost","fakePost","Object","minimumCharacterCount","randomCharacterCount","round","loremIpsum","postType","fakePhoto","fakeVideo","postAuthors","commentCount","getRepliesForPostID","fakeReplies","fakeReply","loremIpsumSubstring","replyContent","replyType","getStructureById","array","getIndexById","isFlaggedById","flag","index","POST_REPLY_URI","tId","isCom","comId","repId","replyId"],"mappings":"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","file":"app.min.js","sourcesContent":["angular.module(\"Forum\", [\"ui.router\",\"ngSanitize\",\"AuthModule\",\"ChannelModule\",\"TopicModule\",\"ChatModule\",\"PostModule\",\"NetworkModule\",\"MediaModule\",\"VideoModule\",\"SocialModule\",\"UserInput\",\"SmartStadiumModule\"])\n.config([\"$stateProvider\", \"$urlRouterProvider\", \"$locationProvider\",\nfunction ($stateProvider, $urlRouterProvider, $locationProvider) {\n  \n  $stateProvider\n  .state('login', {\n    url: '/login',\n    templateUrl:'partials/facebookLogin.html',\n    controller:'AuthController'\n  })\n  .state('channel', {\n    url: '/channel/:channelID?peel&userId&userName&showId&smartStadium&MI16',\n    templateUrl:'partials/login.html',\n    controller:'ChannelController'\n  })\n  .state('topic', {\n    url: '/topic/:topicID?channel&peel&userId&userName&showId&smartStadium&MI16',\n    abstract: true,\n    templateUrl:'partials/topic.html',\n    controller:'TopicController'\n  })\n    .state('topic.chat', {\n      url: '/chat',\n      deepStateRedirect: true,\n      views: {\n        'topic-tab-view': {\n          templateUrl:'partials/chat.html',\n          controller: 'ChatController',\n          controllerAs: 'chat'\n        }\n      }\n    })\n    .state('topic.video', {\n      url: '/video',\n      deepStateRedirect: true,\n      views: {\n        'topic-tab-view': {\n          templateUrl:'partials/video.html',\n          controller: 'VideoController',\n          controllerAs: 'video'\n        }\n      }\n    })\n    .state('topic.social', {\n      url: '/social',\n      deepStateRedirect: true,\n      views: {\n        'topic-tab-view': {\n          templateUrl:'partials/social.html',\n          controller: 'SocialController',\n          controllerAs: 'social'\n        }\n      }\n    })\n  .state('post', {\n    url: '/post/:postID?channel&peel&userId&userName&showId&smartStadium&MI16',\n    templateUrl:'partials/post.html',\n    controller:'PostController'\n  })\n  .state('invalid', {\n    url: 'invalidTopic',\n    templateUrl:'partials/invalidTopic.html'\n  })\n  $urlRouterProvider.when('/topic/:topicID', '/topic/:topicID/chat');\n  $urlRouterProvider.otherwise('invalid');\n\n  if (window.history && window.history.pushState && HTML5_LOC){\n    $locationProvider.html5Mode({\n      enabled:true\n    });\n  }\n}])\n\n.run(['$state','$rootScope',function ($state, $rootScope) {\n  $rootScope.$state = $state;\n}])\n\n.filter('hashtags',['$filter', '$sce',\n  function ($filter, $sce) {\n    return function(text, target) {\n      if (!text) return text;\n\n      var replacedText = $filter('linky')(text, target);\n      var targetAttr = \"\";\n      if (angular.isDefined(target)) {\n          targetAttr = ' target=\"' + target + '\"';\n      }\n      // replace #hashtags and send them to twitter\n      var replacePattern1 = /(^|\\s)#(\\w*[a-zA-Z_]+\\w*)/gim;\n      replacedText = text.replace(replacePattern1, '$1<a href=\"https://twitter.com/search?q=%23$2\"' + targetAttr + '>#$2</a>');\n      // replace @mentions but keep them to our site\n      var replacePattern2 = /(^|\\s)\\@(\\w*[a-zA-Z_]+\\w*)/gim;\n      replacedText = replacedText.replace(replacePattern2, '$1<a href=\"https://twitter.com/$2\"' + targetAttr + '>@$2</a>');\n\n      $sce.trustAsHtml(replacedText);\n      return replacedText;\n  };\n}]);\n","angular.module(\"ChannelModule\", [\"NetworkModule\", \"AuthModule\"])\n.controller(\"ChannelController\", [\"$scope\", \"$state\", \"$stateParams\", \"$window\",\"$location\",\"$sce\",\"networkService\", \"ChannelService\",\"TopicService\",\"URIHelper\",\"AuthService\",\"UserInfoService\",\n\nfunction ($scope,$state,$stateParams,$window,$location,$sce,networkService,ChannelService,TopicService, URIHelper, AuthService, UserInfoService)\n{\n  ChannelService.setChannel($stateParams.channelID);\n  var channelParams = $stateParams;\n  console.log(\"Channel Params: \", channelParams);\n  // if (window.location.href.indexOf('?') !== -1){\n  //   $scope.urlQueryStr = window.location.href.slice(window.location.href.indexOf('?')+1);\n  //   console.log(\" $scope.urlQueryStr: \" + $scope.urlQueryStr);\n  // }\n  \n  $scope.init = function() {\n    console.log(\"Init all connections\");\n    networkService.init();\n    networkService.send(ChannelService.getLiveGameTopic($stateParams.channelID));\n  };\n\n  \n  var updateTopic = function(){\n    var id = ChannelService.getLiveTopicId();\n    if(id !== undefined){\n      console.log(\"Got Topic id from Channel : \" +\"/topic/\" + id + $scope.urlQueryStr);\n      if (HTML5_LOC){\n        if(!!$scope.urlQueryStr)\n          $location.path(\"/topic/\" + id).search($scope.urlQueryStr);\n        else\n          $location.path(\"/topic/\" + id);\n      } else {\n        // if(!!$scope.urlQueryStr)\n        var paramsObj = channelParams;\n        paramsObj.topicID = id;\n        // paramsObj.channel = channelParams.channelID;\n        console.log(\"GO Topic: \", paramsObj);\n        $state.go(\"topic.chat\", paramsObj);\n        // else\n          // $window.location = \"#/topic/\" + id;\n      }\n    }\n\n  };\n  \n  \n\n  ChannelService.registerObserverCallback(updateTopic);\n  \n  if(UserInfoService.isUserLoggedIn()){\n    if(NETWORK_DEBUG)\n      console.log(\"User is logged in, checking for connection\");\n    $scope.init();\n  }\n  else if (URIHelper.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    AuthService.loginWithEmail();\n  }\n  else if (URIHelper.isTechMUser()){\n    console.log(\"MI16 User Detected\");\n    $window.location = \"#/login?MI16=true\";\n  }\n  else {\n    if(URIHelper.isPeelUser()){\n      $scope.isPeelUser = true;\n      AuthService.loginWithPeel();\n    }\n    else{\n      AuthService.loginAsGuest();\n    }\n  }\n  \n\n}]);\n","angular.module(\"AuthModule\", [\"NetworkModule\", \"TopicModule\"])\n.controller(\"AuthController\", [\"$scope\", \"$stateParams\", \"$http\", \"AuthService\", \"UserInfoService\", \"TopicService\", \"ReplyService\", \"networkService\",\"ForumDeviceInfo\", \"ChannelService\", \"URIHelper\",\n  function ($scope, $stateParams, $http, AuthService, UserInfoService, TopicService, ReplyService, networkService, ForumDeviceInfo, ChannelService, URIHelper) {\n\n    if (window.location.href.indexOf('?') !== -1){\n      var urlQueryStr = window.location.href.slice(window.location.href.indexOf('?')+1);\n      console.log(\"urlQueryStr: \", urlQueryStr);\n      if (urlQueryStr === 'MI16=true'){\n        $scope.techMIUser = true;\n        $scope.facebookUser = false;\n      }\n    } else {\n      $scope.techMIUser = false;\n      $scope.facebookUser = true;\n    }\n\n    if ($scope.facebookUser){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n      ga('send', 'pageview', 'Facebook Landing');\n    }\n    else {\n      ga('send', 'pageview', 'Tech MI16 Landing');\n    }\n    // FACEBOOK AUTH SECTION\n    $scope.showFacebookButton = true;\n\n    function showSpinner() {\n      $scope.showFacebookButton = false;\n    }\n\n    $scope.loginToFacebook = function() {\n      AuthService.loginToFacebook(showSpinner);\n    };\n\n    $scope.techMLogin = function(name, email, isValid) {\n      if (isValid){\n        AuthService.techMLogin(name, email);\n      }\n      $scope.submitted = true;\n    };\n\n    // load Facebook SDK and initialize\n    // TBD: may want to move this initialization to the run cycle instead of in controller\n    window.fbAsyncInit = function() {\n      \n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n\n      FB.getLoginStatus(function (response) {\n\n        // User is logged in to Facebook and authenticated our app\n        // response.authResponse contains user auth information\n        if (response.status === 'connected') {\n          $scope.showFacebookButton = false;\n          var registerParams = AuthService.setRegistrationParams(\"facebook\", -25200, response.authResponse);\n          AuthService.registerUser(registerParams);\n        }\n        // User is logged in to Facebook but hasn't authenticated our app\n        else if (response.status === 'not_authorized') {\n          // FB.login();\n          $scope.showFacebookButton = false;\n          $scope.loginToFacebook();\n        }\n        // User not logged in to Facebook\n        else {\n          $scope.showFacebookButton = true;\n        }\n\n      });\n\n    };\n\n\n    \n}]);","angular.module(\"TopicModule\", [\"NetworkModule\", \"SplashModule\", \"AuthModule\", \"MediaModule\", \"angularFileUpload\",\"SocialModule\"])\n.controller(\"TopicController\", [\"$scope\", \"$state\", \"$stateParams\", \"$sce\", \"$window\", \"$location\",\"$sanitize\", \"$timeout\", \"networkService\", \"TopicService\",\"CommentService\", \"UserInfoService\",\"URIHelper\",\"AuthService\",\"SplashService\",\"MUService\",\"ForumStorage\",\"FileUploader\",\"SocialService\",\"ChannelService\",\"UserAgentService\",\n\nfunction ($scope, $state, $stateParams, $sce, $window, $location, $sanitize, $timeout, networkService,TopicService, CommentService, UserInfoService, URIHelper, AuthService, SplashService,MUService,ForumStorage,FileUploader,SocialService, ChannelService, UserAgentService)\n{\n  // var lastComment = false;\n  // Check For Mobile Browser\n  if (UserAgentService.isMobileUser()){\n    $scope.mobileBrowser = true;\n    $scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n    console.log(\"MOBILE USER AGENT: \", $scope.mobileUserAgent);\n  } else {\n    $scope.mobileBrowser = false;\n  }\n\n  // if (!$scope.commentsArray){\n  //   $scope.loadingChat = true;\n  // }\n\n  ga('send', 'pageview', \"/topic/\"+$stateParams.topicID);\n  console.log('Sent Pageview from /topic/' + $stateParams.topicID);\n  \n  TopicService.setTopicId($stateParams.topicID);\n  $scope.topicType = \"livegame\";\n  $scope.innerButtonTapped = false;\n  if (UserInfoService.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    // if (!UserInfoService.hasUserVisited()){\n      console.log('SS USER HASNT VISITED');\n      $scope.hideSSSplash = false;\n      ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n      $timeout(function() {$scope.continueToExperience('smartS'); }, 5000);\n    // }\n  }\n  else if (UserInfoService.isMI16User()){\n    $scope.isMI16User = true;\n  }\n  else if(UserInfoService.isPeelUser()){\n    $scope.isPeelUser = true;\n    if (!UserInfoService.hasUserVisited()){\n      console.log('PEEL USER HASNT VISITED');\n      $scope.hidePeelSplash = false;\n      ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n      $timeout(function() {$scope.continueToExperience('peel'); }, 5000);\n    }\n  }\n  else {\n    $scope.isPeelUser = false;  \n    $scope.hidePeelSplash = true;\n    $scope.hideSSSplash = true;\n  }\n\n  $scope.continueToExperience = function(env) {\n    console.log(\"CONTINUE XP CLICKED\");\n    if (env === 'peel'){\n      SplashService.setPeelSplash(true);\n      $scope.hidePeelSplash = true;\n    } else if (env === 'smartS'){\n      SplashService.setSSSplash(true);\n      $scope.hideSSSplash = true;\n    }\n  };\n  $scope.setScoreCardUI = function() {\n    if ($scope.topicType === 'livegame'){\n      if ($scope.isPeelUser){\n        $('#topicSection').css('padding-top','54px');\n      } else if ($scope.isSmartStadiumUser){\n        $('#topicSection').css('padding-top','54px');\n      } else if ($scope.isMI16User){\n        // $('#topicSection').css('padding-top','54px');\n      } else {\n        $('#topicSection').css('padding-top','0px');\n      }\n    }\n  };\n  \n  var updateTopic = function(){\n    if(TopicService.getTopic() !== undefined){\n      $scope.topicType = TopicService.getTopicType();\n      if(TopicService.isWatchingTopic() === false){\n        networkService.send(TopicService.getFollowChannelRequest());\n        networkService.send(TopicService.watchTopicRequest($stateParams.topicID));\n      }\n      \n      \n      $scope.setScoreCardUI();\n      if($scope.topicType == \"livegame\"){\n        console.log(\"Inside topic set :\"+ TopicService.getTeamA());\n        //Score API update\n        $scope.leftTeam = TopicService.getTeamA();\n        $scope.rightTeam = TopicService.getTeamB();\n        var score = TopicService.getScore();\n        if(score != undefined){\n          $scope.leftTeamScore = score.points[0];\n          $scope.rightTeamScore = score.points[1];\n        }\n        $scope.gameStatus = TopicService.getGameStatus();\n        // console.log($scope.gameStatus)\n\n        if($scope.gameStatus == \"live\") {\n          $scope.gamePeriod = TopicService.getGamePeriod();\n          $scope.gameClock = TopicService.getGameClock();\n        }\n\n        $scope.gameScheduledTime = TopicService.getGameTime();\n\n\n\n        $scope.allScoresTitle = TopicService.getScoresTitle();\n        $scope.allScoresURL = TopicService.getScoresLink();\n\n        // renderScoreCard($scope.leftTeam.pColor, $scope.rightTeam.pColor);\n        var left = $('.scoreCardContent');\n        var right = $('.svg-content');\n        left.css('background-color', $scope.leftTeam.pColor);\n        right.css('fill', $scope.rightTeam.pColor);\n      }\n      $scope.topicTitle = TopicService.getTitle();\n      var thisTopic = TopicService.getTopic();\n      $scope.topicDescHtml = thisTopic.html;\n      //console.log(\"has MEDIA  :\"+ thisTopic.type +\"thisTopic.mediaUrl\"+ thisTopic.mediaUrl);\n      if(thisTopic.type == \"media\"){\n      $scope.topicMediaUrl = thisTopic.mediaUrl;\n      $scope.topicMediaAspectFeed = thisTopic.mediaAspectFull;\n      }\n//      var width = window.innerWidth;\n//      console.log(\"Image width :\"+$scope.topicMediaAspectFeed.w +\"  X  \" + $scope.topicMediaAspectFeed.h + \"xxxx \"+width)\n//      $scope.topicMediaAspectFull = thisTopic.mediaAspectFull;\n\n      $scope.createdAt = TopicService.getTimeCreatedAt();\n      $scope.liked = TopicService.getLiked();\n      var metrics = TopicService.getMetrics();\n      $scope.likesCount = metrics.likes;\n      $scope.commentsCount = metrics.comments;\n      if (!$scope.commentsCount || $scope.commentsCount === 0){\n        $scope.loadingChat = false;\n      }\n\n    }\n  };\n\n  // var updateComments = function(){\n  //   var commentsdata = CommentService.comments();\n  //   if(commentsdata != undefined && (commentsdata.length >0 || lastComment === true)){\n  //     lastComment = false;\n  //     // console.log(\"CommentsData : \", commentsdata);\n  //     var len = commentsdata.length;\n\n  //     $scope.commentsArray = [];\n\n  //     for(i=0;i<len;i++){\n  //       var tempComment = {};\n  //       tempComment = commentsdata[i];\n  //       tempComment.postAuthorName = commentsdata[i].author.name;\n  //       tempComment.postAuthorPhoto = commentsdata[i].author.photo;\n  //       tempComment.isMyComment = UserInfoService.isCurrentUser(commentsdata[i].author.id);\n\n  //       tempComment.likeCount = commentsdata[i].metrics.likes;\n  //       tempComment.replyCount = commentsdata[i].metrics.replies;\n\n  //       tempComment.postTimestamp = commentsdata[i].createdAt;\n  //       if (tempComment.type === 'media'){\n  //         tempComment.mediaUrl = commentsdata[i].mediaUrl;\n  //         // tempComment.trustedMediaUrl = $scope.trustSrc(tempComment.mediaUrl);\n  //         tempComment.mediaAspectFeed = commentsdata[i].mediaAspectFeed;\n  //         tempComment.mediaAspectFull = commentsdata[i].mediaAspectFull;\n  //         tempComment.mediaAspectRatio = commentsdata[i].mediaAspectRatio;\n  //         tempComment.mediaOrientation = commentsdata[i].mediaOrientation;\n  //         tempComment.mediaThumbUrl = commentsdata[i].mediaThumbUrl;\n  //       }\n  //       tempComment.isLiked = commentsdata[i].signal.like;\n\n  //       if (tempComment.type === 'embed'){\n  //         tempComment.shared = true;\n  //         tempComment.embed = commentsdata[i].embed;\n  //         tempComment.embed.embedCreatedAt = commentsdata[i].embedCreatedAt;\n  //         tempComment.embed.embedCreatedAtFull = commentsdata[i].embedCreatedAtFull;\n  //         tempComment.embedType = commentsdata[i].embedType;\n          \n  //         if (tempComment.embedType === 'media' || tempComment.embedType === 'link'){\n  //           tempComment.mediaUrl = commentsdata[i].embedMedia.mediaUrl;\n  //           tempComment.mediaThumbUrl = commentsdata[i].embedMedia.mediaThumbUrl;\n  //           tempComment.mediaAspectFeed = commentsdata[i].embedMedia.mediaAspectFeed;\n  //           tempComment.mediaAspectFull = commentsdata[i].embedMedia.mediaAspectFull;\n  //           tempComment.mediaAspectRatio = commentsdata[i].embedMedia.mediaAspectRatio;\n  //           tempComment.mediaOrientation = commentsdata[i].embedMedia.mediaOrientation;\n  //         }\n\n  //         if (tempComment.providerName === \"Twitter\"){\n  //           tempComment.embed.embedLogo = \"img/twitterLogo@2x.png\";\n  //         } else {\n  //           tempComment.embed.embedLogo = commentsdata[i].embed.provider.logo;\n  //         }\n\n  //         if (commentsdata[i].embed.type === 'link' && commentsdata[i].embed.playable === true){\n  //           tempComment.embedHtml = commentsdata[i].embedHtml;\n  //         }\n  //       }\n  //       $scope.commentsArray.push(tempComment);\n  //       if (i === len - 1 && NETWORK_DEBUG){\n  //         console.log(\"Comments Array: \", $scope.commentsArray);\n  //       }\n\n  //     }\n  //   }\n\n  // };\n\n  // $scope.loadRemainingComments = function() {\n  //   console.log(\"LOADING REST OF COMMENTS...\");\n  //   if (!CommentService.loadedComments()){\n  //     networkService.send(CommentService.getCommentsRequest($stateParams.topicID));\n  //     CommentService.setLoadedComments(true);\n  //     $scope.loadedAllComments = true;\n  //   }\n  // };\n\n  $scope.init = function() {\n    networkService.send(TopicService.getTopicRequest($stateParams.topicID));\n    // networkService.send(CommentService.getCommentsRequest($stateParams.topicID));\n  };\n  \n\n  $scope.setPeelUI = function(isPeelUser){\n    //console.log(\"isPeelUser :\"+isPeelUser);\n    $scope.isPeelUser = isPeelUser;\n    \n  };\n\n  \n  $scope.setPeelUI($scope.isPeelUser);\n\n  // $scope.hideLoading = function(){\n  //   console.log(\"HIDING LOAD\");\n  //   $scope.loadingChat = false;\n  //   $scope.loadingSocial = false;\n  //   $scope.loadingSocial = false;\n  // };\n  $scope.initPage = function(){\n    updateTopic();\n    // updateComments();\n    $scope.pageClass = 'page-topic';\n    // $scope.showNewCommentsIndicator = false;\n\n    $scope.topicID = $stateParams.topicID;\n    $scope.init();\n\n    if ($scope.mobileBrowser === true){\n      document.getElementById('topicSection').style.paddingBottom = \"42px\";\n    }\n  };\n\n  // $scope.setLinksOnComments = function(){\n  //   var postDivs = document.getElementsByClassName(\"postRow\");\n  //   for (div in postDivs) {\n  //     var thisDiv = postDivs[div];\n  //     thisDiv.onclick = function(e) {\n  //       if ($(e.target).is('a')) {\n  //         console.log(\"EXTERNAL LINK: \", e, this.id);\n  //         return;\n  //       } \n  //       thisPost = $scope.commentsArray[this.id];\n  //       if ($scope.innerButtonTapped === false) {\n  //         console.log(\"Post Click Active: \", thisPost.id);\n  //         if (HTML5_LOC){\n  //           $location.path(\"/post/\" + thisPost.id);\n  //           if (!$scope.$$phase){\n  //             $scope.$apply();\n  //           }\n  //         } else {\n  //           // $window.location = \"#/post/\" + thisPost.id;\n  //           var postParams = $stateParams;\n  //           postParams.postID = thisPost.id;\n  //           $state.go('post', postParams);\n  //         }\n  //       }\n  //       $scope.innerButtonTapped = false;\n  //     }\n  //   }\n  // }\n\n//  if(URIHelper.isPeelUser())\n//    ga('send', 'event', 'UserType', '0', 'Peel User', { 'nonInteraction': 2 });\n//  else\n//    ga('send', 'event', 'UserType', '0', 'Non Peel User', { 'nonInteraction': 2 });\n  if(UserInfoService.isUserLoggedIn()){\n    if(NETWORK_DEBUG)\n      console.log(\"User is logged in, checking for connection\");\n    if(!networkService.isSocketConnected())\n      networkService.init();\n    $scope.initPage();\n  }\n  else if (URIHelper.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    console.log(\"SS User? \", $scope.isSmartStadiumUser);\n    AuthService.loginWithEmail();\n  }\n  else if (URIHelper.isTechMUser()){\n    // $window.location = \"#/login?MI16=true\";\n    $state.go('login', {MI16: true});\n  }\n  else if (URIHelper.isPeelUser()){\n    $scope.isPeelUser = true;\n    $scope.setPeelUI(true);\n    AuthService.loginWithPeel();\n  }\n  else {\n    // console.log(\"Not logged in to facebook, take user to login page\")\n    AuthService.loginAsGuest();\n  }\n\n\n  $scope.peelClose = function()\n  {\n    ga('send', 'event', 'Peel', 'click', 'BackToPeelHome');\n    console.log(\"peelClose()\");\n    window.location = \"peel://home\";\n  }\n\n  $scope.peelWatchOnTV = function()\n  {\n    ga('send', 'event', 'Peel', 'click', 'PeelWatchOnTV');\n    console.log(\"peelWatchOnTV()\");\n    var showId = URIHelper.getPeelShowId();\n    console.log(\"Peel show on TV uri :  \"+ \"peel://tunein/\"+showId);\n    if(showId != undefined)\n      window.location = \"peel://tunein/\"+showId;\n    else\n      window.location = \"peel://home\";\n  }\n\n  $scope.showNewCommentsIndicator = false;\n  // $scope.newCommentsIndicatorTapped = function()\n  // {\n  //   console.log(\"newCommentsIndicatorTapped\");\n  //   $scope.showNewCommentsIndicator = false;\n  //   updateComments();\n  //   $(document).scrollTop(0);\n  // }\n\n  $scope.imageClick = function(imageURL) {\n    event.cancelBubble = true;\n    if(event.stopPropagation) event.stopPropagation();\n\n    $.magnificPopup.open({\n      items: {\n        type:'image',\n        src: imageURL,\n      },\n      type: 'inline',\n      callbacks: {\n        open: function(){\n          $('body').bind('touchmove', function(e){e.preventDefault()})\n        },\n        close: function(){\n          $('body').unbind('touchmove')\n        }\n      }\n    });\n  };\n\n  // $scope.moreButtonTapped = function() {\n  //   $scope.innerButtonTapped = true;\n  // };\n\n  $scope.updateLikeTopic = function() {\n    console.log(\"TopicController update like Topic\");\n    if(TopicService.getLiked() == true)\n      networkService.send(TopicService.getUnlikeTopicRequest());\n    else\n      networkService.send(TopicService.getLikeTopicRequest());  \n  };\n\n  $scope.commentOnTopic = function() {\n    document.getElementById(\"topicCommentField\").focus();\n  };\n\n  // $scope.updateLikeComment = function(id) {\n  //   $scope.innerButtonTapped = true;\n    \n  //   console.log(\"TopicController updateLike (\" + id + \")\");\n  //   if(CommentService.isCommentLiked(id)){\n  //     networkService.send(CommentService.getUnlikeCommentRequest(id));\n  //   }\n  //   else{\n  //     networkService.send(CommentService.getLikeCommentRequest(id));  \n  //   }\n  // };\n\n  // $scope.deleteComment = function(id) {\n  //   console.log(\"deleteComment(\" + id + \")\");\n  //   if ($scope.commentsArray.length === 1){\n  //     console.log(\"Deleting Final Comment\");\n  //     lastComment = true;\n  //   }\n  //   $scope.innerButtonTapped = true;\n  //   networkService.send(CommentService.deleteCommentRequest(id));\n  // };\n\n  // $scope.reportCommentAsSpam = function(id) {\n  //   console.log(\"reportCommentAsSpam(\" + id + \")\");\n  //   $scope.innerButtonTapped = true;\n  //   networkService.send(CommentService.flagCommentRequest(id)); \n  // };\n\n  // $scope.goToRepliesWithKeyboardTriggered = function(id) {\n  //   // event.cancelBubble = true;\n  //   // if(event.stopPropagation) event.stopPropagation();\n\n  //   // console.log(\"TopicController.goToRepliesWithKeyboardTriggered(\" + id + \")\");\n  //   TopicService.directComment = true;\n  //   if (HTML5_LOC){\n  //     $location.path(\"/post/\" + id);\n  //   } else {\n  //     // $window.location = \"#/post/\" + id;\n  //     $state.go('post', {postID: id});\n  //   }\n  // };\n\n  // $scope.secureLink = function(url, id) {\n  //   if (UserInfoService.isGuestUser()){\n  //     return \"\";\n  //   } else {\n  //     return url + id;\n  //   }\n  // };\n\n  // var notifyNewComments = function() {\n  //   if($scope.commentsArray == undefined)\n  //   {\n  //     updateComments();\n  //   }\n  //   else {\n  //     var commentsdata = CommentService.comments();\n  //     var len = commentsdata.length;\n  //     var pinIndex = CommentService.getNumPinComments();\n  //     if($scope.commentsArray.length < len){\n  //       if(!UserInfoService.isCurrentUser(commentsdata[pinIndex].author.id)){\n  //         $scope.showNewCommentsIndicator = true;\n  //       }\n  //       else {\n  //         updateComments();\n  //       }\n  //     }\n  //     else{\n  //       updateComments();\n  //     }\n  //   }\n  // };\n\n  TopicService.registerObserverCallback(updateTopic);\n  // CommentService.registerObserverCallback(notifyNewComments);\n  // CommentService.registerObserverCallback(updateComments, true);\n\n  // $scope.trustSrc = function(src) {\n  //   return $sce.trustAsResourceUrl(src);\n  // }\n\n  // CONTENT TABS\n  $scope.switchTabs = function(tab) {\n    if (tab === 'chat'){\n      $('#chatTab').addClass('selectedTab');\n      $('#videoTab').removeClass('selectedTab');\n      $('#socialTab').removeClass('selectedTab');\n      $state.go('topic.chat');\n      $(document).scrollTop(0);\n      updateTopic();\n    }\n    if (tab === 'video'){\n      $('#chatTab').removeClass('selectedTab');\n      $('#videoTab').addClass('selectedTab');\n      $('#socialTab').removeClass('selectedTab');\n      $state.go('topic.video');\n      $(document).scrollTop(0);\n    }\n    if (tab === 'social'){\n      $('#chatTab').removeClass('selectedTab');\n      $('#videoTab').removeClass('selectedTab');\n      $('#socialTab').addClass('selectedTab');\n      $state.go('topic.social');\n      $(document).scrollTop(0);\n    }\n  };\n\n  $scope.initializeTab = function() {\n    console.log(\"Initializing Tabs\");\n    if ($state.includes(\"topic.chat\")){\n      console.log(\"In Chat\");\n      $('#chatTab').addClass('selectedTab');\n    }\n    else if ($state.includes(\"topic.video\")){\n      console.log(\"In Video\");\n      $('#videoTab').addClass('selectedTab');\n    }\n    else if ($state.includes(\"topic.social\")){\n      console.log(\"In Social\");\n      $('#socialTab').addClass('selectedTab');\n    }\n  };\n\n  var _channelId = ChannelService.getChannel();\n  TopicService.setChannel(_channelId);\n\n  function debounce(func, wait, immediate) {\n    var timeout;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  };\n\n  var docVarsSet = false;\n  var tabs,\n      tabContainer,\n      tabsTop,\n      tabsHeight,\n      inputHeight,\n      clientHeight,\n      docHeight,\n      headerHeight;\n  var debugObj;\n  $scope.setDocVars = function() {\n    console.log(\"Setting Doc Vars\");\n    if (!docVarsSet){\n      tabs = $('#inputControls').first();\n      tabContainer = $('.tabContainer').first();\n      tabsTop = tabs.offset().top;\n      tabsHeight = tabContainer.height();\n      inputHeight = tabs.height();\n      clientHeight = document.documentElement.clientHeight;\n      docHeight = $(document).height();\n      docVarsSet = true;\n      if ($scope.isSmartStadiumUser){\n        headerHeight = 54;\n      } else if ($scope.isPeelUser){\n        headerHeight = 54;\n      } else {\n        headerHeight = 0;\n      }\n      debugObj = {\n        tabs: tabs,\n        tabsTop: tabsTop,\n        inputHeight: inputHeight,\n        tabContainer: tabContainer,\n        tabsHeight: tabsHeight,\n        clientHeight: clientHeight,\n        docHeight: docHeight,\n        headerHeight: headerHeight\n      }\n    }\n  };\n\n  var fixed = false;\n  var watchScroll = function watchScroll() {\n    console.log(\"Tabs Top: \", tabsTop, debugObj);\n    if ($scope.showNewCommentsIndicator){\n      $scope.showNewCommentsIndicator = false;\n    }\n      if ($(document).scrollTop() > (tabsTop - headerHeight) && (docHeight - clientHeight) > (tabsTop + inputHeight - tabsHeight)) {\n        tabs.addClass('fixTabsPeel');\n        tabs.css('top',headerHeight);\n        tabContainer.addClass('fixTabContainer');\n        $('.commentsContainer').css('padding-top',$('#inputControls').height());\n        fixed = true;\n      } else if (fixed) {\n        tabs.removeClass('fixTabsPeel');\n        tabs.css('top','');\n        tabContainer.removeClass('fixTabContainer');\n        $('.commentsContainer').css('padding-top','');\n        fixed = false;\n      }\n  };\n\n  $scope.setDocVars();\n  $(document).off('scroll');\n  $(document).on('scroll', watchScroll);\n\n\n\n}]);\n\n","angular.module('ChatModule', ['NetworkModule','AuthModule','SocialModule'])\n.controller('ChatController', ['$state','$stateParams','$sce','$window','$timeout','CommentService','ChannelService','TopicService','networkService','URIHelper','UserInfoService','UserAgentService',\n  function ($state,$stateParams,$sce,$window,$timeout,CommentService,ChannelService,TopicService,networkService,URIHelper,UserInfoService,UserAgentService) {\n\n    // Chat Initialization\n    var _this = this;\n    var lastComment = false;\n    _this.newCommentsAvailable = false;\n\n    if (!this.commentsArray){\n      this.loading = true;\n    }\n\n    function init() {\n      if (NETWORK_DEBUG) console.log(\"Init Chat for Topic: \", $stateParams.topicID)\n      networkService.send(CommentService.getCommentsRequest($stateParams.topicID));\n    }\n\n    // Comment Loading\n    function updateComments(){\n      var commentsdata = CommentService.comments();\n      if (commentsdata != undefined && (commentsdata.length > 0 || lastComment === true)){\n        lastComment = false;\n        var len = commentsdata.length;\n\n        _this.commentsArray = [];\n\n        for(i=0;i<len;i++){\n          var tempComment = {};\n          tempComment = commentsdata[i];\n          tempComment.postAuthorName = commentsdata[i].author.name;\n          tempComment.postAuthorPhoto = commentsdata[i].author.photo;\n          tempComment.isMyComment = UserInfoService.isCurrentUser(commentsdata[i].author.id);\n\n          tempComment.likeCount = commentsdata[i].metrics.likes;\n          tempComment.replyCount = commentsdata[i].metrics.replies;\n\n          tempComment.postTimestamp = commentsdata[i].createdAt;\n          if (tempComment.type === 'media'){\n            tempComment.mediaUrl = commentsdata[i].mediaUrl;\n            tempComment.mediaAspectFeed = commentsdata[i].mediaAspectFeed;\n            tempComment.mediaAspectFull = commentsdata[i].mediaAspectFull;\n            tempComment.mediaAspectRatio = commentsdata[i].mediaAspectRatio;\n            tempComment.mediaOrientation = commentsdata[i].mediaOrientation;\n            tempComment.mediaThumbUrl = commentsdata[i].mediaThumbUrl;\n          }\n          tempComment.isLiked = commentsdata[i].signal.like;\n\n          if (tempComment.type === 'embed'){\n            tempComment.shared = true;\n            tempComment.embed = commentsdata[i].embed;\n            tempComment.embed.embedCreatedAt = commentsdata[i].embedCreatedAt;\n            tempComment.embed.embedCreatedAtFull = commentsdata[i].embedCreatedAtFull;\n            tempComment.embedType = commentsdata[i].embedType;\n            \n            if (tempComment.embedType === 'media' || tempComment.embedType === 'link'){\n              tempComment.mediaUrl = commentsdata[i].embedMedia.mediaUrl;\n              tempComment.mediaThumbUrl = commentsdata[i].embedMedia.mediaThumbUrl;\n              tempComment.mediaAspectFeed = commentsdata[i].embedMedia.mediaAspectFeed;\n              tempComment.mediaAspectFull = commentsdata[i].embedMedia.mediaAspectFull;\n              tempComment.mediaAspectRatio = commentsdata[i].embedMedia.mediaAspectRatio;\n              tempComment.mediaOrientation = commentsdata[i].embedMedia.mediaOrientation;\n            }\n\n            if (tempComment.providerName === \"Twitter\"){\n              tempComment.embed.embedLogo = \"img/twitterLogo@2x.png\";\n            } else {\n              tempComment.embed.embedLogo = commentsdata[i].embed.provider.logo;\n            }\n\n            if (commentsdata[i].embed.type === 'link' && commentsdata[i].embed.playable === true){\n              tempComment.embedHtml = commentsdata[i].embedHtml;\n            }\n          }\n          _this.commentsArray.push(tempComment);\n        }\n        if (NETWORK_DEBUG) console.log(\"Comments Array: \", _this.commentsArray);\n      }\n    }\n\n    this.loadRemainingComments = function() {\n      console.log(\"LOADING REST OF COMMENTS...\");\n      if (!CommentService.loadedComments()){\n        networkService.send(CommentService.getCommentsRequest($stateParams.topicID));\n        CommentService.setLoadedComments(true);\n        _this.loadedAllComments = true;\n      }\n    };\n\n    this.doneLoading = function() {\n      _this.loading = false;\n    };\n\n    this.showNewComments = function() {\n      _this.newCommentsAvailable = false;\n      updateComments();\n      $(document).scrollTop(0);\n    };\n\n    function notifyNewComments() {\n      if(!_this.commentsArray){\n        updateComments();\n      } else {\n        var commentsData = CommentService.comments();\n        var len = commentsData.length;\n        var pinIndex = CommentService.getNumPinComments();\n        if (_this.commentsArray.length < len){\n          if (!UserInfoService.isCurrentUser(commentsData[pinIndex].author.id)){\n            _this.newCommentsAvailable = true;\n          } else {\n            updateComments();\n          }\n        } else {\n          updateComments();\n        }\n      }\n    }\n\n    CommentService.registerObserverCallback(notifyNewComments);\n    CommentService.registerObserverCallback(updateComments, true);\n\n    this.trustSrc = function(src) {\n      return $sce.trustAsResourceUrl(src);\n    }\n\n    // Chat Navigation\n    this.viewPost = function(e, id) {\n      if ($(e.target).is('a')){\n        return;\n      }\n      var postParams = $stateParams;\n      postParams.postID = id;\n      $state.go('post', postParams);\n    };\n\n    this.replyDirectToPost = function(id) {\n      TopicService.directComment = true;\n      var postParams = $stateParams;\n      postParams.postID = id;\n      $state.go('post', postParams);\n    };\n\n    // Comment Operations\n    this.updateLikeComment = function(id) {\n      if (NETWORK_DEBUG) console.log(\"Like Comment: \", id);\n      if (CommentService.isCommentLiked(id)){\n        networkService.send(CommentService.getUnlikeCommentRequest(id));\n      } else {\n        networkService.send(CommentService.getLikeCommentRequest(id));  \n      }\n    };\n\n    this.deleteComment = function(id) {\n      if (NETWORK_DEBUG) console.log(\"Delete Comment: \", id);\n      if (_this.commentsArray.length === 1){\n        if (NETWORK_DEBUG) console.log(\"Deleting Final Comment\");\n        lastComment = true;\n      }\n      networkService.send(CommentService.deleteCommentRequest(id));\n    };\n\n    this.reportCommentAsSpam = function(id) {\n      if (NETWORK_DEBUG) console.log(\"Report Comment As Spam: \", id);\n      networkService.send(CommentService.flagCommentRequest(id)); \n    };\n\n    init();\n\n}]);\n","angular.module(\"VideoModule\", [\"NetworkModule\",\"ChannelModule\",\"TopicModule\"])\n.controller(\"VideoController\", [\"$state\",\"$stateParams\",\"$sce\",\"$window\",\"$http\",\"VideoService\",\"networkService\",\"ChannelService\",\"TopicService\",\"DateUtilityService\",\"CommentService\",\"URIHelper\",\"UserInfoService\",\n  function ($state,$stateParams,$sce,$window,$http,VideoService,networkService,ChannelService,TopicService,DateUtilityService,CommentService,URIHelper, UserInfoService){\n\n    var _this = this;\n    if (!this.videoArray){\n      this.loading = true;\n    }\n    if (!!this.videoArray){\n      updateTimestamps();\n    }\n    VideoService.resetVideoOffset();\n    VideoService.registerObserverCallback(function(){updateFeed();});\n\n\n    this.loadContent = function(offset) {\n      var channelID = $stateParams.channel || ChannelService.getChannel()||TopicService.getChannelId();\n      console.log(\"LOADING VIDEO: \", channelID);\n      networkService.send(VideoService.getVideoDataRequest(channelID,offset));\n    };\n    this.loadContent();\n\n    function updateFeed() {\n      console.log(\"Updating Video Feed\");\n      // Get Appropriate Content\n      var feedData,\n          existingLength,\n          tabArray;\n      feedData = VideoService.videoArray();\n      _this.videoArray = _this.videoArray || [];\n      existingLength = _this.videoArray.length;\n      tabArray = _this.videoArray;\n\n      var len = feedData.length;\n      if (!!feedData && len > 0){\n        // console.log(\"Feed Data: \", feedData, \" Type: \", tab);\n\n        for (var i = 0; i < len; i++){\n          var tempItem = feedData[i];\n\n          // Check to See if Item Already Exists in Scope Array\n          var itemExists = false;\n          for (var j = 0; j < existingLength; j++){\n            if (tempItem.id === tabArray[j].id){\n              itemExists = true;\n            }\n          }\n          // If Exists, Skip To Next Item\n          if (itemExists){\n            continue;\n          }\n          \n          tempItem.postAuthorName = feedData[i].embedAuthor.name;\n          tempItem.postAuthorAlias = feedData[i].embedAuthor.alias;\n          tempItem.postAuthorPhoto = feedData[i].embedAuthor.photo;\n          tempItem.tweetId = feedData[i].tweet.id;\n          \n          tempItem.postTimestamp = feedData[i].createdAt;\n          tempItem.providerName = feedData[i].embedProvider.name;\n          tempItem.html = feedData[i].embedText;\n          tempItem.retweetCount = feedData[i].tweet.metrics.retweetCount;\n          tempItem.likeCount = feedData[i].tweet.metrics.likeCount;\n          tempItem.replyCount = feedData[i].tweet.metrics.replyCount;\n\n          // Embed Object for Sharing\n          tempItem.embed = feedData[i].embed;\n          tempItem.embed.embedCreatedAt = feedData[i].embedCreatedAt;\n          // tempItem.embed.embedCreatedAtFull = feedData[i].embedCreatedAtFull;\n\n          if (tempItem.providerName === \"Twitter\"){\n            tempItem.providerLogo = \"img/twitterLogo@2x.png\";\n            tempItem.embed.provider.logo = \"img/twitterLogo@2x.png\";\n          } else {\n            tempItem.providerLogo = feedData[i].embedProvider.logo;\n            tempItem.embed.provider.logo = feedData[i].embedProvider.logo;\n          }\n\n          tempItem.embedType = feedData[i].embedType;\n          tempItem.embedUrl = feedData[i].embedUrl;\n          if (feedData[i].embedType === \"link\" && feedData[i].embedPlayable === true){\n            tempItem.embedHtml = feedData[i].embedHtml;\n            tempItem.embedPlayable = true;\n          }\n          if (feedData[i].embedType === \"media\" || feedData[i].embedType === \"link\"){\n            tempItem.mediaType = feedData[i].embedMedia.mediaType;\n            tempItem.mediaUrl = feedData[i].embedMedia.mediaUrl;\n            tempItem.mediaThumbUrl = feedData[i].embedMedia.mediaThumbUrl;\n            tempItem.mediaAspectRatio = feedData[i].embedMedia.mediaAspectRatio;\n            tempItem.mediaAspectFeed = feedData[i].embedMedia.mediaAspectFeed;\n            tempItem.mediaAspectFull = feedData[i].embedMedia.mediaAspectFull;\n            tempItem.mediaOrientation = feedData[i].embedMedia.mediaOrientation;\n          }\n\n          _this.videoArray.push(tempItem);\n          if (NETWORK_DEBUG && i === len - 1){\n            _this.loadingVideo = false;\n            console.log(\"Video Array: \", _this.videoArray);\n          }\n        }\n      }\n    };\n\n    function trustSrc(src) {\n      return $sce.trustAsResourceUrl(src);\n    };\n\n    function updateTimestamps(){\n      for (var i = 0; i < _this.videoArray.length; i++){\n        _this.videoArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.videoArray[i].createdAtFull);\n      }\n    };\n\n    \n    // Limit Rate that Function Can be Called\n    function debounce(func, wait, immediate) {\n      var timeout;\n      return function() {\n        var context = this, args = arguments;\n        var later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    var watchContentScroll = debounce(function() {\n      var currentScroll = $(document).height() - clientHeight - 50;\n      if ($(document).scrollTop() > currentScroll && currentScroll > 500) {\n        // We are Loading More Content -->\n        // Base offset on Current Length of Scope Array\n        _this.loadContent(_this.videoArray.length);\n      }\n    }, 100);\n\n    $(document).on('scroll', watchContentScroll);\n\n    this.retweetPost = function(id) {\n      $http({\n        method: 'GET',\n        url: 'https://twitter.com/intent/retweet?tweet_id=' + id,\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    };\n\n    this.shareTweetToChat = function (embed) {\n      _this.embedShareContent = embed;\n      _this.showShareDialog = true;\n      console.log(\"Embed Object: \", embed);\n      if (URIHelper.isPeelUser()){\n        var fullClient = document.documentElement.clientHeight - 54;\n        console.log(\"fullClient Height: \", fullClient);\n        setTimeout(function(){\n          $('#sharePreviewContainer').css({top: '54px'}).height(fullClient);\n        },25);\n      }\n    };\n\n    this.submitSharedPost = function (commentData,embedData) {\n      var topicID = $stateParams.topicID;\n      console.log(\"topicID From Parent: \", topicID);\n      networkService.send(CommentService.postCommentRequestForShare(topicID,commentData,embedData));\n      _this.showShareDialog = false;\n      $state.go('topic.chat', $stateParams);\n    };\n\n    console.log(\"WAY BEFOREEEE\");\n    if (!window.FB){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n    }\n\n    window.fbAsyncInit = function() {\n      console.log(\"BEFOREEEE\");\n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n      console.log(\"AFTERRRRR\");\n    };\n\n    this.shareToFacebook = function (id,embedUrl) {\n      FB.ui({\n        method: 'share',\n        href: embedUrl\n      }, function (response){\n        // Keep Track of User Shares to Facebook?\n        console.log(\"FB Response Post-Share: \", response);\n      });\n    };\n\n    this.exitShare = function () {\n      _this.showShareDialog = false;\n    };\n\n    this.highlightPost = function(){\n      $('#postShareContent').css('color','rgb(22,189,231)');\n    };\n\n    this.unhighlightPost = function(){\n      $('#postShareContent').css('color','rgb(211,214,215)');\n    };\n    \n    this.doneLoading = function() {\n      _this.loading = false;\n    };\n\n    this.secureLink = function(url, id) {\n      if (UserInfoService.isGuestUser()){\n        return \"\";\n      } else {\n        return url + id;\n      }\n    };\n\n}]);\n\n","angular.module(\"SocialModule\", [\"NetworkModule\",\"ChannelModule\",\"TopicModule\"])\n.controller(\"SocialController\", [\"$state\",\"$stateParams\",\"$sce\",\"$window\",\"$http\",\"SocialService\",\"networkService\",\"ChannelService\",\"TopicService\",\"DateUtilityService\",\"CommentService\",\"URIHelper\",\"UserInfoService\",\n  function ($state,$stateParams,$sce,$window,$http,SocialService,networkService,ChannelService,TopicService,DateUtilityService,CommentService,URIHelper,UserInfoService){\n\n    var _this = this;\n    if (!this.socialArray){\n      this.loading = true;\n    }\n    if (!!this.socialArray){\n      updateTimestamps();\n    }\n    SocialService.resetSocialOffset();\n    SocialService.registerObserverCallback(function(){updateFeed();});\n\n\n    this.loadContent = function(offset) {\n      var channelID = $stateParams.channel || ChannelService.getChannel()||TopicService.getChannelId();\n      console.log(\"LOADING SOCIAL: \", channelID, TopicService.getChannelId());\n      networkService.send(SocialService.getSocialDataRequest(channelID,offset));\n    };\n    // setTimeout(function(){_this.loadContent();},1000);\n    if (!TopicService.getChannelId()){\n      TopicService.registerObserverCallback(_this.loadContent);\n    } else {\n      _this.loadContent();\n    }\n\n    function updateFeed() {\n\n      // Get Appropriate Content\n      var feedData,\n          existingLength,\n          tabArray;\n      feedData = SocialService.socialArray();\n      _this.socialArray = _this.socialArray || [];\n      existingLength = _this.socialArray.length;\n      tabArray = _this.socialArray;\n\n      var len = feedData.length;\n      if (!!feedData && len > 0){\n        // console.log(\"Feed Data: \", feedData, \" Type: \", tab);\n\n        for (var i = 0; i < len; i++){\n          var tempItem = feedData[i];\n\n          // Check to See if Item Already Exists in Scope Array\n          var itemExists = false;\n          for (var j = 0; j < existingLength; j++){\n            if (tempItem.id === tabArray[j].id){\n              itemExists = true;\n            }\n          }\n          // If Exists, Skip To Next Item\n          if (itemExists){\n            continue;\n          }\n          \n          tempItem.postAuthorName = feedData[i].embedAuthor.name;\n          tempItem.postAuthorAlias = feedData[i].embedAuthor.alias;\n          tempItem.postAuthorPhoto = feedData[i].embedAuthor.photo;\n          tempItem.tweetId = feedData[i].tweet.id;\n          \n          tempItem.postTimestamp = feedData[i].createdAt;\n          tempItem.providerName = feedData[i].embedProvider.name;\n          tempItem.html = feedData[i].embedText;\n          tempItem.retweetCount = feedData[i].tweet.metrics.retweetCount;\n          tempItem.likeCount = feedData[i].tweet.metrics.likeCount;\n          tempItem.replyCount = feedData[i].tweet.metrics.replyCount;\n\n          // Embed Object for Sharing\n          tempItem.embed = feedData[i].embed;\n          tempItem.embed.embedCreatedAt = feedData[i].embedCreatedAt;\n          // tempItem.embed.embedCreatedAtFull = feedData[i].embedCreatedAtFull;\n\n          if (tempItem.providerName === \"Twitter\"){\n            tempItem.providerLogo = \"img/twitterLogo@2x.png\";\n            tempItem.embed.provider.logo = \"img/twitterLogo@2x.png\";\n          } else {\n            tempItem.providerLogo = feedData[i].embedProvider.logo;\n            tempItem.embed.provider.logo = feedData[i].embedProvider.logo;\n          }\n\n          tempItem.embedType = feedData[i].embedType;\n          tempItem.embedUrl = feedData[i].embedUrl;\n          if (feedData[i].embedType === \"link\" && feedData[i].embedPlayable === true){\n            tempItem.embedHtml = feedData[i].embedHtml;\n            tempItem.embedPlayable = true;\n          }\n          if (feedData[i].embedType === \"media\" || feedData[i].embedType === \"link\"){\n            tempItem.mediaType = feedData[i].embedMedia.mediaType;\n            tempItem.mediaUrl = feedData[i].embedMedia.mediaUrl;\n            tempItem.mediaThumbUrl = feedData[i].embedMedia.mediaThumbUrl;\n            tempItem.mediaAspectRatio = feedData[i].embedMedia.mediaAspectRatio;\n            tempItem.mediaAspectFeed = feedData[i].embedMedia.mediaAspectFeed;\n            tempItem.mediaAspectFull = feedData[i].embedMedia.mediaAspectFull;\n            tempItem.mediaOrientation = feedData[i].embedMedia.mediaOrientation;\n          }\n\n          _this.socialArray.push(tempItem);\n          if (NETWORK_DEBUG && i === len - 1){\n            _this.loadingSocial = false;\n            console.log(\"Social Array: \", _this.socialArray);\n          }\n        }\n      }\n    };\n\n    function trustSrc(src) {\n      return $sce.trustAsResourceUrl(src);\n    };\n\n    function updateTimestamps(){\n      for (var i = 0; i < _this.socialArray.length; i++){\n        _this.socialArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.socialArray[i].createdAtFull);\n      }\n    };\n\n    \n    // Limit Rate that Function Can be Called\n    function debounce(func, wait, immediate) {\n      var timeout;\n      return function() {\n        var context = this, args = arguments;\n        var later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    var watchContentScroll = debounce(function() {\n      var currentScroll = $(document).height() - clientHeight - 50;\n      if ($(document).scrollTop() > currentScroll && currentScroll > 500) {\n        // We are Loading More Content -->\n        // Base offset on Current Length of Scope Array\n        _this.loadContent(_this.socialArray.length);\n      }\n    }, 100);\n\n    $(document).on('scroll', watchContentScroll);\n\n    this.retweetPost = function(id) {\n      $http({\n        method: 'GET',\n        url: 'https://twitter.com/intent/retweet?tweet_id=' + id,\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    };\n\n    this.shareTweetToChat = function (embed) {\n      _this.embedShareContent = embed;\n      _this.showShareDialog = true;\n      console.log(\"Embed Object: \", embed);\n      if (URIHelper.isPeelUser()){\n        var fullClient = document.documentElement.clientHeight - 54;\n        console.log(\"fullClient Height: \", fullClient);\n        setTimeout(function(){\n          $('#sharePreviewContainer').css({top: '54px'}).height(fullClient);\n        },25);\n      }\n    };\n\n    this.submitSharedPost = function (commentData,embedData) {\n      var topicID = $stateParams.topicID;\n      console.log(\"topicID From Parent: \", topicID);\n      networkService.send(CommentService.postCommentRequestForShare(topicID,commentData,embedData));\n      _this.showShareDialog = false;\n      $state.go('topic.chat', $stateParams);\n    };\n\n    console.log(\"WAY BEFOREEEE\");\n    if (!window.FB){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n    }\n\n    window.fbAsyncInit = function() {\n      console.log(\"BEFOREEEE\");\n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n      console.log(\"AFTERRRRR\");\n    };\n\n    this.shareToFacebook = function (id,embedUrl) {\n      FB.ui({\n        method: 'share',\n        href: embedUrl\n      }, function (response){\n        // Keep Track of User Shares to Facebook?\n        console.log(\"FB Response Post-Share: \", response);\n      });\n    };\n\n    this.exitShare = function () {\n      _this.showShareDialog = false;\n    };\n\n    this.highlightPost = function(){\n      $('#postShareContent').css('color','rgb(22,189,231)');\n    };\n\n    this.unhighlightPost = function(){\n      $('#postShareContent').css('color','rgb(211,214,215)');\n    };\n    \n    this.doneLoading = function() {\n      _this.loading = false;\n    };\n\n    this.secureLink = function(url, id) {\n      if (UserInfoService.isGuestUser()){\n        return \"\";\n      } else {\n        return url + id;\n      }\n    };\n\n}]);\n\n","angular.module(\"UserInput\", [\"NetworkModule\",\"TopicModule\",\"MediaModule\",\"angularFileUpload\"])\n  .controller(\"UserInputController\", [\"$scope\",\"$window\",\"$timeout\",\"$stateParams\",\"networkService\",\"TopicService\",\"CommentService\",\"ReplyService\",\"UserInfoService\",\"FileUploader\",\"MUService\",\n    function ($scope,$window,$timeout,$stateParams,networkService,TopicService,CommentService,ReplyService,UserInfoService,FileUploader,MUService){\n\n      // ATTACH MEDIA\n      var MUS_SERVER_URI;\n      if (DEV_BUILD === true){\n        MUS_SERVER_URI = 'https://dev.fankave.com:8080';\n      } else {\n        MUS_SERVER_URI = 'https://mus.fankave.com';\n      }\n      var UPLOAD_URL = '/v1.0/media/upload';\n\n      var uploader = this.uploader = new FileUploader({\n        url: MUS_SERVER_URI + UPLOAD_URL,\n        autoUpload: false,\n        removeAfterUpload: true,\n        queueLimit: 1\n      });\n\n      var _this = this;\n      this.isHTML5 = this.uploader.isHTML5;\n      this.mediaType;\n      this.uploader.filters.push({\n        name: 'customFilter',\n        fn: function(item /*{File|FileLikeObject}*/, options) {\n          var itemType = item.type;\n          if(itemType.indexOf(\"image\") != -1){\n            _this.mediaType = \"image\";\n            return this.queue.length < 1 && (item.size < 5242880);\n          }\n          else if(itemType.indexOf(\"video\") != -1){\n            _this.mediaType = \"video\";\n            return this.queue.length < 1 && (item.size < 268435456);\n          }\n          return this.queue.length < 10;\n        }\n      });\n\n      // MEDIA PREVIEW\n      var dontAdd;\n      function generateImagePreview(evt) {\n        var f = evt.target.files[0];\n        console.log('F:', f);\n\n        if (!f.type.match('image.*')) {\n          var previewSrc = \"img/videoPrevIcon@2x.png\";\n        }\n\n        var reader = new FileReader();\n        reader.onload = (function (theFile) {\n          return function (e) {\n            var span = document.createElement('span');\n            span.innerHTML = ['<img class=\"thumb\" src=\"',\n              previewSrc || e.target.result,\n              '\"/>'].join('');\n            if ($scope.mobileBrowser === true && !dontAdd){\n              document.getElementById('mobilePreview').insertBefore(span, null);\n            } else if (!dontAdd) {\n              document.getElementById('preview').insertBefore(span, null);\n            }\n            };\n          })(f);\n          reader.readAsDataURL(f);\n        };\n\n      document.getElementById('fileUpload').addEventListener('change',\n        generateImagePreview, false);\n\n      this.removeMedia = function(){\n        _this.uploader.clearQueue();\n        var e = $('#fileUpload');\n        e.wrap('<form>').closest('form').get(0).reset();\n        e.unwrap();\n        dontAdd = false;\n        _this.unhighlightPost();\n      };\n\n      // CALLBACKS\n      this.fileMaxExceeded = false;\n      this.uploader.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\n        dontAdd = true;\n        console.info('onWhenAddingFileFailed', item, filter, options);\n        if (!_this.isHTML5){\n          console.log(\"Browser Doesn't Support HTML5\");\n          _this.HTML5warning = true;\n        } else if (_this.uploader.queue.length < 1) {\n          _this.fileMaxExceeded = true;\n          _this.removeMedia();\n          $timeout(function(){_this.fileMaxExceeded = false;}, 5000);\n        }\n      };\n      this.uploader.onAfterAddingFile = function(fileItem) {\n        console.info('onAfterAddingFile', fileItem);\n        _this.highlightPost();\n      };\n      this.uploader.onAfterAddingAll = function(addedFileItems) {\n        console.info('onAfterAddingAll', addedFileItems);\n      };\n      this.uploader.onBeforeUploadItem = function(item) {\n        var user = UserInfoService.getUserCredentials();\n        item.headers = {  \n            'X-UserId': user.userId,\n            'X-SessionId': user.sessionId,\n            'X-AccessToken': user.accessToken};\n        item.formData =[{'type':item._file.type},{'size': item._file.size},{'file': item._file}];\n\n        console.info('onBeforeUploadItem', item);\n      };\n      this.uploader.onProgressItem = function(fileItem, progress) {\n        console.info('onProgressItem', fileItem, progress);\n      };\n      this.uploader.onProgressAll = function(progress) {\n        console.info('onProgressAll', progress);\n      };\n      this.uploader.onSuccessItem = function(fileItem, response, status, headers) {\n        console.info('onSuccessItem', fileItem, response, status, headers);\n        networkService.send(MUService.postMediaRequest(response));\n      };\n      this.uploader.onErrorItem = function(fileItem, response, status, headers) {\n        console.info('onErrorItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCancelItem = function(fileItem, response, status, headers) {\n        console.info('onCancelItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCompleteItem = function(fileItem, response, status, headers) {\n        console.info('onCompleteItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCompleteAll = function() {\n        console.info('onCompleteAll');\n        _this.uploader.clearQueue();\n        MUService.resetCommentParams();\n      };\n\n      console.info('uploader', this.uploader);\n\n      // POST COMMENT\n      this.postComment = function(commentText, isComment) {\n        // console.log(\"In New Controller: \", isComment);\n        if (_this.uploader.queue.length > 0 && isComment){\n          MUService.setCommentParams($scope.topicID, commentText, true);\n        } else if (_this.uploader.queue.length > 0 && !isComment){\n          MUService.setCommentParams($scope.topicId, commentText, false, $scope.postID);\n        } else if (!!commentText && commentText !== \"\" && isComment){\n          networkService.send(CommentService.postCommentRequest($scope.topicID, commentText));\n        } else if (!!commentText && commentText !== \"\" && !isComment){\n          networkService.send(ReplyService.getPostReplyRequest($scope.topicId, $scope.postID, commentText));\n        }\n        _this.uploader.uploadAll();\n        $scope.commentText = \"\";\n        $('input#topicCommentField').blur();\n        $('#postCommentButton').css('color','rgb(211,214,215)');\n        if (isComment){\n          $(document).scrollTop(0);\n        } else {\n          window.scrollTo(0, document.body.scrollHeight);\n        }\n      };\n\n      this.highlightPost = function(){\n        console.log(\"Styling post\");\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      };\n\n      this.unhighlightPost = function(){\n        console.log(\"Styling post\");\n        $('#postCommentButton').css('color','rgb(211,214,215)');\n      };\n\n      this.mobileHighlightPost = function(){\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      }\n\n      this.mobileUnhighlightPost = function(){\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      }\n\n      $('input#topicCommentField').bind('focusin focus', function(e){\n        e.preventDefault();\n      });\n\n      $('input').bind('focusin focus', function(e){\n        e.preventDefault();\n      });\n\n    }]);","angular.module('Forum')\n.factory(\"UserAgentService\", [\"ForumStorage\",\"UserInfoService\",\n  function (ForumStorage,UserInfoService){\n\n    var _userAgent;\n\n    function getMobileUserAgent() {\n      var agent;\n      if (isMobileUser()){\n        if (/iPad|iPhone|iPod/i.test(navigator.userAgent) && !window.MSStream){\n          agent = 'iOS';\n        } else if (/Android/i.test(navigator.userAgent)){\n          agent = 'android';\n        } else if (/IEMobile/i.test(navigator.userAgent)){\n          agent = 'windows';\n        }\n      }\n      _userAgent = agent;\n      return agent;\n    }\n\n    function isMobileUser() {\n      var check = false;\n      (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\n      return check;\n    }\n\n    function isUserAgent(type) {\n      if (_userAgent === type){\n        return true;\n      }\n      return false;\n    }\n\n    return {\n      getMobileUserAgent: getMobileUserAgent,\n      isMobileUser: isMobileUser,\n      isUserAgent: isUserAgent\n    };\n\n}]);","angular.module(\"NetworkModule\", ['ngWebSocket'])\n.factory(\"networkService\",[\"$websocket\",\"$state\",\"DataService\",\"UserInfoService\",\n\nfunction ($websocket,$state,DataService,UserInfoService)\n{\n  var ws;\n\n  disconnectSocket = function(){\n    console.log(\"Disconnect Callback triggered\");\n    if(ws !== undefined) {\n      ws.close();\n      ws = undefined;\n    }\n  }\n\n  reconnectSocket = function(){\n    console.log(\"Reconnect Callback triggered\");\n    $state.reload();\n  }\n  \n  // window.document.addEventListener(visEvent, function(){\n  //     visChange(reconnectSocket, disconnectSocket);\n  //   });\n\n  function initSocket() { \n    ws = $websocket(getWebsocketUri());\n    DataService.setWatchTopic(false);\n    //Websocket callbacks below\n    ws.onOpen(function() {\n      console.log(\"Websocket Connected\");\n    });\n\n    ws.onClose(function(evt) {\n      ws = undefined;\n      console.log(\"Websocket Closed :\"+evt.data);\n    });\n\n    ws.onMessage(function(evt) {\n      if(NETWORK_DEBUG) console.log(\"Websocket Message Recieved :  \" +evt.data);\n      var responseJson = JSON.parse(evt.data);\n      var type = responseJson.rid;\n      if(type !== undefined){\n        if(type === \"channel\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Channel\");\n          DataService.setChannel(responseJson);\n        }\n        if(type === \"topic\" || type === \"score\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Topic\");\n          DataService.setTopic(responseJson);\n        }else if(type === \"comment\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Comments\");\n          DataService.setComments(responseJson);\n        }\n        else if(type === \"reply\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Reply\");\n          DataService.setReplies(responseJson);\n        }\n        else if(type === \"social\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Social\");\n          DataService.setSocial(responseJson);\n        }\n        else if(type === \"video\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Video\");\n          DataService.setVideo(responseJson);\n        }\n      }\n    });\n\n    ws.onError(function(evt) {\n      \n      console.log(\"Websocket OnError: \"+JSON.stringify(evt) );\n    });\n\n    function getWebsocketUri(){\n      var user = UserInfoService.getUserCredentials();\n      var socketUri = WEBSOCKET_BASE_URI+\n      'userId='+user.userId+\n      '&sessionId='+user.sessionId+\n      '&accessToken='+user.accessToken+\n      '/';\n      if(NETWORK_DEBUG) console.log(\"socketUri: \" + socketUri);\n      return socketUri;\n    }\n  }\n  return{\n    isSocketConnected:function(){\n      if(NETWORK_DEBUG){\n        if(ws!= null)\n        console.log(\"ws status : \"+ ws.readyState);\n        else\n          console.log(\"ws is null\");\n      }\n      if(ws != undefined && ws.readyState == ws.OPEN){\n        return true;\n      }\n      return false;\n    },\n    send:function(message) { \n      if(ws == undefined){ \n        initSocket();\n      }\n      ws.send(JSON.stringify(message));\n    },\n    init:initSocket\n  }\n}]);","angular.module('NetworkModule')\n.factory('ForumStorage', function () {\n\tvar localStorageAvailable = false;\n\tif(typeof(Storage) != undefined) {\n\t\tconsole.log(\"Local storage available :\"+ typeof(Storage));\n\t\tlocalStorageAvailable = true;\n\t}  \n\telse {\n\t\tconsole.log(\"Sorry! No Storage support on this browser..\");\n\t}\n\t\n\tfunction setToLocalStorage(key, value){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\tlocalStorage.setItem(key,value);\n\t}\n\t\n\tfunction getFromLocalStorage(key){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\treturn localStorage.getItem(key);\n\t\treturn undefined;\n\t}\n\t\n\tfunction clearStorage(){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\tlocalStorage.clear();\n\t}\n\t\n\treturn{\n\t\tgetFromLocalStorage:getFromLocalStorage,\n\t\tsetToLocalStorage:setToLocalStorage,\n\t\tclearStorage:clearStorage\n\t}\n\t\n\t\n\n});","angular.module('NetworkModule')\n.factory('ForumDeviceInfo', [\"ForumStorage\",\n\tfunction (ForumStorage) {\n\t//TODO : TEMP function to generate uuid. change this in final version\n\tfunction _p8(s) {\n\t\tvar p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n\t\treturn s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n\t}\n\tfunction generateUUID() {\n\t\tconsole.log(\"GEnerating UUID\");\n\t\tvar uuid = _p8() + _p8(true) + _p8(true) + _p8();\n\t\tconsole.log(\" UUID :\"+ uuid);\n\t\treturn uuid;\n\t}\n\n\treturn{\n\t\tgetDeviceId:function(){\n\t\t\tvar id = ForumStorage.getFromLocalStorage(\"forumUUID\");\n\t\t\tif(id == undefined || id.length <15){\n\t\t\t\tid = generateUUID();\n\t\t\t\tForumStorage.setToLocalStorage(\"forumUUID\",id);\n\t\t\t}\n\t\t\tconsole.log(\"generated ID : \"+ id);\n\t\t\treturn id;\n\n\t\t}\n\t}\n}]);\n","angular.module('NetworkModule')\n.factory('URIHelper', [\"ForumStorage\",\"$stateParams\",\n\tfunction (ForumStorage,$stateParams) {\n\n\tvar peelUserName;\n\tvar peelUserId;\n\tvar peelShowId;\n\n\tvar ssUserName;\n\tvar ssUserId;\n\n\tvar _MI16;\n\n\tfunction getUrlVars() {\n\t\t// var vars = [], hash;\n\t\t// var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\n\t\t// for (var i = 0; i < hashes.length; i++) {\n\t\t// \thash = hashes[i].split('=');\n\t\t// \tvars.push(hash[0]);\n\t\t// \tvars[hash[0]] = hash[1];\n\t\t// }\n\t\treturn $stateParams;\n\t}\n\t\n\t\n\n\treturn {\n\t\tisPeelUser:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif(vars[\"peel\"]){\n\t\t\t\tpeelUserId = vars[\"userId\"];\n\t\t\t\tpeelUserName = vars[\"userName\"];\n\t\t\t\tpeelShowId = vars[\"showId\"];\n\t\t\t\t//If diff previous peel user, clear storage\n\t\t\t\tvar prevPeelUser = ForumStorage.getFromLocalStorage(\"forumUserType\");\n\t\t\t\t// if(prevPeelUser != undefined && prevPeelUser == \"peel\" && ForumStorage.setToLocalStorage(\"forumPeelUserId\") != peelUserId)\n\t\t\t\t\t// ForumStorage.clearStorage();\n\t\t\t\tForumStorage.setToLocalStorage(\"forumPeelUserId\",peelUserId);\n\t\t\t\tForumStorage.setToLocalStorage(\"forumPeelShowId\",peelShowId);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\treturn false;\n\t\t},\n\t\tisSmartStadiumUser:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif(vars[\"smartStadium\"]){\n\t\t\t\tssUserId = vars[\"userId\"];\n\t\t\t\tssUserName = vars[\"userName\"];\n\t\t\t\tForumStorage.setToLocalStorage(\"forumSmartStadiumUserId\",ssUserId);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tisTechMUser:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif (vars[\"MI16\"]){\n\t\t\t\t_MI16 = true;\n\t\t\t\tForumStorage.setToLocalStorage(\"techMIUser\",true);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (_MI16){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetPeelUserId:function(){\n\t\t\treturn peelUserId;\n\t\t},\n\t\tgetPeelUserName:function(){\n\t\t\treturn peelUserName;\n\t\t},\n\t\tgetPeelShowId:function(){\n\t\t\treturn peelShowId;\n\t\t},\n\t\tgetPeelParams:function(){\n\t\t\treturn window.location.search.substring(1);\n\t\t},\n\t\tgetSSUserId:function(){\n\t\t\treturn ssUserId;\n\t\t},\n\t\tgetSSUserName:function(){\n\t\t\treturn ssUserName;\n\t\t}\n\n\n\t};\n\n}]);","angular.module('ChannelModule')\n.factory('ChannelService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\",\n  function (DateUtilityService,Bant,FDSUtility) {\n\n\n  var _channelId;\n  var _liveTopicId;\n\n  var observerCallbacks = []; \n\n  function setTopicData(topicData) \n  {\n    if(topicData.data != undefined){\n      _liveTopicId = topicData.data.id;\n      console.log(\"_liveTopicId : \"+ _liveTopicId);\n      notifyObservers();\n    }\n  }\n\n  function getLiveGameTopic(channelId){\n    var reqChannelId = channelId || _channelId;\n    var uri = \"/v1.0/channel/topic/show/\" + reqChannelId + \"?type=livegame\";\n    if(reqChannelId == \"404\" || reqChannelId == \"5066\")\n    uri = \"/v1.0/channel/topic/show/\" + reqChannelId;\n\n    var topicParams = {\"rid\": \"channel\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\":uri };\n    console.log(\"Ch.getLiveGameTopic: \", topicParams);\n    return topicParams;\n  }\n\n  //call this when you know 'data' has been changed\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n  \n  function registerObserverCallback(callback){\n    //register an observer\n    // console.log(\"topic callback registered\");\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  }\n\n  return {\n    setTopicData:setTopicData,\n    getLiveTopicId:function(){ return _liveTopicId;},\n    getLiveGameTopic:getLiveGameTopic,\n    setChannel: function(channelId){\n      _channelId = channelId;\n    },\n    getChannel: function(){\n      return _channelId;\n    },\n    registerObserverCallback:registerObserverCallback\n\n\n  };\n\n}]);","angular.module('TopicModule')\n.directive('scorecard', function() {\n  return {\n    restrict: 'E',\n    templateUrl: 'partials/scorecard.html'\n  }\n});","angular.module('TopicModule')\n.directive('secureClick', ['$state','$stateParams','UserInfoService',\n  function ($state, $stateParams, UserInfoService) {\n    return {\n      restrict: 'A',\n      link: function($scope, $elem, $attrs){\n        var element = $elem[0];\n        $(element).on('click', function(e){\n          e.preventDefault();\n          if (UserInfoService.isGuestUser()){\n            $state.go('login', $stateParams);\n          } else {\n            $scope.$eval($attrs.secureClick);\n          }\n        });\n      }\n    }\n}]);\n\nangular.module('TopicModule')\n.directive('secureFocus', ['$state','$stateParams','UserInfoService',\n  function ($state, $stateParams, UserInfoService) {\n    return {\n      restrict: 'A',\n      link: function($scope, $elem, $attrs){\n        var element = $elem[0];\n        $(element).on('focus', function(e){\n          e.preventDefault();\n          if (UserInfoService.isGuestUser()){\n            $state.go('login', $stateParams);\n          } else {\n            $scope.$eval($attrs.secureFocus);\n          }\n        });\n      }\n    }\n}]);\n\nangular.module('TopicModule')\n.directive('repeatFinishedNotify', function () {\n  return function ($scope, $element, $attrs) {\n    if ($scope.$last){\n      $scope.$eval($attrs.repeatFinishedNotify);\n    }\n  };\n});\n\nangular.module('TopicModule')\n.directive('embedSharedContent', ['UserAgentService',\n  function (UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=embedPost',\n      trustSource: '&'      \n    },\n    link: function(scope,elem,attr){\n      scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n    },\n    templateUrl: 'partials/shared.html'\n  };\n}]);\n\nangular.module('TopicModule')\n.directive('mediaPlayer', ['$sce', 'UserAgentService',\n  function ($sce, UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=',\n      vidIndex: '@'\n    },\n    link: function(scope,elem,attr) {\n\n      scope.isMobileUser = UserAgentService.isMobileUser();\n\n      scope.trustSrc = function(src){\n        return $sce.trustAsResourceUrl(src);\n      }\n\n      var video = elem[0].firstElementChild.childNodes[1];\n      var loadingSpinner = elem[0].firstElementChild.childNodes[7];\n      \n      // Video Loading Event Listeners\n      $(video).on('waiting', function() {\n        if (NETWORK_DEBUG)\n          console.log(\"Video Waiting\");\n        if (scope.isMobileUser){\n          loadingSpinner.className = 'media-loading-fullscreen';\n          loadingSpinner.style.zIndex = \"2147483647\";\n        } else {\n          loadingSpinner.className = 'media-loading';\n        }\n      });\n      $(video).on('stalled', function() {\n        if (NETWORK_DEBUG)\n          console.log(\"Video Stalled\");\n        if (scope.isMobileUser){\n          loadingSpinner.className = 'media-loading-fullscreen';\n          loadingSpinner.style.zIndex = \"2147483647\";\n        } else {\n          loadingSpinner.className = 'media-loading';\n        }\n      });\n      var canPlay;\n      $(video).on('canplay', function() {\n        canPlay = true;\n      });\n      $(video).on('playing', function() {\n        if (NETWORK_DEBUG)\n          console.log(\"Video Playing\");\n        loadingSpinner.className = 'media-loading-default';\n      });\n\n      scope.togglePlayPause = function(e) {\n        var thesePlayerNodes = elem[0].firstElementChild.childNodes;\n        var thisVideo = thesePlayerNodes[1];\n        var thisThumbnail = thesePlayerNodes[3];\n        var thisPlayBtn = thesePlayerNodes[5];\n        var thisLoading = thesePlayerNodes[7];\n\n        if (thisVideo.paused || thisVideo.ended){\n          thisPlayBtn.className = 'pause';\n          thisThumbnail.className = 'pause';\n          thisVideo.play();\n          if (scope.isMobileUser){\n            if (thisVideo.requestFullscreen){\n              thisVideo.requestFullscreen();\n            } else if (thisVideo.webkitRequestFullscreen){\n              thisVideo.webkitRequestFullscreen();\n            } else if (thisVideo.mozRequestFullScreen){\n              thisVideo.mozRequestFullScreen();\n            } else if (thisVideo.msRequestFullscreen){\n              thisVideo.msRequestFullscreen();\n            }\n          }\n        }\n        else {\n          thisLoading.className = 'media-loading-default';\n          thisPlayBtn.className = 'media-controls';\n          thisThumbnail.className = 'media-thumbnail';\n          thisVideo.pause();\n        }\n      }\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (NETWORK_DEBUG){\n          // console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-portrait-9x16\");\n          } else {\n            classStrings.push(\"video-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"video-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-landscape-16x9\");\n          } else {\n            classStrings.push(\"video-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, video) {\n        var thesePlayerNodes = elem[0].firstElementChild.childNodes;\n        var thisVideo = thesePlayerNodes[1];\n        var thisWidth = $(thisVideo).width();\n        if (NETWORK_DEBUG){\n          // console.log(\"Elem in setD: \", elem);\n          // console.log(\"PlayerNodes in setD: \", thesePlayerNodes);\n          // console.log(\"Video in setD: \", thisVideo);\n          // console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var styleObj = {};\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        styleObj['height'] = height;\n        if (!!video){\n          styleObj['background-image'] = 'url(' + video.mediaThumbUrl + ')';\n          styleObj['background-size'] = 'cover';\n          styleObj['background-position-y'] = setYOffset(video);\n          styleObj['background-position-x'] = setXOffset(video);\n        }\n        if (NETWORK_DEBUG){\n          // console.log(\"Set Dimensions Object: \", styleObj);\n        }\n        return styleObj;\n      }\n\n      function setYOffset(video){\n        var offset;\n        if (!!video.mediaAspectFeed.y){\n          offset = '-' + video.mediaAspectFeed.y + 'px';\n        }\n        else if (!!video.mediaAspectFull.y){\n          offset = '-' + video.mediaAspectFull.y + 'px';\n        }\n        return offset;\n      }\n\n      function setXOffset(video){\n        var offset;\n        if (!!video.mediaAspectFeed.x){\n          offset = '-' + video.mediaAspectFeed.x + 'px';\n        }\n        else if (!!video.mediaAspectFull.x){\n          offset = '-' + video.mediaAspectFull.x + 'px';\n        }\n        return offset;\n      }\n\n    },\n    templateUrl: 'partials/mediaPlayer.html'\n  };\n}]);\n\nangular.module('TopicModule')\n.directive('ngElementReady', [function() {\n  return {\n    priority: -1000,\n    restrict: \"A\",\n    link: function($scope, $element, $attributes) {\n        $scope.$eval($attributes.ngElementReady); // execute expression from attribute\n    }\n  };\n}]);\n\n","angular.module('TopicModule')\n.directive('embedPlayer', ['$sce', 'UserAgentService',\n  function ($sce, UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '='\n    },\n    link: function(scope,elem,attr) {\n\n      scope.isMobileUser = UserAgentService.isMobileUser();\n\n      scope.trustSrcHtml = function(src){\n        return $sce.trustAsHtml(src);\n      }\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (NETWORK_DEBUG){\n          // console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-portrait-9x16\");\n          } else {\n            classStrings.push(\"video-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"video-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-landscape-16x9\");\n          } else {\n            classStrings.push(\"video-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, video) {\n        var thesePlayerNodes = elem[0].childNodes;\n        var thisVideo = thesePlayerNodes[0];\n        var thisWidth = $(thisVideo).width();\n        if (NETWORK_DEBUG){\n          // console.log(\"PlayerNodes in setD: \", thesePlayerNodes);\n          // console.log(\"Video in setD: \", thisVideo);\n          // console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        var iframePlayer = thisVideo.childNodes[0];\n        $(iframePlayer).css('height',height);\n        if (NETWORK_DEBUG){\n          // console.log(\"Setting Height On: \", iframePlayer, height);\n        }\n      }\n\n    },\n    templateUrl: 'partials/embedPlayer.html'\n  };\n}]);","angular.module('TopicModule')\n.directive('imageControl', ['$sce',\n  function ($sce) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '='\n    },\n    link: function(scope,elem,attr) {\n\n      scope.imageClick = function(imageURL) {\n        event.cancelBubble = true;\n        if(event.stopPropagation) event.stopPropagation();\n\n        $.magnificPopup.open({\n          items: {\n            type:'image',\n            src: imageURL,\n          },\n          type: 'inline',\n          callbacks: {\n            open: function(){\n              $('body').bind('touchmove', function(e){e.preventDefault()});\n            },\n            close: function(){\n              $('body').unbind('touchmove');\n            }\n          }\n        });\n      };\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (NETWORK_DEBUG){\n          // console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"image-portrait-9x16\");\n          } else {\n            classStrings.push(\"image-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"image-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"image-landscape-16x9\");\n          } else {\n            classStrings.push(\"image-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, image) {\n        var thisImage = elem[0].childNodes[0];\n        var thisWidth = $(thisImage).width();\n        if (NETWORK_DEBUG){\n          // console.log(\"Image in setD: \", thisImage);\n          // console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var styleObj = {};\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        styleObj['height'] = height;\n        if (!!image){\n          styleObj['background-image'] = 'url(' + image.mediaUrl + ')';\n          styleObj['background-size'] = 'cover';\n          styleObj['background-position-y'] = setOffsets(image, 'y', height) || '';\n          styleObj['background-position-x'] = setOffsets(image, 'x', thisWidth) || '';\n        }\n\n        if (NETWORK_DEBUG){\n          // console.log(\"Set Dimensions Object: \", styleObj);\n        }\n        return styleObj;\n      }\n\n      function setOffsets(image, direction, ref){\n        var offset;\n        var offsetScale; \n        if (direction === 'y'){\n          if (!!image.mediaAspectFeed.y){\n            offsetScale = ref / image.mediaAspectFeed.h;\n            var scaledY = image.mediaAspectFeed.y * offsetScale;\n            offset = '-' + scaledY + 'px';\n          }\n        }\n        if (direction === 'x'){\n          if (!!image.mediaAspectFeed.x){\n            offsetScale = ref / image.mediaAspectFeed.w;\n            var scaledX = image.mediaAspectFeed.x * offsetScale;\n            offset = '-' + scaledX + 'px';\n          }\n        }\n        return offset;\n      }\n\n    },\n    templateUrl: 'partials/imageControl.html'\n  };\n}]);","angular.module('NetworkModule')\n.service('DataService', [\"TopicService\",\"CommentService\",\"ReplyService\",\"ChannelService\",\"SocialService\",\"VideoService\",\n  function (TopicService, CommentService, ReplyService, ChannelService, SocialService, VideoService) {\n  \n  var DATA_TYPE_TOPIC = \"topic\";\n  var DATA_TYPE_COMMENT = \"comment\";\n  var DATA_TYPE_REPLY = \"reply\";\n  var DATA_TYPE_SCORE = \"score\";\n  var DATA_BANT_ID_LENGTH = 16;\n\n  function delegateSetComments(commentsData) \n  { \n    if(commentsData.error){\n      console.log(\"Comments Error message from network: \", commentsData.error);\n    }\n    else if(commentsData.push){\n      if(commentsData.method == \"UPSERT\")\n        if(CommentService.updateComment(commentsData) == 0)\n          TopicService.updateCommentCount(1);\n      else if(commentsData.method == \"REMOVE\"){\n        //TODO: Design requirement for how to show a deleted comment\n//        if(CommentService.removeComment(commentsData) == 0)\n//          TopicService.updateCommentCount(-1);  \n      }\n    }\n    else {\n      if(commentsData.method == \"POST\"){\n        var uri = commentsData.uri;\n        if(uri != undefined){\n          var commentId = uri.slice(-DATA_BANT_ID_LENGTH);\n//          console.log(\"Comment ID: \"+ commentId);\n//          console.log(\"uri: \"+ uri);\n          if(uri == \"/v1.0/comment/create\"){\n            CommentService.appendToComments(commentsData);\n            TopicService.updateCommentCount(1);\n          }\n          else{\n            if(CommentService.updateCommentLocalData(uri, commentId) == 0)\n              TopicService.updateCommentCount(-1);\n          }\n        }\n      }\n      else\n        CommentService.setComments(commentsData);\n\n    }\n  }\n\n  function delegateSetTopic(topicData)\n  {\n    if(topicData.error){\n      console.log(\"Topic Error message from network: \", topicData.error);\n    }\n    else if(topicData.push){\n      if(topicData.method == \"UPSERT\")\n        TopicService.updateTopic(topicData.data);\n      else if(topicData.method == \"REMOVE\")\n        TopicService.removeTopic(topicData.data);\n    }\n    else\n      TopicService.setTopic(topicData);\n  }\n\n  function delegateSetReplies(replyData)\n  {\n    if(replyData.error){\n      console.log(\"Topic Error message from network: \", replyData.error);\n    }\n    else if(replyData.push){\n      console.log(\"reply pushed \");\n      if(replyData.method == \"UPSERT\")\n        if(ReplyService.updateReply(replyData) === 0){\n          if(replyData.data != undefined)\n          CommentService.updateReplyCountById(replyData.data.commentId,1);\n        }\n      else if(replyData.method == \"REMOVE\"){\n        //TODO: no action required\n        //ReplyService.removeReply(replyData);\n      }\n    }\n    else {\n      if(replyData.method == \"POST\"){\n        var uri = replyData.uri;\n        if(uri != undefined){\n          var id = uri.slice(-DATA_BANT_ID_LENGTH);\n//          console.log(\"Comment ID: \"+ id);\n//          console.log(\"uri: \"+ uri);\n          if(uri == \"/v1.0/reply/create\"){\n            ReplyService.appendToReplies(replyData);\n            if(replyData.data != undefined)\n              CommentService.updateReplyCountById(replyData.data.commentId, 1);\n          }\n          else{\n            var commentId =  ReplyService.getCommentIdByReply(id);\n            if(ReplyService.updateReplyLocalData(uri, id) == 0)\n              CommentService.updateReplyCountById(commentId, -1);\n          }\n        }\n      }\n      else\n        ReplyService.setReplies(replyData);\n    }\n      \n  }\n  \n  function delegateSetChannel(data) {\n    if(data.error){\n      console.log(\"Topic Error message from network: \", data.error);\n    }\n    else {\n      console.log(\"delegateSetChannel: \", data);\n      ChannelService.setTopicData(data);\n    }\n  }\n  \n  function delegateSetSocial(data) {\n    if(data.error){\n      console.log(\"Social Error message from network: \", data.error);\n    }\n    else {\n      console.log(\"SOCIAL GET\");\n      SocialService.setSocialData(data);\n    }\n  }\n\n  function delegateSetVideo(data) {\n    if(data.error){\n      console.log(\"Video Error message from network: \", data.error);\n    }\n    else {\n      console.log(\"VIDEO GET\");\n      VideoService.setVideoData(data);\n    }\n  }\n\n  return {\n    setVideo:delegateSetVideo,\n    setSocial:delegateSetSocial,\n    setChannel:delegateSetChannel,\n    setTopic:delegateSetTopic,\n    setComments:delegateSetComments,\n    setReplies:delegateSetReplies,\n    setWatchTopic:function(watched){\n      TopicService.setWatchTopic(watched);\n    }\n  };\n\n}]);","angular.module('TopicModule')\n.factory('TopicService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\",\n  function (DateUtilityService,Bant,FDSUtility) {\n\n  var TOPIC_BASE_URI = \"/v1.0/topic/show/\";\n  var LIKE_TOPIC_URI = \"/v1.0/topic/like/\";\n  var UNLIKE_TOPIC_URI = \"/v1.0/topic/unlike/\";\n  var WATCH_TOPIC_URI = \"/v1.0/topic/watch/\";\n  \n  var _channelId;\n  var _userType;\n  \n  var _isTopicWatched = false;\n  var _topic;\n  var _topicType;\n  var _id;\n  var _title;\n  var _game;\n  var _status;\n  var _score;\n  var _gameStats;\n  var _links;\n  var _scheduledAt;\n  var observerCallbacks = []; \n  var directComment; //bool flag to indicate whether user tapped on a comment's \"comment\" icon\n\n  function setTopicData(topicData) \n  {\n    if(topicData.data != undefined){\n      if(topicData.data.content != undefined ){\n        _title = topicData.data.content.title;\n      }\n\n\n      _topicType = topicData.data.topicType;\n      console.log(\"TOPIC TYPE :\"+_topicType );\n      _id = topicData.data.id;\n      if(_topicType == \"livegame\"){\n        _game = topicData.data.game;\n        if(_game != undefined){\n          _scheduledAt = DateUtilityService.getGameScheduledTime(_game.scheduledAt);\n          _score = _game.score;\n  //        Future game: live == false AND final == false.\n  //        Live game: live == true.\n  //        Past game: final == true.\n          if(_score.live == undefined && _score.final == undefined)\n            _status = \"future\";\n          else if(_score.live == true)\n            _status = \"live\";\n          else if(_score.final == true)\n            _status = \"past\";\n          // console.log(\"GAME Status  :\"+ _status );\n  \n          if(_status == \"live\"){\n            console.log(\"_gameStats\" + _score.status);\n            _gameStats = _score.status;\n          }\n        }\n      }\n\n      _topic = Bant.bant(topicData.data);\n      notifyObservers();\n    }\n    else if(topicData.method == \"POST\"){\n\n      //Handle operations dependent on POST\n      if(topicData.uri == WATCH_TOPIC_URI+_id){\n        if(NETWORK_DEBUG)\n          console.log(\"Topic watch success\");\n        _isTopicWatched = true;\n      }\n      else if(topicData.uri == LIKE_TOPIC_URI+_id)\n      {\n        if(NETWORK_DEBUG)\n          console.log(\"Topic liked success\");\n        _topic = Bant.updateBantLiked(_topic, true);\n        notifyObservers();\n      }\n      else if(topicData.uri == UNLIKE_TOPIC_URI+_id){\n        if(NETWORK_DEBUG)\n          console.log(\"Topic unliked success\");\n        _topic = Bant.updateBantLiked(_topic, false);\n        notifyObservers();\n      }\n    }\n  }\n\n  function updateTopicData(scoreData){\n    console.log(\"Topic Service scoreData :\" + scoreData)\n    setScoreData(scoreData);\n  }\n\n  function setScoreData(scoreData) \n  {\n    _score = scoreData;\n    //console.log(\"TopicService  insideScore\"+_score );\n    if(_score != undefined){\n      if(_score.live == true){\n        _status = \"live\";\n      }\n      _gameStats = _score.status;\n      console.log(\"Game Points :\" + _score.points[0] + \" : : \"+_score.points[1] );\n      console.log(\"Game Period :\" + _gameStats[0]);\n      console.log(\"Game Period :\" + _gameStats[1]);\n      notifyObservers();\n    }\n  }\n  \n  function updateCommentCount(value){\n    console.log(\"Update comment count: \" + _topic.metrics.comments + \"     Value : \"+ value);\n    if(_topic!= undefined && _topic.metrics != undefined){\n      if(value == 1)\n      _topic.metrics.comments == undefined ? _topic.metrics.comments =1: _topic.metrics.comments = _topic.metrics.comments+1;\n      else\n        _topic.metrics.comments == undefined ? _topic.metrics.comments =0: _topic.metrics.comments = _topic.metrics.comments-1; \n    }\n    notifyObservers();\n  }\n\n  function getTopicRequest(topicId){\n    var uri = TOPIC_BASE_URI+topicId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"GET\",\n        \"uri\": encodeURI(uri)};\n  }\n  function getFollowChannelRequest(){\n    \n    var channelId = 0;\n    if(_topic!= undefined && _topic.owner!= undefined)\n      channelId = _topic.owner.id;\n      _channelId = channelId;\n    var uri = \"/v1.0/channel/follow/\" + channelId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(uri)};\n  }\n  \n  function watchTopicRequest(topicId){\n    var uri = WATCH_TOPIC_URI+topicId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(uri)};\n  }\n\n  function likeTopicRequest(){\n    console.log(\"Like topic request invoked\"+_id);\n    return  varLikeParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(LIKE_TOPIC_URI + _id)};\n\n\n  }\n\n  function unlikeTopicRequest(){\n    return  varLikeParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(UNLIKE_TOPIC_URI + _id)};\n\n\n  }\n\n  //call this when you know 'data' has been changed\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n  \n  function registerObserverCallback(callback){\n    //register an observer\n    // console.log(\"topic callback registered\");\n    var callbackLength  = observerCallbacks.length;\n    // while(callbackLength > 0){\n    //   callbackLength = observerCallbacks.length;\n    //   observerCallbacks.pop();\n    // }\n\n    for (var i = 0; i < callbackLength; i++){\n      if (observerCallbacks[i] === callback){\n        // observerCallbacks.splice(i,1);\n        return;\n      }\n    }\n\n    observerCallbacks.push(callback);\n  }\n\n  return {\n    getTopic: function(){ \n      return _topic ;},\n    getTopicId: function(){ \n      return _id ;},\n    getTopicType: function(){ \n      return _topicType ;},\n    getGame: function(){  \n      return _game;},\n    getGameTime: function(){\n      return _scheduledAt;\n    },\n    getTeamA: function(){ \n      if(_game != undefined) {\n        return _game.teams[0];\n      }},\n    getTeamB: function(){ \n      if(_game != undefined) {\n        return _game.teams[1];}\n    },\n    getScoresTitle: function(){   \n      if(_game != undefined && _game.links != undefined) \n        return _game.links[0].title;},\n    getScoresLink: function(){  \n      if((_game != undefined) && (_game.links != undefined)) \n        return _game.links[0].url;},\n    getScore: function(){ \n      if(_score != undefined) \n        return _score;},\n    getGameStatus: function() { \n      return _status;},\n    getGamePeriod: function() { \n      return _gameStats[0];},\n    getGameClock: function() {  \n      return _gameStats[1];},\n//    getSectionType: function(sectionNumber){ \n//    //TODO check for section length\n//    if(sectionNumber == undefined )\n//    return _topic.data.content.sections[0].type;\n//    else\n//    return _topic.data.content.sections[sectionNumber].type\n//    },\n    getChannelId:function(){  \n      if(_topic != undefined) \n        return _topic.owner.id;},\n    getTitle:function(){  \n      return _title;},\n    getHtml:function(){ \n      if(_topic != undefined) \n        return _topic.html},\n//    getMedia:function(){return _media},\n//    getTweet:function(){return _tweet},\n//    getOgp:function(){return _ogp},\n//    getLink:function(){return _link},\n    getTimeCreatedAt:function(){  \n      if(_topic != undefined) \n        return _topic.createdAt},\n    getLiked:function(){  \n      if(_topic != undefined) \n        return _topic.signal.like},\n    getMetrics:function(){  \n      if(_topic != undefined) \n        return _topic.metrics},\n    \n    watchTopicRequest:watchTopicRequest,\n    \n    getLikeTopicRequest:likeTopicRequest,\n    \n    getUnlikeTopicRequest:unlikeTopicRequest,\n    \n    getFollowChannelRequest:getFollowChannelRequest,\n    \n    getTopicRequest:getTopicRequest,\n    \n    isWatchingTopic: function(){ return _isTopicWatched;},\n    \n    setWatchTopic: function(watch){_isTopicWatched = watch;},\n    \n    setTopicId: function(topicId){_id = topicId ;},\n    \n    setChannel: function(channelId){_channelId = channelId; },\n    getChannel: function(){return _channelId ; },\n    \n    setTopic:setTopicData,\n    \n    updateTopic:updateTopicData,\n    \n    updateCommentCount: updateCommentCount,\n    \n    registerObserverCallback:registerObserverCallback,\n    \n    directComment:directComment\n\n  };\n\n}]);","angular.module('SocialModule')\n.factory('VideoService', [\"Bant\",\n\tfunction (Bant) {\n\tvar LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n\tvar observerCallbacks = [];\n\tvar _videoArray = [];\n\tvar _offset = 0;\n\tvar LIMIT = 10;\n\n\n\tfunction setVideoData(videoData) {\n\t\t_videoArray = [];\n\t\tvar tempData = videoData.data.results;\n\t\tvar len = tempData.length;\n\n\t\tif (!!tempData && len > 0){\n\t\t\tfor (i = 0; i < len; i++){\n\t\t\t\tvar _videoObject = Bant.bant(tempData[i]);\n\t\t\t\tif (!!_videoObject.id)\n\t\t\t\t\t_videoArray.push(_videoObject);\n\t\t\t}\n\t\t\t_offset = videoData.data.nextOffset;\n\t\t\tnotifyObservers();\n\t\t}\n\t}\n\n\n\t//call this when you know 'comments' has been changed\n\tvar notifyObservers = function(){\n\t\tangular.forEach(observerCallbacks, function(callback){\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tfunction registerObserverCallback(callback){\n\t\t//register an observer\n\t\tvar callbackLength  = observerCallbacks.length;\n\t\twhile(callbackLength > 0){\n\t\t\tcallbackLength = observerCallbacks.length;\n\t\t\tobserverCallbacks.pop();\n\t\t}\n\t\tobserverCallbacks.push(callback);\n\t}\n\n\tfunction getVideoDataRequest(id, offset){\n\t\tvar reqOffset = offset || _offset;\n\t\tvar request = {\n\t\t\t\"rid\": \"video\",\n\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\"method\": \"GET\",\n\t\t\t\"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset+\"&filter=video\")\n\t\t};\n\t\tconsole.log(\"Video Request: \", request);\n\t\treturn request;\n\t}\n\n\treturn {\n\t\tvideoArray: function(){\n\t\t\treturn _videoArray;\n\t\t},\n\t\tresetVideoOffset: function(){\n      _offset = 0;\n    },\n\t\tsetVideoData:setVideoData,\n\t\tgetVideoDataRequest:getVideoDataRequest,\n\t\tregisterObserverCallback:registerObserverCallback\n\t};\n\n}]);","angular.module('SocialModule')\n.factory('SocialService', [\"Bant\", \n  function (Bant) {\n  var LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n  var observerCallbacks = [];\n  var _socialArray = [];\n  var _offset = 0;\n  var LIMIT = 20;\n\n\n  function setSocialData(socialData) {\n    _socialArray = [];\n    var tempData = socialData.data.results;\n    var len = tempData.length;\n\n    if (!!tempData && len > 0){\n      for (i = 0; i < len; i++){\n        var _socialObject = Bant.bant(tempData[i]);\n        if (!!_socialObject.id)\n          _socialArray.push(_socialObject);\n      }\n      _offset = socialData.data.nextOffset;\n      notifyObservers();\n    }\n  };\n\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n\n  function registerObserverCallback(callback){\n    // register an observer for provided feed\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  };\n\n  function getSocialDataRequest(id, offset){\n    var reqOffset = offset || _offset;\n    var request = {\n      \"rid\": \"social\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset)\n    };\n    console.log(\"Social Request: \", request);\n    return request;\n  };\n\n  return {\n    socialArray: function(){\n      return _socialArray;\n    },\n    resetSocialOffset: function(){\n      _offset = 0;\n    },\n    setSocialData: setSocialData,\n    getSocialDataRequest: getSocialDataRequest,\n    registerObserverCallback: registerObserverCallback\n  };\n\n}]);","angular.module(\"SplashModule\", [])\n.factory(\"SplashService\", function(){\n  var _hidePeelSplash = true;\n  var _hideSSSplash = true;\n \n  return {\n    hidePeelSplash: function(){\n      return _hidePeelSplash;\n    },\n    hideSSSplash: function(){\n      return _hideSSSplash;\n    },\n    setPeelSplash: function(val){\n      _hidePeelSplash = val;\n    },\n    setSSSplash: function(val){\n      _hideSSSplash = val;\n    }\n  }\n});","angular.module('NetworkModule')\n.factory('CommentService', [\"Bant\",\"DateUtilityService\",\"FDSUtility\",\n  function (Bant,DateUtilityService,FDSUtility) {\n  var LIST_COMMENTS_URI = \"/v1.0/topic/comments/list/\"\n  var SHOW_COMMENT_URI = \"/v1.0/comment/show/\";\n    \n  var POST_COMMENT_URI=\"/v1.0/comment/create\";\n  var UPDATE_COMMNET_URI = \"/v1.0/comment/content/update/\";\n  var PIN_COMMENT_URI = \"/v1.0/comment/pin/\";\n  var DELETE_COMMENT_URI = \"/v1.0/comment/delete/\";\n  \n  var LIKE_COMMENT_URI = \"/v1.0/comment/like/\";\n  var UNLIKE_COMMENT_URI = \"/v1.0/comment/unlike/\";\n\n  var HIDE_COMMENT_URI = \"/v1.0/comment/hide/\";\n  var UNHIDE_COMMENT_URI = \"/v1.0/comment/unhide/\";\n  \n  var FLAG_COMMENT_URI = \"/v1.0/comment/flag/\";\n  var UNFLAG_COMMENT_URI = \"/v1.0/comment/unflag/\";\n  \n  var observerCallbacks = [];\n  var tempObserverCallbacks = [];\n  var _comments = [];\n  var _pinnedComments = 0;\n  var _offset = 0;\n\n  var _loadedComments = false;\n\n  function setComments(commentsData) {\n    //TODO clear comments for complete refresh Comments API\n    _comments = [];\n    tempCommentsData = commentsData.data.results;\n    if(tempCommentsData != undefined && tempCommentsData.length>0){\n      var len = tempCommentsData.length;\n      for(i=0;i<len;i++){\n        var _commentObject = {};\n        _commentObject = Bant.bant(tempCommentsData[i]);\n        if(_commentObject.id != undefined)\n          _comments.push(_commentObject);\n        // console.log(\"Comments in set comment Service type:\"+_commentObject.type + \"  \" +_commentObject.html );\n      }\n      if (commentsData.data.prevOffset === \"\"){\n        notifyObservers(true);\n      } else {\n        notifyObservers();\n      }\n      _offset = commentsData.data.nextOffset;\n    }\n    else{\n      //PArticular case when user is on reply page and requires comment by comment ID\n      var data = commentsData.data;\n      if((commentsData.method == \"GET\") &&(commentsData.uri.substring(0,SHOW_COMMENT_URI.length) == SHOW_COMMENT_URI) ){\n        if(NETWORK_DEBUG) console.log(\"Processing Show comment\");\n        var _commentObject = {};\n        _commentObject = Bant.bant(data);\n        if(_commentObject.id != undefined)\n          _comments.push(_commentObject); \n        notifyObservers();\n      }\n    }\n  }\n\n  function appendToComments(postCommentData) {\n    var tempComment = postCommentData.data;\n    if(tempComment!= undefined){\n      var _commentObject = {};\n      _commentObject = Bant.bant(tempComment);\n      if(_commentObject.id != undefined && (_commentObject.html != undefined || _commentObject.media != undefined)){\n        var i = 0;\n        if(_comments.length >0)\n        while(_comments[i].pin == true)\n          i++; \n        _pinnedComments = i;\n        //console.log(\"Pinned comments \"+ i);\n        if(_pinnedComments>0)\n          _comments.splice(i,0,_commentObject);\n        else\n          _comments.unshift(_commentObject);\n      }\n      // console.log(\"appendToComments CommentService\"+_commentObject.html );\n    }\n    notifyObservers();\n  }\n\n\n\n\n  function updateComment(commentData){\n    //if comments ID exist, update it \n    //else append to existing list\n    var commentObj = commentData.data;\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == commentObj.id){\n        //update\n        _comments[i] = Bant.bant(commentObj);\n        return 1;\n      }\n    }\n    appendToComments(commentData);\n    //notifyObservers();\n    console.log(\"In Comment Service update comment\");\n    return 0;\n  }\n  \n  function updateLocalData(newData){\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == newData.id){\n        //update\n        _comments[i] = newData;\n        return;\n      }\n    }\n  }\n  \n  function updateLikeCommentWithId(id, liked){\n    if(NETWORK_DEBUG)\n    console.log(\"updateLikeCommentWithId :\"+ id + \"   liked \"+ liked);\n    if((id != undefined)){\n      var tempObject;\n      tempObject = getCommentById(id);\n      tempObject = Bant.updateBantLiked(tempObject, liked);\n      updateLocalData(tempObject);\n\n      notifyObservers();\n    }\n    \n  }\n\n  function removeComment(commentData){\n    var commentObj = commentData.data;\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == commentObj.id){\n        //remove element\n        _comments.splice(i,1);\n        console.log(\"found Comment\")\n        return 0;\n      }\n    }\n    return 1;\n\n  }\n  \n  function getCommentById(id){\n    if(NETWORK_DEBUG) console.log(\"_comments :\"+ _comments.length);\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == id){\n        //remove element\n        return _comments[i];\n      }\n    }\n  }\n\n\n\n\n  //call this when you know 'comments' has been changed\n  var notifyObservers = function(temp){\n    if (temp){\n      console.log(\"IN TEMP\");\n      angular.forEach(tempObserverCallbacks, function(callback){\n        callback();\n      });\n    } else {\n      console.log(\"IN REG\");\n      angular.forEach(observerCallbacks, function(callback){\n        callback();\n      });\n    }\n  };\n  \n  function registerObserverCallback(callback, temp){\n    //register an observer\n    if (temp){\n      var callbackLength = tempObserverCallbacks.length;\n      while (callbackLength > 0){\n        callbackLength = tempObserverCallbacks.length;\n        tempObserverCallbacks.pop();\n      }\n      tempObserverCallbacks.push(callback);\n    } else {\n      var callbackLength  = observerCallbacks.length;\n      while (callbackLength > 0){\n        callbackLength = observerCallbacks.length;\n        observerCallbacks.pop();\n      }\n      observerCallbacks.push(callback);\n    }\n  }\n  \n  function commentGetRequest(uri){\n    var queryStr;\n    if (_offset === 0){\n      queryStr = \"?limit=10&offset=\" + _offset;\n    } else {\n      queryStr = \"?offset=\" + _offset;\n    }\n    return  {\"rid\": \"comment\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(uri + queryStr)}\n  }\n  function commentPostRequest(uri){\n    return  {\"rid\": \"comment\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"POST\",\n      \"uri\": encodeURI(uri)}\n  }\n  function getCommentsRequest(commentId){\n    var uri = LIST_COMMENTS_URI+commentId;\n    return  commentGetRequest(uri);\n  }\n  \n  function getCommentByIdRequest(commentId){\n    var uri = SHOW_COMMENT_URI + commentId;\n    return  commentGetRequest(uri);\n  }\n\n  function postCommentRequest(topicId, commentData){\n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData}]},\n          \"topicId\": topicId,\n        };\n    return createCommentParams;\n  }\n  function postCommentRequestForMedia(topicId, commentData, mediaData){\n    var m = {\"media\":[mediaData]};\n    \n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData},{\"type\":\"media\"}]},\n          \n          \"topicId\": topicId,\n        };\n    createCommentParams.data.content.sections[1].media = m.media;\n    console.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n    return createCommentParams;\n  }\n\n  function postCommentRequestForShare(topicId, commentData, embedData){\n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData},{\"type\":\"embed\"}]},\n          \n          \"topicId\": topicId,\n        };\n    createCommentParams.data.content.sections[1].embed = embedData;\n    console.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n    return createCommentParams;\n  }\n\n  function likeCommentRequest(id){\n    return commentPostRequest(LIKE_COMMENT_URI + id);\n\n  }\n\n  function unlikeCommentRequest(id){\n    return commentPostRequest(UNLIKE_COMMENT_URI + id);\n  }\n  \n  function hideCommentRequest(id){\n    return commentPostRequest(HIDE_COMMENT_URI + id);\n\n  }\n\n  function unhideCommentRequest(id){\n    return commentPostRequest(UNHIDE_COMMENT_URI + id);\n  }\n  \n  function flagCommentRequest(id){\n    return commentPostRequest(FLAG_COMMENT_URI + id + \"?reason=spam\");\n\n  }\n\n  function unflagCommentRequest(id){\n    return commentPostRequest(UNFLAG_COMMENT_URI + id);\n  }\n  \n  function deleteCommentRequest(id){\n    return commentPostRequest(DELETE_COMMENT_URI + id);\n  }\n  \n  function isCommentLiked(id){\n    return FDSUtility.isLikedById(_comments,id);\n  }\n  \n  \n  function updateReplyCountById(id, value){\n    if(id != undefined ){\n    //var id = replyData.commentId;\n    var tempStructure = getCommentById(id);\n    if(tempStructure != undefined){\n      if(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.metrics.replies :\"+ tempStructure.metrics.replies);\n      if(value == -1){\n      tempStructure.metrics.replies == undefined ? tempStructure.metrics.replies = 0: tempStructure.metrics.replies = tempStructure.metrics.replies - 1;\n      }\n      else {\n        \n        tempStructure.metrics.replies == undefined ? tempStructure.metrics.replies = 1: tempStructure.metrics.replies = tempStructure.metrics.replies + 1;\n      }\n      updateLocalData(tempStructure); \n    notifyObservers();\n    }\n    }\n    \n  }\n\n  function updateCommentLocalData(uri,id){\n    if(uri == LIKE_COMMENT_URI+id){\n      console.log(\"calling update like \");\n      updateLikeCommentWithId(id, true)\n    }\n    else if(uri == UNLIKE_COMMENT_URI+id){\n      updateLikeCommentWithId(id, false)\n    }\n    else if(uri == DELETE_COMMENT_URI+id){\n      _comments = FDSUtility.deleteById(_comments,id);\n      notifyObservers();\n      return 0;\n    }\n    else if(uri == FLAG_COMMENT_URI+id){\n      _comments = FDSUtility.flagById(_comments, false);\n      }\n    else if(uri == UNFLAG_COMMENT_URI+id){\n      _comments = FDSUtility.flagById(_comments, false);\n    }\n    else if(uri == HIDE_COMMENT_URI+id){\n      _comments = FDSUtility.hideById(_comments, true);\n    }\n    else if(uri == UNHIDE_COMMENT_URI+id){\n      _comments = FDSUtility.hideById(_comments, false);\n    }\n  }\n\n\n  return {\n    comments: function(){\n      return _comments },\n\n      setComments:setComments,\n      updateComment:updateComment,\n      appendToComments:appendToComments,\n      updateLikeCommentWithId:updateLikeCommentWithId,\n      updateCommentLocalData:updateCommentLocalData,\n      updateReplyCountById:updateReplyCountById,\n      removeComment:removeComment,\n      postCommentRequest:postCommentRequest,\n      postCommentRequestForMedia:postCommentRequestForMedia,\n      postCommentRequestForShare:postCommentRequestForShare,\n      getLikeCommentRequest:likeCommentRequest,\n      getUnlikeCommentRequest:unlikeCommentRequest,\n      registerObserverCallback:registerObserverCallback,\n      getCommentsRequest:getCommentsRequest,\n      getCommentById:getCommentById,\n      getCommentByIdRequest:getCommentByIdRequest,\n      deleteCommentRequest:deleteCommentRequest,\n      flagCommentRequest:flagCommentRequest,\n      isCommentLiked:isCommentLiked,\n      getNumPinComments:function(){\n        return _pinnedComments;\n      },\n      loadedComments: function(){\n        return _loadedComments;\n      },\n      setLoadedComments: function(val){\n        _loadedComments = val;\n      }\n  };\n\n}]);","angular.module('NetworkModule')\n.service('DateUtilityService', function () {\n\n\tfunction timeSince(timeStamp) {\n\t\t// console.log(\"timeSatmp\", timeStamp);\n\t\tvar now = new Date();\n\t\tvar createdDate = new Date(timeStamp);\n\t\tsecondsPast = (now.getTime() - createdDate.getTime()) / 1000;\n\t\tif(secondsPast < 60){\n\t\t\treturn 'now';\n\t\t}\n\t\tif(secondsPast < 3600){\n\t\t\treturn parseInt(secondsPast/60) + 'm';\n\t\t}\n\t\tif(secondsPast < 86400){\n\t\t\treturn parseInt(secondsPast/3600) + 'h';\n\t\t}\n\t\tif(secondsPast < 2592000){\n\n\t\t\tvar daysPassed = secondsPast/86400;\n\t\t\treturn Math.floor(daysPassed) + 'd';\n\t\t}\n\t\tif(secondsPast > 2592000){\n\t\t\tday = createdDate.getDate();\n\t\t\tmonth = createdDate.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \",\"\");\n\t\t\tyear = createdDate.getFullYear() == now.getFullYear() ? \"\" :  \" \"+createdDate.getFullYear();\n\t\t\tconsole.log(\"DATE \"+ day + \" \" + month + year);\n\t\t\treturn day + \" \" + month + year;\n\t\t}\n\t}\n\t\n\tfunction gameScheduleTime(timeStamp){\n\t\tvar date_format = '12';\n\t\tvar createdDate = new Date(timeStamp);\n\t\tday = createdDate.getDate();\n\t\tmonth = createdDate.getMonth() + 1;\n\t\thour = createdDate.getHours();\n\t\tvar hour    = createdDate.getHours();  /* Returns the hour (from 0-23) */\n\t\tvar minutes     = createdDate.getMinutes();  /* Returns the minutes (from 0-59) */\n\t\tvar time  = hour;\n\t\tvar ext     = '';\n\t\tvar timeZone = createdDate.toLocaleString('en', {timeZoneName:'short'}).split(' ').pop();\n\n\t\tif(date_format == '12'){\n\t\t    if(hour > 12){\n\t\t        ext = 'PM';\n\t\t        hour = (hour - 12);\n\n\t\t        if(hour < 10){\n\t\t        \ttime = \"0\" + hour;\n\t\t        }else if(hour == 12){\n\t\t            hour = \"00\";\n\t\t            ext = 'AM';\n\t\t        }\n\t\t    }\n\t\t    else if(hour < 12){\n\t\t    \ttime = ((hour < 10) ? \"0\" + hour : hour);\n\t\t        ext = 'AM';\n\t\t    }else if(hour == 12){\n\t\t        ext = 'PM';\n\t\t    }\n\t\t}\n\n\t\tif(minutes < 10){\n\t\t    minutes = \"0\" + minutes; \n\t\t}\n\n\t\ttime = time + \":\" + minutes + ' ' + ext + ' '+timeZone; \n\t\tdate = month+ \"/\" +day;\n\t\tresult = {\"date\":date,\"time\":time};\n\n\t\tconsole.log(\"Scheduled date : \"+ result.date + \"  Scheduled time : \"+result.time);\n\t\t\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\treturn{\n\t\tgetTimeSince:timeSince,\n\t\tgetGameScheduledTime:gameScheduleTime\n\t};\t\n});","angular.module('NetworkModule')\n.factory('Bant', [\"DateUtilityService\",\n  function (DateUtilityService) {\n  var EXTRACT_MEDIA_TYPE_LENGTH = 5;\n  \n  function extractMediaObject (_bantObject, tempMedia){\n    //if Video update\n    _bantObject.mediaType = tempMedia.mediaType.substring(EXTRACT_MEDIA_TYPE_LENGTH,0);\n    if(_bantObject.mediaType ==\"video\"){\n      _bantObject.mediaThumbUrl = tempMedia.thumbUrl;\n    }\n    _bantObject.mediaUrl = tempMedia.url;\n    if(tempMedia.sizes != undefined){\n    _bantObject.mediaAspectFull = tempMedia.sizes[\"full\"];\n    _bantObject.mediaAspect16x9 = tempMedia.sizes[\"16:9\"];\n    _bantObject.mediaAspect1x1 = tempMedia.sizes[\"1:1\"];\n    _bantObject.mediaAspect2x1 = tempMedia.sizes[\"2:1\"];\n    }\n    if(_bantObject.mediaAspect16x9 != undefined){\n      _bantObject.mediaAspectRatio = 1.778;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect16x9;\n      if (_bantObject.mediaAspect16x9.w < _bantObject.mediaAspect16x9.h){\n        _bantObject.mediaOrientation = \"portrait\";\n      } else {\n        _bantObject.mediaOrientation = \"landscape\";\n      }\n    }\n    else if(_bantObject.mediaAspect1x1 != undefined){\n      _bantObject.mediaAspectRatio = 1;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect1x1;\n      _bantObject.mediaOrientation = \"square\";\n    }\n    else if(_bantObject.mediaAspect2x1 != undefined){\n      _bantObject.mediaAspectRatio = 2;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect2x1;\n      if (_bantObject.mediaAspect2x1.w < _bantObject.mediaAspect2x1.h){\n        _bantObject.mediaOrientation = \"portrait\";\n      } else {\n        _bantObject.mediaOrientation = \"landscape\";\n      }\n    }\n    if(_bantObject.mediaAspectFeed != undefined){\n      _bantObject.mediaAspectFeed.x == undefined ? 0 : _bantObject.mediaAspectFeed.x;\n      _bantObject.mediaAspectFeed.y == undefined ? 0 : _bantObject.mediaAspectFeed.y;\n      _bantObject.mediaAspectFeed.w == undefined ? 0 : _bantObject.mediaAspectFeed.w;\n      _bantObject.mediaAspectFeed.h == undefined ? 0 : _bantObject.mediaAspectFeed.h;\n    }\n    if(_bantObject.mediaAspectFull != undefined){\n      _bantObject.mediaAspectFull.x == undefined ? 0 : _bantObject.mediaAspectFull.x;\n      _bantObject.mediaAspectFull.y == undefined ? 0 : _bantObject.mediaAspectFull.y;\n      _bantObject.mediaAspectFull.w == undefined ? 0 : _bantObject.mediaAspectFull.w;\n      _bantObject.mediaAspectFull.h == undefined ? 0 : _bantObject.mediaAspectFull.h;\n    }\n    return _bantObject;\n  }\n  \n  function extractEmbedObject(_bantObject, embedObject){\n//    Type      string        `json:\"type,omitempty\"`      // Type: \"link\", \"media\" or \"html\".\n//    Title     string        `json:\"title,omitempty\"`     // Title.\n//    Text      string        `json:\"text,omitempty\"`      // Text.\n//    Media     []Media       `json:\"media,omitempty\"`     // List of images or videos.\n//    Url       string        `json:\"url,omitempty\"`       // URL.\n//    Playable  bool          `json:\"playable,omitempty\"`  // Link contains playable content such as video.\n//    Html      string        `json:\"html,omitempty\"`      // HTML code to embed.\n//    Mini      bool          `json:\"mini,omitempty\"`      // Use mini display format.\n//    Author    EmbedAuthor   `json:\"author,omitempty\"`    // Author info.\n//    Provider  EmbedProvider `json:\"provider,omitempty\"`  // Provider info.\n//    CreatedAt string        `json:\"createdAt,omitempty\"` // Publication time in RFC3339 format.\n    _bantObject.embedType = embedObject.type;\n    _bantObject.embedTitle = embedObject.title;\n    _bantObject.embedText = embedObject.text;\n    _bantObject.embedMedia = {};\n    if(embedObject.type === 'media' || embedObject.type === 'link'){\n      // console.log(\"*****!!embedObject.media\",embedObject.media,embedObject);\n      if (embedObject.media){\n        _bantObject.embedMedia = extractMediaObject(_bantObject.embedMedia, embedObject.media[0]);\n      }\n    }\n    _bantObject.embedUrl = embedObject.url;\n    _bantObject.embedPlayable = embedObject.playable;\n    _bantObject.embedHtml = embedObject.html;\n    _bantObject.embedMetrics = embedObject.metrics;\n    _bantObject.embedMini = embedObject.mini;\n    _bantObject.embedAuthor = embedObject.author;\n    _bantObject.embedProvider = embedObject.provider;\n    _bantObject.embedCreatedAt = DateUtilityService.getTimeSince(embedObject.createdAt);\n    _bantObject.embedCreatedAtFull = embedObject.createdAt;\n    \n    \n    return _bantObject;\n\n  }\n\n  function Bant(data){\n    var _bantObject = {};\n    _bantObject.id = data.id;\n    _bantObject.author = data.author;\n    _bantObject.owner = data.owner;\n    if(data.content.sections != undefined){\n      _bantObject.sectionsLength = data.content.sections.length;\n\n      for(j=0;j<_bantObject.sectionsLength;j++){\n        _bantObject.type = data.content.sections[j].type;\n        if(_bantObject.type == \"html\")\n          _bantObject.html = data.content.sections[j].html;\n\n        if(_bantObject.type == \"media\"){\n          _bantObject.media = data.content.sections[j].media;\n          _bantObject = extractMediaObject(_bantObject, _bantObject.media[0]);\n        }\n        if(_bantObject.type == \"embed\" || _bantObject.type == \"tweet\"){\n          if (data.content.sections[j].embed !== null){\n            // console.log(\"!!!!!Fiding ID:\",data.content.sections[j]);\n            _bantObject = extractEmbedObject(_bantObject,data.content.sections[j].embed);\n            _bantObject.embed = data.content.sections[j].embed;\n          }\n        }\n        _bantObject.tweet = data.content.sections[j].tweet;\n        _bantObject.ogp = data.content.sections[j].ogp;\n        _bantObject.link = data.content.sections[j].link;\n      }\n    }\n    _bantObject.signal = data.signal;\n    if(_bantObject.signal == undefined){\n      var likeObject = {like:false};\n      _bantObject.signal = likeObject;\n    }\n    else if(_bantObject.signal.like == undefined)\n      _bantObject.signal.like = false;\n    _bantObject.metrics = data.metrics;\n    _bantObject.createdAtFull = data.createdAt;\n    _bantObject.createdAt = DateUtilityService.getTimeSince(data.createdAt);\n    _bantObject.pin = data.pin;\n    _bantObject.commentId = data.commentId;\n    _bantObject.topicId = data.topicId;\n    \n    return _bantObject;\n\n  }\n  \n  \n  \n  function updateBantLiked(data, liked){\n    //if same state, dont do anything\n    if(data.signal.like == liked){\n      if(NETWORK_DEBUG)\n        console.log(\"no need to change   data.signal.like:\"+ data.signal.like);\n      return data;\n    }\n    if(liked){\n      //update like status\n      data.signal.like = true;\n      //increment like count.\n      (data.metrics.likes == undefined) ? data.metrics.likes = 1: data.metrics.likes = (data.metrics.likes + 1);\n    }\n    else{\n      //update like status\n      data.signal.like = false;\n      //decrement like count.\n      if(data.metrics.likes != undefined) \n      data.metrics.likes = (data.metrics.likes - 1);\n    }\n    if(NETWORK_DEBUG)\n      console.log(\"data.metrics.likes :\"+ data.metrics.likes);\n    return data;\n  }\n\n  return {\n    bant: Bant,\n    updateBantLiked : updateBantLiked\n  };\n\n}]);","angular.module('NetworkModule')\n.factory('UserInfoService', [\"ForumStorage\",\"URIHelper\",\n\tfunction (ForumStorage, URIHelper) {\n\t//OLD Creds userId=1, sessionId=dac24379, accessToken=7uFF3QGh-84=\n\t//NEW Creds userId=193, sessionId=53d7b518, accessToken=dsKGKXyZgGs=\n\tvar _userInfo = {};\n\tvar userInfoTemp = {\n\t\t\t\"userId\":\"193\",\n\t\t\t\"accessToken\":\"dsKGKXyZgGs=\",\n\t\t\t\"sessionId\":\"53d7b518\"\n\t};\n\tvar _isUserLoggedIn = false;\n\tvar _userType = \"\";\n\n//\tvar userInfoTemp = {\n//\t\"userId\":\"204\",\n//\t\"accessToken\":\"_uO41ylA_xs=\",\n//\t\"sessionId\":\"b7427f4a\"\n//\t};\n\n\tfunction getUserCredentials(){\n\t\tif(_userInfo == undefined){\n\t\t\tconsole.log(\"UserInfoService : UserId is not defined , using static user, TODO : Remove this for release build\");\n\t\t\t_userInfo = userInfoTemp;\n\t\t\treturn userInfoTemp;\n\t\t}\n\n\t\treturn _userInfo;\n\t}\n\n\tfunction isCurrentUser(id){\n\t\t//console.log(\"Current user id  && id :\"+_userInfo.userId + \" :   \"+ id);\n\t\tif(id == _userInfo.userId)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tfunction setUserCredentials(userId, accessToken, sessionId, userType){\n\t\tconsole.log(\"setUserCredentials: \", userId, accessToken, sessionId, userType);\n\t\t// _userInfo = {};\n\t\t_userInfo.userId = userId;\n\t\t_userInfo.accessToken = accessToken;\n\t\t_userInfo.sessionId = sessionId;\n\t\t_isUserLoggedIn = true;\n\t\t_userInfo.userType = userType;\n\t\t// ForumStorage.clearStorage();\n\t\tForumStorage.setToLocalStorage(\"forumIsLoggedIn\",_isUserLoggedIn);\n\t\tForumStorage.setToLocalStorage(\"forumUserId\",userId);\n\t\tForumStorage.setToLocalStorage(\"forumAccessToken\",accessToken);\n\t\tForumStorage.setToLocalStorage(\"forumSessionId\",sessionId);\n\t\tForumStorage.setToLocalStorage(\"forumUserType\",userType);\n\n\t\t// console.log(\"this.userInfo.userId :\"+ _userInfo.userId);\n\t}\n\n\tfunction hasUserVisited() {\n\t\treturn ForumStorage.getFromLocalStorage(\"hasUserVisited\") ? true : false;\n\t}\n\n\treturn{\n\t\tgetUserCredentials:getUserCredentials,\n\t\tsetUserCredentials:setUserCredentials,\n\t\tisCurrentUser:isCurrentUser,\n\t\thasUserVisited: hasUserVisited,\n\t\tisUserLoggedIn:function(){\n\n\t\t\t//console.log(\"cached : is user logged in : \"+_isUserLoggedIn);\n\t\t\tif(_isUserLoggedIn)\n\t\t\t\treturn true;\n\t\t\telse{\n//\t\t\t\tvar islogged = ForumStorage.getFromLocalStorage(\"forumIsLoggedIn\");\n//\t\t\t\tconsole.log(\"storage : is user logged in : \"+islogged);\n\t\t\t\tif(ForumStorage.getFromLocalStorage(\"forumIsLoggedIn\"))\n\t\t\t\t{\n\t\t\t\t\t_userInfo = {};\n\t\t\t\t\t_userInfo.userId = ForumStorage.getFromLocalStorage(\"forumUserId\");\n\t\t\t\t\t_userInfo.accessToken = ForumStorage.getFromLocalStorage(\"forumAccessToken\");\n\t\t\t\t\t_userInfo.sessionId = ForumStorage.getFromLocalStorage(\"forumSessionId\");\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tisPeelUser:function(){\n\t\t\tURIHelper.isPeelUser();\n\t\t\tif (GEN_DEBUG) console.log(\"ForumStorage.getFromLocalStorage: \"+ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(_userInfo.userType === \"peel\")\n\t\t\t\treturn true;\n\t\t\tif(ForumStorage.getFromLocalStorage(\"forumUserType\") === \"peel\")\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t},\n\t\tisSmartStadiumUser:function(){\n\t\t\tvar ssUser = URIHelper.isSmartStadiumUser();\n\t\t\tif (GEN_DEBUG) console.log(\"ForumStorage.getFromLocalStorage: \", ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(ssUser){\n\t\t\t\t_userInfo.userType = 'email';\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(_userInfo.userType === \"email\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (ForumStorage.getFromLocalStorage(\"forumUserType\") === \"email\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tisMI16User:function(){\n\t\t\tvar MI16User = URIHelper.isTechMUser();\n\t\t\tif (GEN_DEBUG) console.log(\"ForumStorage.getFromLocalStorage: \", ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(MI16User){\n\t\t\t\t_userInfo.userType = 'MI16';\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(_userInfo.userType === \"MI16\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (ForumStorage.getFromLocalStorage(\"forumUserType\") === \"MI16\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetUserType:function(){\n\t\t\tif (GEN_DEBUG) console.log(\"UIS _userType - - - \", _userInfo.userType);\n\t\t\treturn _userInfo.userType;\n\t\t},\n\t\tisGuestUser:function(){\n\t\t\tif (GEN_DEBUG) console.log(\"UIS _userType - - - \", _userInfo.userType);\n\t\t\tif(_userInfo.userType === \"guest\" || ForumStorage.getFromLocalStorage(\"forumUserType\") === \"guest\")\n\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\n\t};\n\n}]);","angular.module('AuthModule')\n.factory(\"AuthService\", [\"$http\",\"$window\",\"$location\",\"UserInfoService\", \"TopicService\", \"ReplyService\", \"networkService\", \"ForumDeviceInfo\", \"ChannelService\", \"URIHelper\", \n  function ($http, $window, $location, UserInfoService, TopicService, ReplyService, networkService, ForumDeviceInfo, ChannelService, URIHelper) {\n\n  var userLoggedInToFacebook = false;\n\n  var loginAsGuest = function() {\n  console.log(\"Logging in as Guest\");\n    var userData = {};\n    userData.id = ForumDeviceInfo.getDeviceId();\n    userData.userName = \"GuestUser\";\n\n    var registerParams = setRegistrationParams(\"guest\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var loginToFacebook = function(callback) {\n    FB.login(function (response) {\n      if (response.status === 'connected') {\n        callback();\n        var registerParams = setRegistrationParams(\"facebook\", -25200, response.authResponse);\n        registerUser(registerParams);\n      }\n    });\n  };\n\n  var loginWithPeel = function() {\n    var userData = {};\n    userData.id = URIHelper.getPeelUserId();\n    userData.userName = URIHelper.getPeelUserName();\n\n    var registerParams = setRegistrationParams(\"peel\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var loginWithEmail = function() {\n    var userData = {\n      \"id\": URIHelper.getSSUserId(),\n      \"userName\": URIHelper.getSSUserName()\n    };\n\n    var registerParams = setRegistrationParams(\"email\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var techMLogin = function (name, email) {\n    var userData = {\n      \"id\": email,\n      \"userName\": name\n    };\n\n    console.log(\"techMLogin: \", userData);\n    var registerParams = setRegistrationParams(\"email\", -28800, userData);\n    registerUser(registerParams, true);\n  };\n\n  var setRegistrationParams = function (type, utcOffset, userData) {\n    var deviceId = ForumDeviceInfo.getDeviceId();\n    var registerParams = {\n      \"type\": type,\n      \"locale\": \"en_US\",\n      \"utcOffset\": utcOffset,\n      \"deviceType\": \"web\",\n      \"deviceId\": deviceId,\n      \"deviceModel\": \"browser\",\n      \"appKey\": \"testKey\",\n      \"appVersion\": \"1.0\"\n    };\n\n    if (type === 'facebook'){\n      registerParams.facebook = {\n        \"id\": userData.userID,\n        \"accessToken\": userData.accessToken\n      };\n    } else if (type === 'peel'){\n      registerParams.peel = {\n        \"id\": userData.id,\n        \"name\": userData.userName\n      }; \n    } else if (type === 'email'){\n      registerParams.email = {\n        \"id\": userData.id,\n        \"name\": userData.userName\n      }\n    }\n    return registerParams;\n  };\n\n  var registerUser = function(registerParams, isMI16) {\n    // Post request to our api to register/retrieve user\n    var userType = registerParams.type;\n    if (isMI16){\n      userType = 'MI16';\n    }\n    $http.post(REGISTER_SERVER_URI, JSON.stringify(registerParams))\n      .then(function (response) {\n        if (response.status === 200) {\n          console.log(\"Successfully Registered User of Type: \" + userType);\n          if (registerParams.type === 'facebook'){\n            userLoggedInToFacebook = true;\n          }\n\n          // Store user credentials in Local Storage\n          UserInfoService.setUserCredentials(\n            response.data.userId, \n            response.data.accessToken, \n            response.data.sessionId,\n            userType);\n        }\n      },\n      function (response) {\n        console.log('Registration Error: ', response);\n      }).then(function (response) {\n        initializeContent();\n      });\n  };\n\n  var initializeContent = function() {\n    console.log(\"Initializing Content\");\n    // Initialize Network Service and determine what type of resource is being accessed\n    networkService.init();\n\n    var initChannel = ChannelService.getChannel();\n    var initTopic = TopicService.getTopicId();\n\n    if (!!initChannel) {\n      console.log(\"found channel ID: \" + initChannel);\n      networkService.send(ChannelService.getLiveGameTopic(initChannel));\n    }\n    else if (!!initTopic) {\n      console.log(\"found Topic ID: \" + initTopic);\n      if (HTML5_LOC){\n        $location.path(\"/topic/\" + initTopic);\n      } else {\n        $window.location = \"#/topic/\" + initTopic;\n      }\n    }\n    else {\n      var initPost = ReplyService.getPostId();\n      if (!!initPost){\n        console.log(\"found post ID: \" + initPost);\n        if (HTML5_LOC){\n          $location.path(\"/post/\" + initPost);\n        } else {\n          $window.location = \"#/post/\" + initPost;\n        }\n      }\n    }\n  };\n\n  return {\n    loginAsGuest:loginAsGuest,\n    loginToFacebook: loginToFacebook,\n    loginWithPeel: loginWithPeel,\n    loginWithEmail: loginWithEmail,\n    techMLogin: techMLogin,\n    setRegistrationParams: setRegistrationParams,\n    registerUser: registerUser,\n    initializeContent: initializeContent,\n    userLoggedInToFacebook: userLoggedInToFacebook\n  };\n\n}]);\n","angular.module('NetworkModule')\n.service('StaticData', function () {\n\t//TODO: Static data used for Demo, remove this once the Development is complete\n\tvar postAuthors = [\n\t                   {\n\t                \t   \"photo\":\"ana.png\",\n\t                \t   \"name\":\"Ana\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"arod.png\",\n\t                \t   \"name\":\"A-Rod\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"cristiano.png\",\n\t                \t   \"name\":\"Cristiano\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"derek.png\",\n\t                \t   \"name\":\"Derek\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"dwayne.png\",\n\t                \t   \"name\":\"Dwayne\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"erin.png\",\n\t                \t   \"name\":\"Erin\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"jordan.png\",\n\t                \t   \"name\":\"Michael\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"lebron.png\",\n\t                \t   \"name\":\"Lebron\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"lionel.png\",\n\t                \t   \"name\":\"Lionel\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"maria.png\",\n\t                \t   \"name\":\"Maria\"\n\t                   }\n\t                   ];\n\n\tvar loremIpsum = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\";\n\tvar postTypes = [\"text\", \"text\", \"text\", \"photo\", \"video\"];\n\n\tfunction getPostsForTopicID()\n\t{\n\t\tvar staticPosts = [];\n\n\t\tvar fakePhotos = [\"fakePhoto1.jpg\", \"fakePhoto2.jpg\", \"fakePhoto3.jpg\", \"fakePhoto4.jpg\", \"fakePhoto5.jpg\", \"fakePhoto6.jpg\"];\n\t\tvar usedFakePhotos = 0;\n\n\t\tvar fakeVideos = [\"fakeVideo1.jpg\", \"fakeVideo2.jpg\", \"fakeVideo3.jpg\"];\n\t\tvar usedFakeVideos = 0;\n\n\t\tvar peelDemoData = [\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Will this be the year Kaep teaches Sherman a lesson or will Kaep get schooled again?\",\n\t\t                    \t\"postMedia\":\"fakePhoto1.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Remember Kyle Williams - for some reason, I am having recurring nightmares about him again - weird but true:(\",\n\t\t                    \t\"postMedia\":\"fakeVideo1.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Will Kaep be given a free reign to do whatever he wants? Please don't make him a pocket passer because HE IS NOT ONE\",\n\t\t                    \t\"postMedia\":\"fakePhoto2.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Running back of the 9ers this season truly scares the hell out of me - thoughts?\",\n\t\t                    \t\"postMedia\":\"fakeVideo2.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Will our defense save us again? We have seen that this offense needs lot of help:(\",\n\t\t                    \t\"postMedia\":\"fakeVideo3.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Can't wait for this game - gets me want to kick Seahawks every time we play them\",\n\t\t                    \t\"postMedia\":\"fakePhoto3.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Jimmy Graham is going to be such a formidable match-up for our secondary. Not sure if we have the personnel to cover him. Hate the fact that the saehawks offense just got whole lot better this year\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"From contenders to last in the league - reasons for our free fall down the ranks\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"One more drubbing - when are we going to be good again?\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"How do we always fuck up the second half? It is always the take of two halves with us this year. Sucks\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Are you fuckin kidding me - how did we miss that tackle? Why do we keep messing up defensively during 3rd and long? That is the 5th 3rd and long conversion for the Hawks.. Come on DDDDD\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Time to talk about the next season already? Sure nothing is going to change and we are going to suck again.. \",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"We miss Aldon Smith so much - we absolutely don't have an edge rusher.. what a jack-ass.. blew away so much second chances:(\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    }\n\t\t                    ]\n\n\t\tfor(var i = 0 ; i < peelDemoData.length ; i++)\n\t\t{\n\t\t\tvar peelPost = peelDemoData[i];\n\t\t\tvar fakePost = new Object();\n\t\t\tfakePost.postID = i;\n\t\t\tvar minimumCharacterCount = 20\n\t\t\tvar randomCharacterCount = minimumCharacterCount + Math.round(Math.random() * (loremIpsum.length - minimumCharacterCount));\n\t\t\t// console.log(\"random character count: \" + randomCharacterCount);\n\t\t\tvar loremIpsumSubstring = loremIpsum.substring(0, randomCharacterCount);\n\t\t\t// console.log(\"-> \" + loremIpsumSubstring);\n\t\t\tfakePost.postContent = peelPost.postContent;//loremIpsumSubstring\n\t\t\tvar postType = peelPost.type;//postTypes[Math.floor(Math.random() * postTypes.length)];\n\t\t\tfakePost.postType = postType;\n\t\t\tif(postType == \"photo\")\n\t\t\t{\n\t\t\t\tvar fakePhoto = fakePhotos[usedFakePhotos % fakePhotos.length];\n\t\t\t\tfakePost.photo = fakePhoto;\n\t\t\t\t// peelPost.photo = peelPost.postMedia\n\t\t\t\tusedFakePhotos++;\n\t\t\t}\n\t\t\telse if(postType == \"video\")\n\t\t\t{\n\t\t\t\tvar fakeVideo = fakeVideos[usedFakeVideos % fakeVideos.length];\n\t\t\t\tfakePost.video = fakeVideo;\n\t\t\t\t// peelPost.video = peelPost.postMedia\n\t\t\t\tusedFakeVideos++;\n\t\t\t}\n\n\t\t\tvar author = postAuthors[i % postAuthors.length];\n\t\t\tfakePost.postAuthorPhoto = author.photo;\n\t\t\tpeelPost.postAuthorPhoto = author.photo;\n\t\t\tfakePost.postAuthorName = author.name;\n\t\t\tpeelPost.postAuthorName = author.name;\n\n\t\t\tfakePost.likeCount = Math.floor(Math.random() * 100);\n\t\t\tpeelPost.likeCount = Math.floor(Math.random() * 100);\n\t\t\tfakePost.commentCount = Math.floor(Math.random() * 500);\n\t\t\tpeelPost.commentCount = Math.floor(Math.random() * 500);\n\n\t\t\t// console.log(\"fake post \" + i + \" :  \" + JSON.stringify(fakePost));\n\t\t\t// console.log(\"fake post \" + i + \" :  \" + JSON.stringify(peelPost));\n\n\t\t\t// staticPosts.push(fakePost);\n\t\t\tstaticPosts.push(peelPost);\n\t\t}\n\t\treturn staticPosts\n\t}\n\n\tfunction getRepliesForPostID()\n\t{\n\t\t/*\n\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"0\",\n\t\t\t\t\t\t\"replyContent\":\"reply A\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"1\",\n\t\t\t\t\t\t\"replyContent\":\"reply B\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"2\",\n\t\t\t\t\t\t\"replyContent\":\"reply C\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"3\",\n\t\t\t\t\t\t\"replyContent\":\"reply D\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"4\",\n\t\t\t\t\t\t\"replyContent\":\"reply E\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t */\n\n\t\tvar fakeReplies = [];\n\t\tfor(var i = 0 ; i < 10 ; i++)\n\t\t{\n\t\t\tvar fakeReply = new Object();\n\t\t\tfakeReply.postID = i;\n\t\t\tvar minimumCharacterCount = 20\n\t\t\tvar randomCharacterCount = minimumCharacterCount + Math.round(Math.random() * (loremIpsum.length - minimumCharacterCount));\n\t\t\t// console.log(\"random character count: \" + randomCharacterCount);\n\t\t\tvar loremIpsumSubstring = loremIpsum.substring(0, randomCharacterCount);\n\t\t\t// console.log(\"-> \" + loremIpsumSubstring);\n\t\t\tfakeReply.replyContent = loremIpsumSubstring\n\t\t\tfakeReply.replyType = \"text\";\n\n\t\t\tvar author = postAuthors[i % postAuthors.length];\n\t\t\tfakeReply.postAuthorPhoto = author.photo;\n\t\t\tfakeReply.postAuthorName = author.name;\n\n\t\t\tfakeReply.likeCount = Math.floor(Math.random() * 100);\n\t\t\tfakeReply.commentCount = Math.floor(Math.random() * 500);\n\n\t\t\t// staticPosts.push(fakePost);\n\t\t\tfakeReplies.push(fakeReply);\n\t\t}\n\n\t\treturn fakeReplies\n\t}\n\t\n\treturn{\n\tgetPostsForTopicID:getPostsForTopicID,\n\tgetRepliesForPostID:getRepliesForPostID\n\t}\n});","angular.module('NetworkModule')\n.factory('FDSUtility', function () {\n\t\n\tfunction getStructureById(array, id){\n\t\tif(NETWORK_DEBUG) console.log(\"structureLengths :\"+ array.length);\n\t\tfor(i=0;i<array.length;i++){\n\t\t\tif(array[i].id == id){\n\t\t\t\treturn array[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getIndexById(array, id){\n\t\tif(NETWORK_DEBUG) console.log(\"structureLengths :\"+ array.length);\n\t\tfor(i=0;i<array.length;i++){\n\t\t\tif(array[i].id == id){\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t\n\tfunction isLikedById(array, id){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.like :\"+ tempStructure.signal.like);\n\t\t\tif(tempStructure.signal.like == true){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction isFlaggedById(array, id){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.flag :\"+ tempStructure.signal.flag);\n\t\t\tif(tempStructure.signal.flag == true){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t}\n\t\treturn false;\n\t}\n\n\t\n\tfunction flagById(array, id, flag){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.flag :\"+ tempStructure.signal.flag);\n\t\t\ttempStructure.signal.flag = flag;\n\t\t\t}\n\t}\n\t\n\t\n\tfunction deleteById(array, id){\n\t\tvar index = getIndexById(array,id);\n\t\t\n\t\tif(index != -1){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element at:\"+index );\n\t\t\tarray.splice(index,1);\n\t\t\t}\n\t\treturn array;\n\t}\n\n\treturn {\n\t\tisLikedById:isLikedById,\n\t\tisFlaggedById:isFlaggedById,\n\t\tflagById:flagById,\n\t\tdeleteById:deleteById\n\t\t\n\t\t\n\t};\n\n});","angular.module('MediaModule', ['angularFileUpload', 'NetworkModule', 'TopicModule'])\n.factory('MUService',  function () {\n\tvar POST_COMMENT_URI=\"/v1.0/comment/create\";\n\tvar POST_REPLY_URI=\"/v1.0/reply/create\";\n\tvar isComment = true;\n\tvar commentText = \"\";\n\tvar topicId = \"\";\n\tvar commentId = \"\";\n\tvar replyId = \"\";\n\n\tfunction commentPostRequest(){\n\t\tvar createCommentParams = {\"rid\": \"comment\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(POST_COMMENT_URI)};\n\t\tcreateCommentParams.data =\n\t\t{\n\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\"topicId\": topicId,\n\t\t};\n\t\tif(!isComment){\n\t\t\tcreateCommentParams = {\"rid\": \"reply\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(POST_REPLY_URI)};\n\t\t\tcreateCommentParams.data =\n\t\t\t{\n\t\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\t\"topicId\": topicId,\n\t\t\t};\n\t\t\tcreateCommentParams.data.target = {\n\t\t\t\t\t\"type\": \"comment\", // Target type: “comment” or “reply”.\n\t\t\t\t\t\"id\": commentId,  // Target bant ID of comment or reply.\n\t\t\t};\n\n\t\t\tcreateCommentParams.data.commentId = commentId;\n\t\t}\n\t\treturn createCommentParams;\n\t}\n\n\tfunction setCommentParams(tId,text,isCom,comId,repId){\n\t\tif (text === undefined){\n\t\t\ttext = \"\";\n\t\t}\n\t\tconsole.log(\"Setting Comment Params: \", tId, text, isCom, comId, repId);\n\t\ttopicId = tId;\n\t\tcommentText = text;\n\t\tisComment = isCom;\n\t\t\n\t\tcommentId = comId;\n\t\treplyId = repId;\n\t}\n\n\tfunction postMediaRequest(mediaData){\n\t\tvar m = {\"media\":[mediaData]};\n\t\tvar sections = [];\n\t\tif(commentText !== undefined){\n\t\t\tsections.push({\"type\": \"html\",\"html\":commentText});\n\t\t}\n\t\tsections.push({\"type\": \"media\", \"media\" : m.media});\n\n\t\tvar createCommentParams = commentPostRequest();\n\t\t\n\t\tvar content =  {\"sections\": sections};\n\t\tcreateCommentParams.data.content = content;\n\t\tconsole.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n\t\treturn createCommentParams;\n\t}\n\treturn {\n\t\tpostMediaRequest:postMediaRequest,\n\t\tsetCommentParams:setCommentParams,\n\t\tresetCommentParams:function(){\n\t\t\ttopicId = \"\";\n\t\t\tcommentId = \"\";\n\t\t\tcommentText = \"\";\n\t\t}\n\t}\n});\n"],"sourceRoot":"/source/"}