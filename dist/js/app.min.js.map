{"version":3,"sources":["Forum.js","ChannelController.js","AuthController.js","TopicController.js","ChatController.js","VideoController.js","SocialController.js","UserInputController.js","UserAgentService.js","NetworkService.js","ForumStorage.js","ForumDeviceInfo.js","URIHelper.js","ChannelService.js","Scorecard.js","TopicDirectives.js","EmbedPlayer.js","ImageControl.js","DataService.js","TopicService.js","VideoService.js","SocialService.js","SplashService.js","CommentService.js","DateUtilityService.js","Bant.js","UserInfoService.js","AuthService.js","StaticData.js","ForumDSUtility.js","MediaUploadService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$locationProvider","state","url","templateUrl","controller","abstract","deepStateRedirect","views","topic-tab-view","controllerAs","otherwise","window","history","pushState","HTML5_LOC","html5Mode","enabled","run","$state","$rootScope","filter","$filter","$sce","text","target","replacedText","targetAttr","isDefined","replacePattern1","replace","replacePattern2","trustAsHtml","$scope","$stateParams","$window","$location","networkService","ChannelService","TopicService","URIHelper","AuthService","UserInfoService","setChannel","channelID","NETWORK_DEBUG","console","log","init","send","getLiveGameTopic","updateTopic","id","getLiveTopicId","undefined","paramsObj","topicID","tab","go","registerObserverCallback","isUserLoggedIn","smartStadium","isSmartStadiumUser","loginWithEmail","MI16","MWC","isPeelUser","loginWithPeel","loginAsGuest","$http","ReplyService","ForumDeviceInfo","showSpinner","showFacebookButton","mUserType","facebookUser","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","ga","loginToFacebook","techMLogin","name","email","isValid","submitted","fbAsyncInit","FB","appId","xfbml","version","getLoginStatus","response","status","registerParams","setRegistrationParams","authResponse","registerUser","focusMWC","$","animate","top","blurMWC","$sanitize","$timeout","CommentService","SplashService","MUService","ForumStorage","FileUploader","SocialService","UserAgentService","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","time","isMobileUser","mobileBrowser","mobileUserAgent","getMobileUserAgent","GEN_DEBUG","getChannel","setTopicId","topicType","innerButtonTapped","hideSSSplash","setToLocalStorage","continueToExperience","isMI16User","isMWCUser","hasUserVisited","hidePeelSplash","env","setPeelSplash","setSSSplash","setScoreCardUI","css","getTopic","getTopicType","isWatchingTopic","getFollowChannelRequest","watchTopicRequest","getTeamA","leftTeam","rightTeam","getTeamB","score","getScore","leftTeamScore","points","rightTeamScore","gameStatus","getGameStatus","gamePeriod","getGamePeriod","gameClock","getGameClock","gameScheduledTime","getGameTime","allScoresTitle","getScoresTitle","allScoresURL","getScoresLink","left","right","pColor","topicTitle","getTitle","thisTopic","topicDescHtml","html","type","topicMediaUrl","mediaUrl","topicMediaAspectFeed","mediaAspectFull","createdAt","getTimeCreatedAt","liked","getLiked","metrics","getMetrics","likesCount","likes","commentsCount","comments","getTopicRequest","setPeelUI","initPage","pageClass","style","paddingBottom","isSocketConnected","isTechMUser","peelClose","location","peelWatchOnTV","showId","getPeelShowId","newCommentsAvailable","showNewComments","$broadcast","imageClick","imageURL","event","cancelBubble","stopPropagation","magnificPopup","open","items","callbacks","bind","e","preventDefault","close","unbind","updateLikeTopic","getUnlikeTopicRequest","getLikeTopicRequest","commentOnTopic","focus","switchTabs","scrollTop","_channelId","tabs","tabContainer","tabsTop","tabsHeight","inputHeight","clientHeight","docHeight","headerHeight","docVarsSet","setDocVars","first","offset","height","documentElement","fixed","watchScroll","showNewCommentsIndicator","$apply","addClass","removeClass","off","on","getCommentsRequest","updateComments","commentsdata","length","lastComment","_this","commentsArray","loading","len","i","tempComment","postAuthorName","author","postAuthorPhoto","photo","isMyComment","isCurrentUser","likeCount","replyCount","replies","postTimestamp","mediaAspectFeed","mediaAspectRatio","mediaOrientation","mediaThumbUrl","isLiked","signal","like","shared","embed","embedCreatedAt","embedCreatedAtFull","embedType","embedMedia","providerName","embedLogo","provider","logo","playable","embedHtml","push","notifyNewComments","commentsData","pinIndex","getNumPinComments","$parent","loadRemainingComments","loadedComments","setLoadedComments","loadedAllComments","doneLoading","$on","trustSrc","trustAsResourceUrl","viewPost","is","postParams","postID","replyDirectToPost","directComment","updateLikeComment","isCommentLiked","getUnlikeCommentRequest","getLikeCommentRequest","deleteComment","deleteCommentRequest","reportCommentAsSpam","flagCommentRequest","VideoService","DateUtilityService","updateFeed","feedData","existingLength","tabArray","videoArray","tempItem","itemExists","j","embedAuthor","postAuthorAlias","alias","tweetId","tweet","embedProvider","embedText","retweetCount","providerLogo","embedUrl","embedPlayable","mediaType","loadingVideo","updateTimestamps","getTimeSince","createdAtFull","resetVideoOffset","loadContent","getChannelId","getVideoDataRequest","innerHeight","watchContentScroll","includes","currentScroll","retweetPost","method","headers","Access-Control-Allow-Origin","shareTweetToChat","embedShareContent","showShareDialog","fullClient","submitSharedPost","commentData","embedData","postCommentRequestForShare","shareToFacebook","ui","href","exitShare","highlightPost","unhighlightPost","secureLink","isGuestUser","socialArray","loadingSocial","resetSocialOffset","getSocialDataRequest","generateImagePreview","evt","f","files","match","previewSrc","reader","FileReader","onload","theFile","span","innerHTML","result","join","dontAdd","readAsDataURL","MUS_SERVER_URI","DEV_BUILD","UPLOAD_URL","uploader","autoUpload","removeAfterUpload","queueLimit","isHTML5","filters","fn","item","options","itemType","indexOf","queue","size","addEventListener","removeMedia","clearQueue","wrap","closest","get","reset","unwrap","fileMaxExceeded","onWhenAddingFileFailed","info","HTML5warning","onAfterAddingFile","fileItem","onAfterAddingAll","addedFileItems","onBeforeUploadItem","user","getUserCredentials","X-UserId","userId","X-SessionId","sessionId","X-AccessToken","accessToken","formData","_file","file","onProgressItem","progress","onProgressAll","onSuccessItem","postMediaRequest","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","resetCommentParams","postComment","commentText","isComment","setCommentParams","topicId","postCommentRequest","getPostReplyRequest","uploadAll","blur","scrollTo","body","scrollHeight","mobileHighlightPost","mobileUnhighlightPost","factory","agent","test","navigator","userAgent","MSStream","_userAgent","check","a","substr","vendor","opera","isUserAgent","$websocket","DataService","initSocket","getWebsocketUri","socketUri","WEBSOCKET_BASE_URI","ws","setWatchTopic","onOpen","onClose","data","onMessage","responseJson","JSON","parse","rid","setTopic","setComments","setReplies","setSocial","setVideo","onError","stringify","disconnectSocket","reconnectSocket","reload","readyState","OPEN","message","key","value","localStorage","localStorageAvailable","setItem","getFromLocalStorage","getItem","clearStorage","clear","_p8","p","Math","random","toString","generateUUID","uuid","getDeviceId","peelUserName","peelUserId","peelShowId","ssUserName","ssUserId","_MI16","_MWC","peel","userName","getPeelUserId","getPeelUserName","getPeelParams","search","substring","getSSUserId","getSSUserName","Bant","FDSUtility","setTopicData","topicData","_liveTopicId","notifyObservers","channelId","reqChannelId","uri","topicParams","timestamp","Date","getTime","callback","callbackLength","observerCallbacks","pop","forEach","directive","restrict","link","$elem","$attrs","element","$eval","secureClick","secureFocus","$element","$last","repeatFinishedNotify","scope","thisPost","trustSource","elem","attr","vidIndex","setYOffset","video","y","setXOffset","x","firstElementChild","childNodes","loadingSpinner","className","zIndex","canPlay","togglePlayPause","thesePlayerNodes","thisVideo","thisThumbnail","thisPlayBtn","thisLoading","paused","ended","play","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","pause","setAspectRatio","aspectRatio","orientation","classStrings","setDimensions","thisWidth","width","styleObj","priority","$attributes","ngElementReady","trustSrcHtml","iframePlayer","setOffsets","image","direction","ref","offsetScale","h","scaledY","w","scaledX","thisImage","service","delegateSetComments","error","updateComment","updateCommentCount","commentId","slice","DATA_BANT_ID_LENGTH","appendToComments","updateCommentLocalData","delegateSetTopic","removeTopic","delegateSetReplies","replyData","updateReply","updateReplyCountById","appendToReplies","getCommentIdByReply","updateReplyLocalData","delegateSetChannel","delegateSetSocial","setSocialData","delegateSetVideo","setVideoData","watched","content","_title","title","_topicType","_id","_game","game","_scheduledAt","getGameScheduledTime","scheduledAt","_score","live","_status","_gameStats","_topic","bant","WATCH_TOPIC_URI","_isTopicWatched","LIKE_TOPIC_URI","updateBantLiked","UNLIKE_TOPIC_URI","updateTopicData","scoreData","setScoreData","TOPIC_BASE_URI","varTopicParams","encodeURI","owner","likeTopicRequest","varLikeParams","unlikeTopicRequest","getTopicId","getGame","teams","links","getHtml","watch","videoData","_videoArray","tempData","results","_videoObject","_offset","nextOffset","reqOffset","request","LIST_SOCIAL_URI","LIMIT","socialData","_socialArray","_socialObject","_hidePeelSplash","_hideSSSplash","val","_comments","tempCommentsData","_commentObject","SHOW_COMMENT_URI","postCommentData","media","pin","_pinnedComments","splice","unshift","commentObj","updateLocalData","newData","updateLikeCommentWithId","tempObject","getCommentById","removeComment","temp","tempObserverCallbacks","commentGetRequest","commentPostRequest","LIST_COMMENTS_URI","getCommentByIdRequest","createCommentParams","POST_COMMENT_URI","lang","sections","postCommentRequestForMedia","mediaData","m","likeCommentRequest","LIKE_COMMENT_URI","unlikeCommentRequest","UNLIKE_COMMENT_URI","FLAG_COMMENT_URI","DELETE_COMMENT_URI","isLikedById","tempStructure","deleteById","flagById","UNFLAG_COMMENT_URI","HIDE_COMMENT_URI","hideById","UNHIDE_COMMENT_URI","_loadedComments","timeSince","timeStamp","now","createdDate","secondsPast","parseInt","daysPassed","floor","day","getDate","month","toDateString","year","getFullYear","gameScheduleTime","date_format","getMonth","hour","getHours","minutes","getMinutes","ext","timeZone","toLocaleString","timeZoneName","split","date","extractMediaObject","_bantObject","tempMedia","EXTRACT_MEDIA_TYPE_LENGTH","thumbUrl","sizes","mediaAspect16x9","mediaAspect1x1","mediaAspect2x1","extractEmbedObject","embedObject","embedTitle","embedMetrics","embedMini","mini","sectionsLength","ogp","likeObject","_userInfo","userInfoTemp","setUserCredentials","userType","_isUserLoggedIn","ssUser","MI16User","MWCUser","getUserType","userLoggedInToFacebook","userData","login","utcOffset","deviceId","locale","deviceType","deviceModel","appKey","appVersion","facebook","userID","post","REGISTER_SERVER_URI","then","initializeContent","initChannel","initTopic","initParams","initPost","getPostId","getPostsForTopicID","staticPosts","fakePhotos","usedFakePhotos","fakeVideos","usedFakeVideos","peelDemoData","postContent","postMedia","peelPost","fakePost","Object","minimumCharacterCount","randomCharacterCount","round","loremIpsum","postType","fakePhoto","fakeVideo","postAuthors","commentCount","getRepliesForPostID","fakeReplies","fakeReply","loremIpsumSubstring","replyContent","replyType","getStructureById","array","getIndexById","isFlaggedById","flag","index","POST_REPLY_URI","tId","isCom","comId","repId","replyId"],"mappings":"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","file":"app.min.js","sourcesContent":["angular.module(\"Forum\", [\"ui.router\",\"ngSanitize\",\"AuthModule\",\"ChannelModule\",\"TopicModule\",\"ChatModule\",\"PostModule\",\"NetworkModule\",\"MediaModule\",\"VideoModule\",\"SocialModule\",\"UserInput\",\"SmartStadiumModule\"])\n.config([\"$stateProvider\", \"$urlRouterProvider\", \"$locationProvider\",\nfunction ($stateProvider, $urlRouterProvider, $locationProvider) {\n  \n  $stateProvider\n  .state('login', {\n    url: '/login?tab&MI16&MWC',\n    templateUrl:'partials/facebookLogin.html',\n    controller:'AuthController'\n  })\n  .state('channel', {\n    url: '/channel/:channelID?tab&peel&userId&userName&showId&smartStadium&MI16&MWC',\n    templateUrl:'partials/login.html',\n    controller:'ChannelController'\n  })\n  .state('topic', {\n    url: '/topic/:topicID?peel&userId&userName&showId&smartStadium&MI16&MWC',\n    abstract: true,\n    templateUrl:'partials/topic.html',\n    controller:'TopicController'\n  })\n    .state('topic.chat', {\n      url: '',\n      deepStateRedirect: true,\n      views: {\n        'topic-tab-view': {\n          templateUrl:'partials/chat.html',\n          controller: 'ChatController',\n          controllerAs: 'chat'\n        }\n      }\n    })\n    .state('topic.video', {\n      url: '/video',\n      deepStateRedirect: true,\n      views: {\n        'topic-tab-view': {\n          templateUrl:'partials/video.html',\n          controller: 'VideoController',\n          controllerAs: 'video'\n        }\n      }\n    })\n    .state('topic.social', {\n      url: '/social',\n      deepStateRedirect: true,\n      views: {\n        'topic-tab-view': {\n          templateUrl:'partials/social.html',\n          controller: 'SocialController',\n          controllerAs: 'social'\n        }\n      }\n    })\n  .state('post', {\n    url: '/post/:postID?channel&peel&userId&userName&showId&smartStadium&MI16&MWC',\n    templateUrl:'partials/post.html',\n    controller:'PostController'\n  })\n  .state('invalid', {\n    url: 'invalidTopic',\n    templateUrl:'partials/invalidTopic.html'\n  })\n\n  $urlRouterProvider.otherwise('invalid');\n\n  if (window.history && window.history.pushState && HTML5_LOC){\n    $locationProvider.html5Mode({\n      enabled:true\n    });\n  }\n}])\n\n.run(['$state','$rootScope',function ($state, $rootScope) {\n  $rootScope.$state = $state;\n}])\n\n.filter('hashtags',['$filter', '$sce',\n  function ($filter, $sce) {\n    return function(text, target) {\n      if (!text) return text;\n\n      var replacedText = $filter('linky')(text, target);\n      var targetAttr = \"\";\n      if (angular.isDefined(target)) {\n          targetAttr = ' target=\"' + target + '\"';\n      }\n      // replace #hashtags and send them to twitter\n      var replacePattern1 = /(^|\\s)#(\\w*[a-zA-Z_]+\\w*)/gim;\n      replacedText = text.replace(replacePattern1, '$1<a href=\"https://twitter.com/search?q=%23$2\"' + targetAttr + '>#$2</a>');\n      // replace @mentions but keep them to our site\n      var replacePattern2 = /(^|\\s)\\@(\\w*[a-zA-Z_]+\\w*)/gim;\n      replacedText = replacedText.replace(replacePattern2, '$1<a href=\"https://twitter.com/$2\"' + targetAttr + '>@$2</a>');\n\n      $sce.trustAsHtml(replacedText);\n      return replacedText;\n  };\n}]);\n","angular.module(\"ChannelModule\", [\"NetworkModule\", \"AuthModule\"])\n.controller(\"ChannelController\", [\"$scope\", \"$state\", \"$stateParams\", \"$window\",\"$location\",\"$sce\",\"networkService\", \"ChannelService\",\"TopicService\",\"URIHelper\",\"AuthService\",\"UserInfoService\",\n\nfunction ($scope,$state,$stateParams,$window,$location,$sce,networkService,ChannelService,TopicService, URIHelper, AuthService, UserInfoService)\n{\n  ChannelService.setChannel($stateParams.channelID);\n  if (NETWORK_DEBUG) console.log(\"State Params in Channel: \", $stateParams);\n  \n  $scope.init = function() {\n    console.log(\"Init all connections\");\n    networkService.init();\n    networkService.send(ChannelService.getLiveGameTopic($stateParams.channelID));\n  };\n  \n  var updateTopic = function(){\n    var id = ChannelService.getLiveTopicId();\n    if(id !== undefined){\n      if (NETWORK_DEBUG) console.log(\"Got Topic ID from Channel: \", id);\n      var paramsObj = $stateParams;\n      paramsObj.topicID = id;\n      if (NETWORK_DEBUG) console.log(\"Go to Topic w/ Params: \", paramsObj);\n      if ($stateParams.tab === 'video'){\n        delete $stateParams.tab;\n        $state.go(\"topic.video\", paramsObj);\n      } else if ($stateParams.tab === 'social'){\n        delete $stateParams.tab;\n        $state.go(\"topic.social\", paramsObj);\n      } else {\n        delete $stateParams.tab;\n        $state.go(\"topic.chat\", paramsObj);\n      }\n    }\n\n  };\n\n  ChannelService.registerObserverCallback(updateTopic);\n  \n  if(UserInfoService.isUserLoggedIn()){\n    if(NETWORK_DEBUG)\n      console.log(\"User is logged in, checking for connection\");\n    $scope.init();\n  }\n  else if ($stateParams.smartStadium){\n    $scope.isSmartStadiumUser = true;\n    AuthService.loginWithEmail();\n  }\n  else if ($stateParams.MI16){\n    console.log(\"MI16 User Detected\");\n    $state.go('login', $stateParams);\n  }\n  else if ($stateParams.MWC){\n    console.log(\"MWC User Detected\");\n    $state.go('login', $stateParams);\n  }\n  else {\n    if(URIHelper.isPeelUser()){\n      $scope.isPeelUser = true;\n      AuthService.loginWithPeel();\n    }\n    else{\n      AuthService.loginAsGuest();\n    }\n  }\n\n}]);\n","angular.module(\"AuthModule\", [\"NetworkModule\", \"TopicModule\"])\n.controller(\"AuthController\", [\"$scope\", \"$stateParams\", \"$http\", \"AuthService\", \"UserInfoService\", \"TopicService\", \"ReplyService\", \"networkService\",\"ForumDeviceInfo\", \"ChannelService\", \"URIHelper\",\n  function ($scope, $stateParams, $http, AuthService, UserInfoService, TopicService, ReplyService, networkService, ForumDeviceInfo, ChannelService, URIHelper) {\n\n    if ($stateParams.MI16){\n      $scope.mUserType = 'MI16';\n    }\n    else if ($stateParams.MWC){\n      $scope.mUserType = 'MWC';\n    } else {\n      $scope.facebookUser = true;\n    }\n\n    if ($scope.facebookUser){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n      ga('send', 'pageview', 'Facebook Landing');\n    }\n    else {\n      ga('send', 'pageview', 'Tech MI16 Landing');\n    }\n    // FACEBOOK AUTH SECTION\n    $scope.showFacebookButton = true;\n\n    function showSpinner() {\n      $scope.showFacebookButton = false;\n    }\n\n    $scope.loginToFacebook = function() {\n      AuthService.loginToFacebook(showSpinner);\n    };\n\n    $scope.techMLogin = function(name, email, isValid) {\n      if (isValid){\n        AuthService.techMLogin(name, email, $scope.mUserType);\n      }\n      $scope.submitted = true;\n    };\n\n    // load Facebook SDK and initialize\n    // TBD: may want to move this initialization to the run cycle instead of in controller\n    window.fbAsyncInit = function() {\n      \n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n\n      FB.getLoginStatus(function (response) {\n\n        // User is logged in to Facebook and authenticated our app\n        // response.authResponse contains user auth information\n        if (response.status === 'connected') {\n          $scope.showFacebookButton = false;\n          var registerParams = AuthService.setRegistrationParams(\"facebook\", -25200, response.authResponse);\n          AuthService.registerUser(registerParams);\n        }\n        // User is logged in to Facebook but hasn't authenticated our app\n        else if (response.status === 'not_authorized') {\n          // FB.login();\n          $scope.showFacebookButton = false;\n          $scope.loginToFacebook();\n        }\n        // User not logged in to Facebook\n        else {\n          $scope.showFacebookButton = true;\n        }\n\n      });\n\n    };\n\n    $scope.focusMWC = function() {\n      $('#techLoginContainer').animate({'top':'-40px'},100);\n    };\n\n    $scope.blurMWC = function() {\n      $('#techLoginContainer').animate({'top':''},100);\n    };\n    \n}]);","angular.module(\"TopicModule\", [\"NetworkModule\", \"SplashModule\", \"AuthModule\", \"MediaModule\", \"angularFileUpload\",\"SocialModule\"])\n.controller(\"TopicController\", [\"$scope\", \"$state\", \"$stateParams\", \"$sce\", \"$window\", \"$location\",\"$sanitize\", \"$timeout\", \"networkService\", \"TopicService\",\"CommentService\", \"UserInfoService\",\"URIHelper\",\"AuthService\",\"SplashService\",\"MUService\",\"ForumStorage\",\"FileUploader\",\"SocialService\",\"ChannelService\",\"UserAgentService\",\n\nfunction ($scope, $state, $stateParams, $sce, $window, $location, $sanitize, $timeout, networkService,TopicService, CommentService, UserInfoService, URIHelper, AuthService, SplashService,MUService,ForumStorage,FileUploader,SocialService, ChannelService, UserAgentService)\n{\n  var sessionTime = window.time;\n  // Check For Mobile Browser\n  if (UserAgentService.isMobileUser()){\n    $scope.mobileBrowser = true;\n    $scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n    if (GEN_DEBUG) console.log(\"MOBILE USER AGENT: \", $scope.mobileUserAgent);\n  } else {\n    $scope.mobileBrowser = false;\n  }\n\n  //Google Analytics code\n  if((ChannelService.getChannel() == undefined ) && (TopicService.getChannel() == undefined)){\n    ga('send', 'pageview', \"/topic/\", $stateParams.topicID);\n    if (GEN_DEBUG)\n    console.log('Sent Pageview from /topic/', $stateParams.topicID);\n  }\n  \n  TopicService.setTopicId($stateParams.topicID);\n  $scope.topicType = \"livegame\";\n  $scope.innerButtonTapped = false;\n  if (UserInfoService.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    // if (!UserInfoService.hasUserVisited()){\n      console.log('SS USER HASNT VISITED');\n      $scope.hideSSSplash = false;\n      ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n      $timeout(function() {$scope.continueToExperience('smartS'); }, 5000);\n    // }\n  }\n  else if ($stateParams.MI16 || UserInfoService.isMI16User()){\n    $scope.isMI16User = true;\n  }\n  else if ($stateParams.MWC || UserInfoService.isMWCUser()){\n    $scope.isMWCUser = true;\n  }\n  else if(UserInfoService.isPeelUser()){\n    $scope.isPeelUser = true;\n    if (!UserInfoService.hasUserVisited()){\n      console.log('PEEL USER HASNT VISITED');\n      $scope.hidePeelSplash = false;\n      ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n      $timeout(function() {$scope.continueToExperience('peel'); }, 5000);\n    }\n  }\n  else {\n    $scope.isPeelUser = false;  \n    $scope.hidePeelSplash = true;\n    $scope.hideSSSplash = true;\n  }\n\n  $scope.continueToExperience = function(env) {\n    console.log(\"CONTINUE XP CLICKED\");\n    if (env === 'peel'){\n      SplashService.setPeelSplash(true);\n      $scope.hidePeelSplash = true;\n    } else if (env === 'smartS'){\n      SplashService.setSSSplash(true);\n      $scope.hideSSSplash = true;\n    }\n  };\n\n  $scope.setScoreCardUI = function() {\n    if ($scope.topicType === 'livegame'){\n      if ($scope.isPeelUser){\n        $('#topicSection').css('padding-top','54px');\n      } else if ($scope.isSmartStadiumUser){\n        $('#topicSection').css('padding-top','54px');\n      } else {\n        $('#topicSection').css('padding-top','0px');\n      }\n    }\n  };\n  \n  var updateTopic = function(){\n    if(TopicService.getTopic() !== undefined){\n      $scope.topicType = TopicService.getTopicType();\n      if(TopicService.isWatchingTopic() === false){\n        networkService.send(TopicService.getFollowChannelRequest());\n        networkService.send(TopicService.watchTopicRequest($stateParams.topicID));\n      }\n      \n      $scope.setScoreCardUI();\n      if($scope.topicType == \"livegame\"){\n        console.log(\"Inside topic set :\", TopicService.getTeamA());\n        $scope.leftTeam = TopicService.getTeamA();\n        $scope.rightTeam = TopicService.getTeamB();\n        var score = TopicService.getScore();\n        if(score != undefined){\n          $scope.leftTeamScore = score.points[0];\n          $scope.rightTeamScore = score.points[1];\n        }\n        $scope.gameStatus = TopicService.getGameStatus();\n\n        if($scope.gameStatus == \"live\") {\n          $scope.gamePeriod = TopicService.getGamePeriod();\n          $scope.gameClock = TopicService.getGameClock();\n        }\n\n        $scope.gameScheduledTime = TopicService.getGameTime();\n        $scope.allScoresTitle = TopicService.getScoresTitle();\n        $scope.allScoresURL = TopicService.getScoresLink();\n\n        var left = $('.scoreCardContent');\n        var right = $('.svg-content');\n        left.css('background-color', $scope.leftTeam.pColor);\n        right.css('fill', $scope.rightTeam.pColor);\n      }\n      $scope.topicTitle = TopicService.getTitle();\n      var thisTopic = TopicService.getTopic();\n      $scope.topicDescHtml = thisTopic.html;\n      if(thisTopic.type == \"media\"){\n      $scope.topicMediaUrl = thisTopic.mediaUrl;\n      $scope.topicMediaAspectFeed = thisTopic.mediaAspectFull;\n      }\n\n      $scope.createdAt = TopicService.getTimeCreatedAt();\n      $scope.liked = TopicService.getLiked();\n      var metrics = TopicService.getMetrics();\n      $scope.likesCount = metrics.likes;\n      $scope.commentsCount = metrics.comments;\n\n    }\n  };\n          \n  $scope.init = function() {\n    networkService.send(TopicService.getTopicRequest($stateParams.topicID));\n  };\n\n  $scope.setPeelUI = function(isPeelUser){\n    $scope.isPeelUser = isPeelUser;\n    \n  };\n  \n  $scope.setPeelUI($scope.isPeelUser);\n\n  $scope.initPage = function(){\n    updateTopic();\n    $scope.pageClass = 'page-topic';\n\n    $scope.topicID = $stateParams.topicID;\n    $scope.init();\n\n    if ($scope.mobileBrowser === true){\n      document.getElementById('topicSection').style.paddingBottom = \"42px\";\n    }\n  };\n\n  if(UserInfoService.isUserLoggedIn()){\n    if(NETWORK_DEBUG)\n      console.log(\"User is logged in, checking for connection\");\n    if(!networkService.isSocketConnected())\n      networkService.init();\n    $scope.initPage();\n  }\n  else if (URIHelper.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    console.log(\"SS User? \", $scope.isSmartStadiumUser);\n    AuthService.loginWithEmail();\n  }\n  else if (URIHelper.isTechMUser()){\n    $state.go('login', $stateParams);\n  }\n  else if (URIHelper.isMWCUser()){\n    $state.go('login', $stateParams);\n  }\n  else if (URIHelper.isPeelUser()){\n    $scope.isPeelUser = true;\n    $scope.setPeelUI(true);\n    AuthService.loginWithPeel();\n  }\n  else {\n    AuthService.loginAsGuest();\n  }\n\n\n  $scope.peelClose = function()\n  {\n    ga('send', 'event', 'Peel', 'click', 'BackToPeelHome');\n    console.log(\"peelClose()\");\n    window.location = \"peel://home\";\n  }\n\n  $scope.peelWatchOnTV = function()\n  {\n    ga('send', 'event', 'Peel', 'click', 'PeelWatchOnTV');\n    console.log(\"peelWatchOnTV()\");\n    var showId = URIHelper.getPeelShowId();\n    console.log(\"Peel show on TV uri :  \"+ \"peel://tunein/\"+showId);\n    if(showId != undefined)\n      window.location = \"peel://tunein/\"+showId;\n    else\n      window.location = \"peel://home\";\n  }\n\n  $scope.newCommentsAvailable = false;\n  $scope.showNewComments = function() {\n    // Broadcast to Chat Controller\n    $scope.$broadcast('viewNewComments');\n  };\n\n  $scope.imageClick = function(imageURL) {\n    event.cancelBubble = true;\n    if(event.stopPropagation) event.stopPropagation();\n\n    $.magnificPopup.open({\n      items: {\n        type:'image',\n        src: imageURL,\n      },\n      type: 'inline',\n      callbacks: {\n        open: function(){\n          $('body').bind('touchmove', function(e){e.preventDefault()})\n        },\n        close: function(){\n          $('body').unbind('touchmove')\n        }\n      }\n    });\n  };\n\n  $scope.updateLikeTopic = function() {\n    console.log(\"TopicController update like Topic\");\n    if(TopicService.getLiked() == true)\n      networkService.send(TopicService.getUnlikeTopicRequest());\n    else\n      networkService.send(TopicService.getLikeTopicRequest());  \n  };\n\n  $scope.commentOnTopic = function() {\n    document.getElementById(\"topicCommentField\").focus();\n  };\n\n  TopicService.registerObserverCallback(updateTopic);\n\n  // CONTENT TABS\n  $scope.switchTabs = function(tab) {\n    if (tab === 'chat'){\n      // $('#chatTab').addClass('selectedTab');\n      // $('#videoTab').removeClass('selectedTab');\n      // $('#socialTab').removeClass('selectedTab');\n      $state.go('topic.chat');\n      $(document).scrollTop(0);\n      updateTopic();\n    }\n    if (tab === 'video'){\n      // $('#chatTab').removeClass('selectedTab');\n      // $('#videoTab').addClass('selectedTab');\n      // $('#socialTab').removeClass('selectedTab');\n      $state.go('topic.video');\n      $(document).scrollTop(0);\n    }\n    if (tab === 'social'){\n      // $('#chatTab').removeClass('selectedTab');\n      // $('#videoTab').removeClass('selectedTab');\n      // $('#socialTab').addClass('selectedTab');\n      $state.go('topic.social');\n      $(document).scrollTop(0);\n    }\n  };\n\n  // $scope.initializeTab = function() {\n  //   console.log(\"Initializing Tabs\");\n  //   if ($state.includes(\"topic.chat\")){\n  //     console.log(\"In Chat\");\n  //     $('#chatTab').addClass('selectedTab');\n  //   }\n  //   else if ($state.includes(\"topic.video\")){\n  //     console.log(\"In Video\");\n  //     $('#videoTab').addClass('selectedTab');\n  //   }\n  //   else if ($state.includes(\"topic.social\")){\n  //     console.log(\"In Social\");\n  //     $('#socialTab').addClass('selectedTab');\n  //   }\n  // };\n\n  var _channelId = ChannelService.getChannel();\n  TopicService.setChannel(_channelId);\n\n  function debounce(func, wait, immediate) {\n    var timeout;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  };\n\n  var docVarsSet = false;\n  var tabs,\n      tabContainer,\n      tabsTop,\n      tabsHeight,\n      inputHeight,\n      clientHeight,\n      docHeight,\n      headerHeight;\n  $scope.setDocVars = function() {\n    // console.log(\"Setting Doc Vars\");\n    if (!docVarsSet){\n      tabs = $('#inputControls').first();\n      tabContainer = $('.tabContainer').first();\n      tabsTop = tabs.offset().top;\n      tabsHeight = tabContainer.height();\n      inputHeight = tabs.height();\n      clientHeight = document.documentElement.clientHeight;\n      docHeight = $(document).height();\n      if ($scope.isSmartStadiumUser){\n        headerHeight = 54;\n      } else if ($scope.isPeelUser){\n        headerHeight = 54;\n      } else {\n        headerHeight = 0;\n      }\n      docVarsSet = true;\n    }\n  };\n\n  var fixed = false;\n  var watchScroll = debounce(function() {\n    $scope.setDocVars();\n    if (GEN_DEBUG) console.log(\"Tabs Top: \", tabsTop);\n    if ($scope.showNewCommentsIndicator){\n      $scope.showNewCommentsIndicator = false;\n      $scope.$apply();\n    }\n      if ($(document).scrollTop() > (tabsTop - headerHeight) && (docHeight - clientHeight) > (tabsTop + inputHeight - tabsHeight)) {\n        tabs.addClass('fixTabsPeel');\n        tabs.css('top',headerHeight);\n        tabContainer.addClass('fixTabContainer');\n        $('.commentsContainer').css('padding-top',$('#inputControls').height());\n        fixed = true;\n      } else if (fixed) {\n        tabs.removeClass('fixTabsPeel');\n        tabs.css('top','');\n        tabContainer.removeClass('fixTabContainer');\n        $('.commentsContainer').css('padding-top','');\n        fixed = false;\n      }\n  }, 50);\n\n  $(document).off('scroll');\n  $(document).on('scroll', watchScroll);\n\n\n\n}]);\n\n","angular.module('ChatModule', ['NetworkModule','AuthModule','SocialModule'])\n.controller('ChatController', ['$scope','$state','$stateParams','$sce','$window','$timeout','CommentService','ChannelService','TopicService','networkService','URIHelper','UserInfoService','UserAgentService',\n  function ($scope,$state,$stateParams,$sce,$window,$timeout,CommentService,ChannelService,TopicService,networkService,URIHelper,UserInfoService,UserAgentService) {\n\n    // Chat Initialization\n    var _this = this;\n    var lastComment = false;\n    _this.newCommentsAvailable = false;\n\n\n    function init() {\n      if (NETWORK_DEBUG) console.log(\"Init Chat for Topic: \", $stateParams.topicID)\n      networkService.send(CommentService.getCommentsRequest($stateParams.topicID));\n    }\n\n    // Comment Loading\n    function updateComments(){\n      var commentsdata = CommentService.comments();\n      if (commentsdata != undefined && (commentsdata.length > 0 || lastComment === true)){\n        if (!_this.commentsArray){\n          _this.loading = true;\n        }\n        lastComment = false;\n        var len = commentsdata.length;\n\n        _this.commentsArray = [];\n\n        for(i=0;i<len;i++){\n          var tempComment = {};\n          tempComment = commentsdata[i];\n          tempComment.postAuthorName = commentsdata[i].author.name;\n          tempComment.postAuthorPhoto = commentsdata[i].author.photo;\n          tempComment.isMyComment = UserInfoService.isCurrentUser(commentsdata[i].author.id);\n\n          tempComment.likeCount = commentsdata[i].metrics.likes;\n          tempComment.replyCount = commentsdata[i].metrics.replies;\n\n          tempComment.postTimestamp = commentsdata[i].createdAt;\n          if (tempComment.type === 'media'){\n            tempComment.mediaUrl = commentsdata[i].mediaUrl;\n            tempComment.mediaAspectFeed = commentsdata[i].mediaAspectFeed;\n            tempComment.mediaAspectFull = commentsdata[i].mediaAspectFull;\n            tempComment.mediaAspectRatio = commentsdata[i].mediaAspectRatio;\n            tempComment.mediaOrientation = commentsdata[i].mediaOrientation;\n            tempComment.mediaThumbUrl = commentsdata[i].mediaThumbUrl;\n          }\n          tempComment.isLiked = commentsdata[i].signal.like;\n\n          if (tempComment.type === 'embed'){\n            tempComment.shared = true;\n            tempComment.embed = commentsdata[i].embed;\n            tempComment.embed.embedCreatedAt = commentsdata[i].embedCreatedAt;\n            tempComment.embed.embedCreatedAtFull = commentsdata[i].embedCreatedAtFull;\n            tempComment.embedType = commentsdata[i].embedType;\n            \n            if (tempComment.embedType === 'media' || tempComment.embedType === 'link'){\n              tempComment.mediaUrl = commentsdata[i].embedMedia.mediaUrl;\n              tempComment.mediaThumbUrl = commentsdata[i].embedMedia.mediaThumbUrl;\n              tempComment.mediaAspectFeed = commentsdata[i].embedMedia.mediaAspectFeed;\n              tempComment.mediaAspectFull = commentsdata[i].embedMedia.mediaAspectFull;\n              tempComment.mediaAspectRatio = commentsdata[i].embedMedia.mediaAspectRatio;\n              tempComment.mediaOrientation = commentsdata[i].embedMedia.mediaOrientation;\n            }\n\n            if (tempComment.providerName === \"Twitter\"){\n              tempComment.embed.embedLogo = \"img/twitterLogo@2x.png\";\n            } else {\n              tempComment.embed.embedLogo = commentsdata[i].embed.provider.logo;\n            }\n\n            if (commentsdata[i].embed.type === 'link' && commentsdata[i].embed.playable === true){\n              tempComment.embedHtml = commentsdata[i].embedHtml;\n            }\n          }\n          _this.commentsArray.push(tempComment);\n        }\n        if (NETWORK_DEBUG) console.log(\"Comments Array: \", _this.commentsArray);\n      }\n    }\n\n    this.loadRemainingComments = function() {\n      console.log(\"LOADING REST OF COMMENTS...\");\n      if (!CommentService.loadedComments()){\n        networkService.send(CommentService.getCommentsRequest($stateParams.topicID));\n        CommentService.setLoadedComments(true);\n        _this.loadedAllComments = true;\n      }\n    };\n\n    this.doneLoading = function() {\n      console.log(\"Done Loading\");\n      _this.loading = false;\n    };\n\n    this.showNewComments = function() {\n      $scope.$parent.newCommentsAvailable = false;\n      updateComments();\n      $(document).scrollTop(0);\n    };\n    // Listen for Broadcast from Parent (Topic Ctrl)\n    $scope.$on('viewNewComments', function (event, args) {\n      _this.showNewComments();\n    });\n\n    function notifyNewComments() {\n      if(!_this.commentsArray){\n        updateComments();\n      } else {\n        var commentsData = CommentService.comments();\n        var len = commentsData.length;\n        var pinIndex = CommentService.getNumPinComments();\n        if (_this.commentsArray.length < len){\n          if (!UserInfoService.isCurrentUser(commentsData[pinIndex].author.id)){\n            $scope.$parent.newCommentsAvailable = true;\n            $scope.$apply();\n          } else {\n            updateComments();\n          }\n        } else {\n          updateComments();\n        }\n      }\n    }\n\n    CommentService.registerObserverCallback(notifyNewComments);\n    CommentService.registerObserverCallback(updateComments);\n\n    this.trustSrc = function(src) {\n      return $sce.trustAsResourceUrl(src);\n    }\n\n    // Chat Navigation\n    this.viewPost = function(e, id) {\n      if ($(e.target).is('a')){\n        return;\n      }\n      var postParams = $stateParams;\n      postParams.postID = id;\n      $state.go('post', postParams);\n    };\n\n    this.replyDirectToPost = function(id) {\n      TopicService.directComment = true;\n      var postParams = $stateParams;\n      postParams.postID = id;\n      $state.go('post', postParams);\n    };\n\n    // Comment Operations\n    this.updateLikeComment = function(id) {\n      if (NETWORK_DEBUG) console.log(\"Like Comment: \", id);\n      if (CommentService.isCommentLiked(id)){\n        networkService.send(CommentService.getUnlikeCommentRequest(id));\n      } else {\n        networkService.send(CommentService.getLikeCommentRequest(id));  \n      }\n    };\n\n    this.deleteComment = function(id) {\n      if (NETWORK_DEBUG) console.log(\"Delete Comment: \", id);\n      if (_this.commentsArray.length === 1){\n        if (NETWORK_DEBUG) console.log(\"Deleting Final Comment\");\n        lastComment = true;\n      }\n      networkService.send(CommentService.deleteCommentRequest(id));\n    };\n\n    this.reportCommentAsSpam = function(id) {\n      if (NETWORK_DEBUG) console.log(\"Report Comment As Spam: \", id);\n      networkService.send(CommentService.flagCommentRequest(id)); \n    };\n\n    init();\n\n}]);\n","angular.module(\"VideoModule\", [\"NetworkModule\",\"ChannelModule\",\"TopicModule\"])\n.controller(\"VideoController\", [\"$state\",\"$stateParams\",\"$sce\",\"$window\",\"$http\",\"VideoService\",\"networkService\",\"ChannelService\",\"TopicService\",\"DateUtilityService\",\"CommentService\",\"URIHelper\",\"UserInfoService\",\n  function ($state,$stateParams,$sce,$window,$http,VideoService,networkService,ChannelService,TopicService,DateUtilityService,CommentService,URIHelper, UserInfoService){\n\n    var _this = this;\n    if (!this.videoArray){\n      this.loading = true;\n    }\n    if (!!this.videoArray){\n      updateTimestamps();\n    }\n    VideoService.resetVideoOffset();\n    VideoService.registerObserverCallback(function(){updateFeed();});\n\n\n    this.loadContent = function(offset) {\n      var channelID = TopicService.getChannelId();\n      if (NETWORK_DEBUG) console.log(\"LOADING VIDEO: \", channelID);\n      networkService.send(VideoService.getVideoDataRequest(channelID,offset));\n    };\n    if (!TopicService.getChannelId()){\n      TopicService.registerObserverCallback(_this.loadContent);\n    } else {\n      _this.loadContent();\n    }\n\n    function updateFeed() {\n      console.log(\"Updating Video Feed\");\n      // Get Appropriate Content\n      var feedData,\n          existingLength,\n          tabArray;\n      feedData = VideoService.videoArray();\n      _this.videoArray = _this.videoArray || [];\n      existingLength = _this.videoArray.length;\n      tabArray = _this.videoArray;\n\n      var len = feedData.length;\n      if (!!feedData && len > 0){\n        // console.log(\"Feed Data: \", feedData, \" Type: \", tab);\n\n        for (var i = 0; i < len; i++){\n          var tempItem = feedData[i];\n\n          // Check to See if Item Already Exists in Scope Array\n          var itemExists = false;\n          for (var j = 0; j < existingLength; j++){\n            if (tempItem.id === tabArray[j].id){\n              itemExists = true;\n            }\n          }\n          // If Exists, Skip To Next Item\n          if (itemExists){\n            continue;\n          }\n          \n          tempItem.postAuthorName = feedData[i].embedAuthor.name;\n          tempItem.postAuthorAlias = feedData[i].embedAuthor.alias;\n          tempItem.postAuthorPhoto = feedData[i].embedAuthor.photo;\n          tempItem.tweetId = feedData[i].tweet.id;\n          \n          tempItem.postTimestamp = feedData[i].createdAt;\n          tempItem.providerName = feedData[i].embedProvider.name;\n          tempItem.html = feedData[i].embedText;\n          tempItem.retweetCount = feedData[i].tweet.metrics.retweetCount;\n          tempItem.likeCount = feedData[i].tweet.metrics.likeCount;\n          tempItem.replyCount = feedData[i].tweet.metrics.replyCount;\n\n          // Embed Object for Sharing\n          tempItem.embed = feedData[i].embed;\n          tempItem.embed.embedCreatedAt = feedData[i].embedCreatedAt;\n          // tempItem.embed.embedCreatedAtFull = feedData[i].embedCreatedAtFull;\n\n          if (tempItem.providerName === \"Twitter\"){\n            tempItem.providerLogo = \"img/twitterLogo@2x.png\";\n            tempItem.embed.provider.logo = \"img/twitterLogo@2x.png\";\n          } else {\n            tempItem.providerLogo = feedData[i].embedProvider.logo;\n            tempItem.embed.provider.logo = feedData[i].embedProvider.logo;\n          }\n\n          tempItem.embedType = feedData[i].embedType;\n          tempItem.embedUrl = feedData[i].embedUrl;\n          if (feedData[i].embedType === \"link\" && feedData[i].embedPlayable === true){\n            tempItem.embedHtml = feedData[i].embedHtml;\n            tempItem.embedPlayable = true;\n          }\n          if (feedData[i].embedType === \"media\" || feedData[i].embedType === \"link\"){\n            tempItem.mediaType = feedData[i].embedMedia.mediaType;\n            tempItem.mediaUrl = feedData[i].embedMedia.mediaUrl;\n            tempItem.mediaThumbUrl = feedData[i].embedMedia.mediaThumbUrl;\n            tempItem.mediaAspectRatio = feedData[i].embedMedia.mediaAspectRatio;\n            tempItem.mediaAspectFeed = feedData[i].embedMedia.mediaAspectFeed;\n            tempItem.mediaAspectFull = feedData[i].embedMedia.mediaAspectFull;\n            tempItem.mediaOrientation = feedData[i].embedMedia.mediaOrientation;\n          }\n\n          _this.videoArray.push(tempItem);\n          if (NETWORK_DEBUG && i === len - 1){\n            _this.loadingVideo = false;\n            console.log(\"Video Array: \", _this.videoArray);\n          }\n        }\n      }\n    };\n\n    function trustSrc(src) {\n      return $sce.trustAsResourceUrl(src);\n    };\n\n    function updateTimestamps(){\n      for (var i = 0; i < _this.videoArray.length; i++){\n        _this.videoArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.videoArray[i].createdAtFull);\n      }\n    };\n\n    \n    // Limit Rate that Function Can be Called\n    function debounce(func, wait, immediate) {\n      var timeout;\n      return function() {\n        var context = this, args = arguments;\n        var later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    var watchContentScroll = debounce(function() {\n      if ($state.includes('topic.video')){\n        var currentScroll = $(document).height() - clientHeight - 50;\n        if ($(document).scrollTop() > currentScroll && currentScroll > 500) {\n          // We are Loading More Content -->\n          // Base offset on Current Length of Scope Array\n          _this.loadContent(_this.videoArray.length);\n        }\n      }\n    }, 100);\n\n    $(document).on('scroll', watchContentScroll);\n\n    this.retweetPost = function(id) {\n      $http({\n        method: 'GET',\n        url: 'https://twitter.com/intent/retweet?tweet_id=' + id,\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    };\n\n    this.shareTweetToChat = function (embed) {\n      _this.embedShareContent = embed;\n      _this.showShareDialog = true;\n      console.log(\"Embed Object: \", embed);\n      if (URIHelper.isPeelUser()){\n        var fullClient = document.documentElement.clientHeight - 54;\n        console.log(\"fullClient Height: \", fullClient);\n        setTimeout(function(){\n          $('#sharePreviewContainer').css({top: '54px'}).height(fullClient);\n        },25);\n      }\n    };\n\n    this.submitSharedPost = function (commentData,embedData) {\n      var topicID = $stateParams.topicID;\n      console.log(\"topicID From Parent: \", topicID);\n      networkService.send(CommentService.postCommentRequestForShare(topicID,commentData,embedData));\n      _this.showShareDialog = false;\n      $state.go('topic.chat', $stateParams);\n    };\n\n    console.log(\"WAY BEFOREEEE\");\n    if (!window.FB){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n    }\n\n    window.fbAsyncInit = function() {\n      console.log(\"BEFOREEEE\");\n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n      console.log(\"AFTERRRRR\");\n    };\n\n    this.shareToFacebook = function (id,embedUrl) {\n      FB.ui({\n        method: 'share',\n        href: embedUrl\n      }, function (response){\n        // Keep Track of User Shares to Facebook?\n        console.log(\"FB Response Post-Share: \", response);\n      });\n    };\n\n    this.exitShare = function () {\n      _this.showShareDialog = false;\n    };\n\n    this.highlightPost = function(){\n      $('#postShareContent').css('color','rgb(22,189,231)');\n    };\n\n    this.unhighlightPost = function(){\n      $('#postShareContent').css('color','rgb(211,214,215)');\n    };\n    \n    this.doneLoading = function() {\n      _this.loading = false;\n    };\n\n    this.secureLink = function(url, id) {\n      if (UserInfoService.isGuestUser()){\n        return \"\";\n      } else {\n        return url + id;\n      }\n    };\n\n}]);\n\n","angular.module(\"SocialModule\", [\"NetworkModule\",\"ChannelModule\",\"TopicModule\"])\n.controller(\"SocialController\", [\"$state\",\"$stateParams\",\"$sce\",\"$window\",\"$http\",\"SocialService\",\"networkService\",\"ChannelService\",\"TopicService\",\"DateUtilityService\",\"CommentService\",\"URIHelper\",\"UserInfoService\",\n  function ($state,$stateParams,$sce,$window,$http,SocialService,networkService,ChannelService,TopicService,DateUtilityService,CommentService,URIHelper,UserInfoService){\n\n    var _this = this;\n    if (!this.socialArray){\n      this.loading = true;\n    }\n    if (!!this.socialArray){\n      updateTimestamps();\n    }\n    SocialService.resetSocialOffset();\n    SocialService.registerObserverCallback(function(){updateFeed();});\n\n\n    this.loadContent = function(offset) {\n      var channelID = TopicService.getChannelId();\n      if (NETWORK_DEBUG) console.log(\"LOADING SOCIAL: \", channelID);\n      networkService.send(SocialService.getSocialDataRequest(channelID,offset));\n    };\n    if (!TopicService.getChannelId()){\n      TopicService.registerObserverCallback(_this.loadContent);\n    } else {\n      _this.loadContent();\n    }\n\n    function updateFeed() {\n\n      // Get Appropriate Content\n      var feedData,\n          existingLength,\n          tabArray;\n      feedData = SocialService.socialArray();\n      _this.socialArray = _this.socialArray || [];\n      existingLength = _this.socialArray.length;\n      tabArray = _this.socialArray;\n\n      var len = feedData.length;\n      if (!!feedData && len > 0){\n        // console.log(\"Feed Data: \", feedData, \" Type: \", tab);\n\n        for (var i = 0; i < len; i++){\n          var tempItem = feedData[i];\n\n          // Check to See if Item Already Exists in Scope Array\n          var itemExists = false;\n          for (var j = 0; j < existingLength; j++){\n            if (tempItem.id === tabArray[j].id){\n              itemExists = true;\n            }\n          }\n          // If Exists, Skip To Next Item\n          if (itemExists){\n            continue;\n          }\n          \n          tempItem.postAuthorName = feedData[i].embedAuthor.name;\n          tempItem.postAuthorAlias = feedData[i].embedAuthor.alias;\n          tempItem.postAuthorPhoto = feedData[i].embedAuthor.photo;\n          tempItem.tweetId = feedData[i].tweet.id;\n          \n          tempItem.postTimestamp = feedData[i].createdAt;\n          tempItem.providerName = feedData[i].embedProvider.name;\n          tempItem.html = feedData[i].embedText;\n          tempItem.retweetCount = feedData[i].tweet.metrics.retweetCount;\n          tempItem.likeCount = feedData[i].tweet.metrics.likeCount;\n          tempItem.replyCount = feedData[i].tweet.metrics.replyCount;\n\n          // Embed Object for Sharing\n          tempItem.embed = feedData[i].embed;\n          tempItem.embed.embedCreatedAt = feedData[i].embedCreatedAt;\n          // tempItem.embed.embedCreatedAtFull = feedData[i].embedCreatedAtFull;\n\n          if (tempItem.providerName === \"Twitter\"){\n            tempItem.providerLogo = \"img/twitterLogo@2x.png\";\n            tempItem.embed.provider.logo = \"img/twitterLogo@2x.png\";\n          } else {\n            tempItem.providerLogo = feedData[i].embedProvider.logo;\n            tempItem.embed.provider.logo = feedData[i].embedProvider.logo;\n          }\n\n          tempItem.embedType = feedData[i].embedType;\n          tempItem.embedUrl = feedData[i].embedUrl;\n          if (feedData[i].embedType === \"link\" && feedData[i].embedPlayable === true){\n            tempItem.embedHtml = feedData[i].embedHtml;\n            tempItem.embedPlayable = true;\n          }\n          if (feedData[i].embedType === \"media\" || feedData[i].embedType === \"link\"){\n            tempItem.mediaType = feedData[i].embedMedia.mediaType;\n            tempItem.mediaUrl = feedData[i].embedMedia.mediaUrl;\n            tempItem.mediaThumbUrl = feedData[i].embedMedia.mediaThumbUrl;\n            tempItem.mediaAspectRatio = feedData[i].embedMedia.mediaAspectRatio;\n            tempItem.mediaAspectFeed = feedData[i].embedMedia.mediaAspectFeed;\n            tempItem.mediaAspectFull = feedData[i].embedMedia.mediaAspectFull;\n            tempItem.mediaOrientation = feedData[i].embedMedia.mediaOrientation;\n          }\n\n          _this.socialArray.push(tempItem);\n          if (NETWORK_DEBUG && i === len - 1){\n            _this.loadingSocial = false;\n            console.log(\"Social Array: \", _this.socialArray);\n          }\n        }\n      }\n    };\n\n    function trustSrc(src) {\n      return $sce.trustAsResourceUrl(src);\n    };\n\n    function updateTimestamps(){\n      for (var i = 0; i < _this.socialArray.length; i++){\n        _this.socialArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.socialArray[i].createdAtFull);\n      }\n    };\n\n    \n    // Limit Rate that Function Can be Called\n    function debounce(func, wait, immediate) {\n      var timeout;\n      return function() {\n        var context = this, args = arguments;\n        var later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    var watchContentScroll = debounce(function() {\n      if ($state.includes('topic.social')){\n        var currentScroll = $(document).height() - clientHeight - 50;\n        if ($(document).scrollTop() > currentScroll && currentScroll > 500) {\n          // We are Loading More Content -->\n          // Base offset on Current Length of Scope Array\n          _this.loadContent(_this.socialArray.length);\n        }\n      }\n    }, 100);\n\n    $(document).on('scroll', watchContentScroll);\n\n    this.retweetPost = function(id) {\n      $http({\n        method: 'GET',\n        url: 'https://twitter.com/intent/retweet?tweet_id=' + id,\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    };\n\n    this.shareTweetToChat = function (embed) {\n      _this.embedShareContent = embed;\n      _this.showShareDialog = true;\n      console.log(\"Embed Object: \", embed);\n      if (URIHelper.isPeelUser()){\n        var fullClient = document.documentElement.clientHeight - 54;\n        console.log(\"fullClient Height: \", fullClient);\n        setTimeout(function(){\n          $('#sharePreviewContainer').css({top: '54px'}).height(fullClient);\n        },25);\n      }\n    };\n\n    this.submitSharedPost = function (commentData,embedData) {\n      var topicID = $stateParams.topicID;\n      console.log(\"topicID From Parent: \", topicID);\n      networkService.send(CommentService.postCommentRequestForShare(topicID,commentData,embedData));\n      _this.showShareDialog = false;\n      $state.go('topic.chat', $stateParams);\n    };\n\n    console.log(\"WAY BEFOREEEE\");\n    if (!window.FB){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n    }\n\n    window.fbAsyncInit = function() {\n      console.log(\"BEFOREEEE\");\n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n      console.log(\"AFTERRRRR\");\n    };\n\n    this.shareToFacebook = function (id,embedUrl) {\n      FB.ui({\n        method: 'share',\n        href: embedUrl\n      }, function (response){\n        // Keep Track of User Shares to Facebook?\n        console.log(\"FB Response Post-Share: \", response);\n      });\n    };\n\n    this.exitShare = function () {\n      _this.showShareDialog = false;\n    };\n\n    this.highlightPost = function(){\n      $('#postShareContent').css('color','rgb(22,189,231)');\n    };\n\n    this.unhighlightPost = function(){\n      $('#postShareContent').css('color','rgb(211,214,215)');\n    };\n    \n    this.doneLoading = function() {\n      _this.loading = false;\n    };\n\n    this.secureLink = function(url, id) {\n      if (UserInfoService.isGuestUser()){\n        return \"\";\n      } else {\n        return url + id;\n      }\n    };\n\n}]);\n\n","angular.module(\"UserInput\", [\"NetworkModule\",\"TopicModule\",\"MediaModule\",\"angularFileUpload\"])\n  .controller(\"UserInputController\", [\"$scope\",\"$window\",\"$timeout\",\"$stateParams\",\"networkService\",\"TopicService\",\"CommentService\",\"ReplyService\",\"UserInfoService\",\"FileUploader\",\"MUService\",\n    function ($scope,$window,$timeout,$stateParams,networkService,TopicService,CommentService,ReplyService,UserInfoService,FileUploader,MUService){\n\n      // ATTACH MEDIA\n      var MUS_SERVER_URI;\n      if (DEV_BUILD === true){\n        MUS_SERVER_URI = 'https://dev.fankave.com:8080';\n      } else {\n        MUS_SERVER_URI = 'https://mus.fankave.com';\n      }\n      var UPLOAD_URL = '/v1.0/media/upload';\n\n      var uploader = this.uploader = new FileUploader({\n        url: MUS_SERVER_URI + UPLOAD_URL,\n        autoUpload: false,\n        removeAfterUpload: true,\n        queueLimit: 1\n      });\n\n      var _this = this;\n      this.isHTML5 = this.uploader.isHTML5;\n      this.mediaType;\n      this.uploader.filters.push({\n        name: 'customFilter',\n        fn: function(item /*{File|FileLikeObject}*/, options) {\n          var itemType = item.type;\n          if(itemType.indexOf(\"image\") != -1){\n            _this.mediaType = \"image\";\n            return this.queue.length < 1 && (item.size < 5242880);\n          }\n          else if(itemType.indexOf(\"video\") != -1){\n            _this.mediaType = \"video\";\n            return this.queue.length < 1 && (item.size < 268435456);\n          }\n          return this.queue.length < 10;\n        }\n      });\n\n      // MEDIA PREVIEW\n      var dontAdd;\n      function generateImagePreview(evt) {\n        var f = evt.target.files[0];\n        console.log('F:', f);\n\n        if (!f.type.match('image.*')) {\n          var previewSrc = \"img/videoPrevIcon@2x.png\";\n        }\n\n        var reader = new FileReader();\n        reader.onload = (function (theFile) {\n          return function (e) {\n            var span = document.createElement('span');\n            span.innerHTML = ['<img class=\"thumb\" src=\"',\n              previewSrc || e.target.result,\n              '\"/>'].join('');\n            if ($scope.mobileBrowser === true && !dontAdd){\n              document.getElementById('mobilePreview').insertBefore(span, null);\n            } else if (!dontAdd) {\n              document.getElementById('preview').insertBefore(span, null);\n            }\n            };\n          })(f);\n          reader.readAsDataURL(f);\n        };\n\n      document.getElementById('fileUpload').addEventListener('change',\n        generateImagePreview, false);\n\n      this.removeMedia = function(){\n        _this.uploader.clearQueue();\n        var e = $('#fileUpload');\n        e.wrap('<form>').closest('form').get(0).reset();\n        e.unwrap();\n        dontAdd = false;\n        _this.unhighlightPost();\n      };\n\n      // CALLBACKS\n      this.fileMaxExceeded = false;\n      this.uploader.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\n        dontAdd = true;\n        console.info('onWhenAddingFileFailed', item, filter, options);\n        if (!_this.isHTML5){\n          console.log(\"Browser Doesn't Support HTML5\");\n          _this.HTML5warning = true;\n        } else if (_this.uploader.queue.length < 1) {\n          _this.fileMaxExceeded = true;\n          _this.removeMedia();\n          $timeout(function(){_this.fileMaxExceeded = false;}, 5000);\n        }\n      };\n      this.uploader.onAfterAddingFile = function(fileItem) {\n        console.info('onAfterAddingFile', fileItem);\n        _this.highlightPost();\n      };\n      this.uploader.onAfterAddingAll = function(addedFileItems) {\n        console.info('onAfterAddingAll', addedFileItems);\n      };\n      this.uploader.onBeforeUploadItem = function(item) {\n        var user = UserInfoService.getUserCredentials();\n        item.headers = {  \n            'X-UserId': user.userId,\n            'X-SessionId': user.sessionId,\n            'X-AccessToken': user.accessToken};\n        item.formData =[{'type':item._file.type},{'size': item._file.size},{'file': item._file}];\n\n        console.info('onBeforeUploadItem', item);\n      };\n      this.uploader.onProgressItem = function(fileItem, progress) {\n        console.info('onProgressItem', fileItem, progress);\n      };\n      this.uploader.onProgressAll = function(progress) {\n        console.info('onProgressAll', progress);\n      };\n      this.uploader.onSuccessItem = function(fileItem, response, status, headers) {\n        console.info('onSuccessItem', fileItem, response, status, headers);\n        networkService.send(MUService.postMediaRequest(response));\n      };\n      this.uploader.onErrorItem = function(fileItem, response, status, headers) {\n        console.info('onErrorItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCancelItem = function(fileItem, response, status, headers) {\n        console.info('onCancelItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCompleteItem = function(fileItem, response, status, headers) {\n        console.info('onCompleteItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCompleteAll = function() {\n        console.info('onCompleteAll');\n        _this.uploader.clearQueue();\n        MUService.resetCommentParams();\n      };\n\n      console.info('uploader', this.uploader);\n\n      // POST COMMENT\n      this.postComment = function(commentText, isComment) {\n        // console.log(\"In New Controller: \", isComment);\n        if (_this.uploader.queue.length > 0 && isComment){\n          MUService.setCommentParams($scope.topicID, commentText, true);\n        } else if (_this.uploader.queue.length > 0 && !isComment){\n          MUService.setCommentParams($scope.topicId, commentText, false, $scope.postID);\n        } else if (!!commentText && commentText !== \"\" && isComment){\n          networkService.send(CommentService.postCommentRequest($scope.topicID, commentText));\n        } else if (!!commentText && commentText !== \"\" && !isComment){\n          networkService.send(ReplyService.getPostReplyRequest($scope.topicId, $scope.postID, commentText));\n        }\n        _this.uploader.uploadAll();\n        $scope.commentText = \"\";\n        $('input#topicCommentField').blur();\n        $('#postCommentButton').css('color','rgb(211,214,215)');\n        if (isComment){\n          $(document).scrollTop(0);\n        } else {\n          window.scrollTo(0, document.body.scrollHeight);\n        }\n      };\n\n      this.highlightPost = function(){\n        console.log(\"Styling post\");\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      };\n\n      this.unhighlightPost = function(){\n        console.log(\"Styling post\");\n        $('#postCommentButton').css('color','rgb(211,214,215)');\n      };\n\n      this.mobileHighlightPost = function(){\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      }\n\n      this.mobileUnhighlightPost = function(){\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      }\n\n      $('input#topicCommentField').bind('focusin focus', function(e){\n        e.preventDefault();\n      });\n\n      $('input').bind('focusin focus', function(e){\n        e.preventDefault();\n      });\n\n    }]);","angular.module('Forum')\n.factory(\"UserAgentService\", [\"ForumStorage\",\"UserInfoService\",\n  function (ForumStorage,UserInfoService){\n\n    var _userAgent;\n\n    function getMobileUserAgent() {\n      var agent;\n      if (isMobileUser()){\n        if (/iPad|iPhone|iPod/i.test(navigator.userAgent) && !window.MSStream){\n          agent = 'iOS';\n        } else if (/Android/i.test(navigator.userAgent)){\n          agent = 'android';\n        } else if (/IEMobile/i.test(navigator.userAgent)){\n          agent = 'windows';\n        }\n      }\n      _userAgent = agent;\n      return agent;\n    }\n\n    function isMobileUser() {\n      var check = false;\n      (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\n      return check;\n    }\n\n    function isUserAgent(type) {\n      if (_userAgent === type){\n        return true;\n      }\n      return false;\n    }\n\n    return {\n      getMobileUserAgent: getMobileUserAgent,\n      isMobileUser: isMobileUser,\n      isUserAgent: isUserAgent\n    };\n\n}]);","angular.module(\"NetworkModule\", ['ngWebSocket'])\n.factory(\"networkService\",[\"$websocket\",\"$state\",\"DataService\",\"UserInfoService\",\n\nfunction ($websocket,$state,DataService,UserInfoService)\n{\n  var ws;\n\n  disconnectSocket = function(){\n    console.log(\"Disconnect Callback triggered\");\n    if(ws !== undefined) {\n      ws.close();\n      ws = undefined;\n    }\n  }\n\n  reconnectSocket = function(){\n    console.log(\"Reconnect Callback triggered\");\n    $state.reload();\n  }\n  \n  // window.document.addEventListener(visEvent, function(){\n  //     visChange(reconnectSocket, disconnectSocket);\n  //   });\n\n  function initSocket() { \n    ws = $websocket(getWebsocketUri());\n    DataService.setWatchTopic(false);\n    //Websocket callbacks below\n    ws.onOpen(function() {\n      console.log(\"Websocket Connected\");\n    });\n\n    ws.onClose(function(evt) {\n      ws = undefined;\n      console.log(\"Websocket Closed :\"+evt.data);\n    });\n\n    ws.onMessage(function(evt) {\n      if(NETWORK_DEBUG) console.log(\"Websocket Message Recieved :  \" +evt.data);\n      var responseJson = JSON.parse(evt.data);\n      var type = responseJson.rid;\n      if(type !== undefined){\n        if(type === \"channel\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Channel\");\n          DataService.setChannel(responseJson);\n        }\n        if(type === \"topic\" || type === \"score\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Topic\");\n          DataService.setTopic(responseJson);\n        }else if(type === \"comment\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Comments\");\n          DataService.setComments(responseJson);\n        }\n        else if(type === \"reply\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Reply\");\n          DataService.setReplies(responseJson);\n        }\n        else if(type === \"social\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Social\");\n          DataService.setSocial(responseJson);\n        }\n        else if(type === \"video\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Video\");\n          DataService.setVideo(responseJson);\n        }\n      }\n    });\n\n    ws.onError(function(evt) {\n      \n      console.log(\"Websocket OnError: \"+JSON.stringify(evt) );\n    });\n\n    function getWebsocketUri(){\n      var user = UserInfoService.getUserCredentials();\n      var socketUri = WEBSOCKET_BASE_URI+\n      'userId='+user.userId+\n      '&sessionId='+user.sessionId+\n      '&accessToken='+user.accessToken+\n      '/';\n      if(NETWORK_DEBUG) console.log(\"socketUri: \" + socketUri);\n      return socketUri;\n    }\n  }\n  return{\n    isSocketConnected:function(){\n      if(NETWORK_DEBUG){\n        if(ws!= null)\n        console.log(\"ws status : \"+ ws.readyState);\n        else\n          console.log(\"ws is null\");\n      }\n      if(ws != undefined && ws.readyState == ws.OPEN){\n        return true;\n      }\n      return false;\n    },\n    send:function(message) { \n      if(ws == undefined){ \n        initSocket();\n      }\n      ws.send(JSON.stringify(message));\n    },\n    init:initSocket\n  }\n}]);","angular.module('NetworkModule')\n.factory('ForumStorage', function () {\n\tvar localStorageAvailable = false;\n\tif(typeof(Storage) != undefined) {\n\t\tconsole.log(\"Local storage available :\"+ typeof(Storage));\n\t\tlocalStorageAvailable = true;\n\t}  \n\telse {\n\t\tconsole.log(\"Sorry! No Storage support on this browser..\");\n\t}\n\t\n\tfunction setToLocalStorage(key, value){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\tlocalStorage.setItem(key,value);\n\t}\n\t\n\tfunction getFromLocalStorage(key){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\treturn localStorage.getItem(key);\n\t\treturn undefined;\n\t}\n\t\n\tfunction clearStorage(){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\tlocalStorage.clear();\n\t}\n\t\n\treturn{\n\t\tgetFromLocalStorage:getFromLocalStorage,\n\t\tsetToLocalStorage:setToLocalStorage,\n\t\tclearStorage:clearStorage\n\t}\n\t\n\t\n\n});","angular.module('NetworkModule')\n.factory('ForumDeviceInfo', [\"ForumStorage\",\n\tfunction (ForumStorage) {\n\t//TODO : TEMP function to generate uuid. change this in final version\n\tfunction _p8(s) {\n\t\tvar p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n\t\treturn s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n\t}\n\tfunction generateUUID() {\n\t\tconsole.log(\"GEnerating UUID\");\n\t\tvar uuid = _p8() + _p8(true) + _p8(true) + _p8();\n\t\tconsole.log(\" UUID :\"+ uuid);\n\t\treturn uuid;\n\t}\n\n\treturn{\n\t\tgetDeviceId:function(){\n\t\t\tvar id = ForumStorage.getFromLocalStorage(\"forumUUID\");\n\t\t\tif(id == undefined || id.length <15){\n\t\t\t\tid = generateUUID();\n\t\t\t\tForumStorage.setToLocalStorage(\"forumUUID\",id);\n\t\t\t}\n\t\t\tconsole.log(\"generated ID : \"+ id);\n\t\t\treturn id;\n\n\t\t}\n\t}\n}]);\n","angular.module('NetworkModule')\n.factory('URIHelper', [\"ForumStorage\",\"$stateParams\",\n\tfunction (ForumStorage,$stateParams) {\n\n\tvar peelUserName;\n\tvar peelUserId;\n\tvar peelShowId;\n\n\tvar ssUserName;\n\tvar ssUserId;\n\n\tvar _MI16;\n\tvar _MWC;\n\n\treturn {\n\t\tisPeelUser:function(){\n\t\t\tif($stateParams.peel){\n\t\t\t\tpeelUserId = $stateParams.userId;\n\t\t\t\tpeelUserName = $stateParams.userName;\n\t\t\t\tpeelShowId = $stateParams.showId;\n\t\t\t\t//If diff previous peel user, clear storage\n\t\t\t\tvar prevPeelUser = ForumStorage.getFromLocalStorage(\"forumUserType\");\n\t\t\t\t// if(prevPeelUser != undefined && prevPeelUser == \"peel\" && ForumStorage.setToLocalStorage(\"forumPeelUserId\") != peelUserId)\n\t\t\t\t\t// ForumStorage.clearStorage();\n\t\t\t\tForumStorage.setToLocalStorage(\"forumPeelUserId\",peelUserId);\n\t\t\t\tForumStorage.setToLocalStorage(\"forumPeelShowId\",peelShowId);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\treturn false;\n\t\t},\n\t\tisSmartStadiumUser:function(){\n\t\t\tif($stateParams.smartStadium){\n\t\t\t\tssUserId = $stateParams.userId;\n\t\t\t\tssUserName = $stateParams.userName;\n\t\t\t\tForumStorage.setToLocalStorage(\"forumSmartStadiumUserId\",ssUserId);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tisTechMUser:function(){\n\t\t\tconsole.log(\"isTechM: \", $stateParams);\n\t\t\tif ($stateParams.MI16){\n\t\t\t\t_MI16 = true;\n\t\t\t\tForumStorage.setToLocalStorage(\"techMIUser\",true);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (_MI16){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tisMWCUser:function(){\n\t\t\tif ($stateParams.MWC){\n\t\t\t\t_MWC = true;\n\t\t\t\tForumStorage.setToLocalStorage(\"MWCUser\",true);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (_MWC){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetPeelUserId:function(){\n\t\t\treturn peelUserId;\n\t\t},\n\t\tgetPeelUserName:function(){\n\t\t\treturn peelUserName;\n\t\t},\n\t\tgetPeelShowId:function(){\n\t\t\treturn peelShowId;\n\t\t},\n\t\tgetPeelParams:function(){\n\t\t\treturn window.location.search.substring(1);\n\t\t},\n\t\tgetSSUserId:function(){\n\t\t\treturn ssUserId;\n\t\t},\n\t\tgetSSUserName:function(){\n\t\t\treturn ssUserName;\n\t\t}\n\n\n\t};\n\n}]);","angular.module('ChannelModule')\n.factory('ChannelService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\",\n  function (DateUtilityService,Bant,FDSUtility) {\n\n\n  var _channelId;\n  var _liveTopicId;\n\n  var observerCallbacks = []; \n\n  function setTopicData(topicData) \n  {\n    if(topicData.data != undefined){\n      _liveTopicId = topicData.data.id;\n      console.log(\"_liveTopicId : \"+ _liveTopicId);\n      notifyObservers();\n    }\n  }\n\n  function getLiveGameTopic(channelId){\n    var reqChannelId = channelId || _channelId;\n    var uri = \"/v1.0/channel/topic/show/\" + reqChannelId + \"?type=livegame\";\n    if(reqChannelId == \"404\" || reqChannelId == \"5066\")\n    uri = \"/v1.0/channel/topic/show/\" + reqChannelId;\n\n    var topicParams = {\"rid\": \"channel\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\":uri };\n    console.log(\"Ch.getLiveGameTopic: \", topicParams);\n    return topicParams;\n  }\n\n  //call this when you know 'data' has been changed\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n  \n  function registerObserverCallback(callback){\n    //register an observer\n    // console.log(\"topic callback registered\");\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  }\n\n  return {\n    setTopicData:setTopicData,\n    getLiveTopicId:function(){ return _liveTopicId;},\n    getLiveGameTopic:getLiveGameTopic,\n    setChannel: function(channelId){\n      _channelId = channelId;\n    },\n    getChannel: function(){\n      return _channelId;\n    },\n    registerObserverCallback:registerObserverCallback\n\n\n  };\n\n}]);","angular.module('TopicModule')\n.directive('scorecard', function() {\n  return {\n    restrict: 'E',\n    templateUrl: 'partials/scorecard.html'\n  }\n});","angular.module('TopicModule')\n.directive('secureClick', ['$state','$stateParams','UserInfoService',\n  function ($state, $stateParams, UserInfoService) {\n    return {\n      restrict: 'A',\n      link: function($scope, $elem, $attrs){\n        var element = $elem[0];\n        $(element).on('click', function(e){\n          e.preventDefault();\n          if (UserInfoService.isGuestUser()){\n            $state.go('login', $stateParams);\n          } else {\n            $scope.$eval($attrs.secureClick);\n          }\n        });\n      }\n    }\n}]);\n\nangular.module('TopicModule')\n.directive('secureFocus', ['$state','$stateParams','UserInfoService',\n  function ($state, $stateParams, UserInfoService) {\n    return {\n      restrict: 'A',\n      link: function($scope, $elem, $attrs){\n        var element = $elem[0];\n        $(element).on('focus', function(e){\n          e.preventDefault();\n          if (UserInfoService.isGuestUser()){\n            $state.go('login', $stateParams);\n          } else {\n            $scope.$eval($attrs.secureFocus);\n          }\n        });\n      }\n    }\n}]);\n\nangular.module('TopicModule')\n.directive('repeatFinishedNotify', function () {\n  return function ($scope, $element, $attrs) {\n    if ($scope.$last){\n      $scope.$eval($attrs.repeatFinishedNotify);\n    }\n  };\n});\n\nangular.module('TopicModule')\n.directive('embedSharedContent', ['UserAgentService',\n  function (UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=embedPost',\n      trustSource: '&'      \n    },\n    link: function(scope,elem,attr){\n      scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n    },\n    templateUrl: 'partials/shared.html'\n  };\n}]);\n\nangular.module('TopicModule')\n.directive('mediaPlayer', ['$sce', 'UserAgentService',\n  function ($sce, UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=',\n      vidIndex: '@'\n    },\n    link: function(scope,elem,attr) {\n\n      scope.isMobileUser = UserAgentService.isMobileUser();\n\n      scope.trustSrc = function(src){\n        return $sce.trustAsResourceUrl(src);\n      }\n\n      var video = elem[0].firstElementChild.childNodes[1];\n      var loadingSpinner = elem[0].firstElementChild.childNodes[7];\n      \n      // Video Loading Event Listeners\n      $(video).on('waiting', function() {\n        if (NETWORK_DEBUG)\n          console.log(\"Video Waiting\");\n        if (scope.isMobileUser){\n          loadingSpinner.className = 'media-loading-fullscreen';\n          loadingSpinner.style.zIndex = \"2147483647\";\n        } else {\n          loadingSpinner.className = 'media-loading';\n        }\n      });\n      $(video).on('stalled', function() {\n        if (NETWORK_DEBUG)\n          console.log(\"Video Stalled\");\n        if (scope.isMobileUser){\n          loadingSpinner.className = 'media-loading-fullscreen';\n          loadingSpinner.style.zIndex = \"2147483647\";\n        } else {\n          loadingSpinner.className = 'media-loading';\n        }\n      });\n      var canPlay;\n      $(video).on('canplay', function() {\n        canPlay = true;\n      });\n      $(video).on('playing', function() {\n        if (NETWORK_DEBUG)\n          console.log(\"Video Playing\");\n        loadingSpinner.className = 'media-loading-default';\n      });\n\n      scope.togglePlayPause = function(e) {\n        var thesePlayerNodes = elem[0].firstElementChild.childNodes;\n        var thisVideo = thesePlayerNodes[1];\n        var thisThumbnail = thesePlayerNodes[3];\n        var thisPlayBtn = thesePlayerNodes[5];\n        var thisLoading = thesePlayerNodes[7];\n\n        if (thisVideo.paused || thisVideo.ended){\n          thisPlayBtn.className = 'pause';\n          thisThumbnail.className = 'pause';\n          thisVideo.play();\n          if (scope.isMobileUser){\n            if (thisVideo.requestFullscreen){\n              thisVideo.requestFullscreen();\n            } else if (thisVideo.webkitRequestFullscreen){\n              thisVideo.webkitRequestFullscreen();\n            } else if (thisVideo.mozRequestFullScreen){\n              thisVideo.mozRequestFullScreen();\n            } else if (thisVideo.msRequestFullscreen){\n              thisVideo.msRequestFullscreen();\n            }\n          }\n        }\n        else {\n          thisLoading.className = 'media-loading-default';\n          thisPlayBtn.className = 'media-controls';\n          thisThumbnail.className = 'media-thumbnail';\n          thisVideo.pause();\n        }\n      }\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (NETWORK_DEBUG){\n          // console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-portrait-9x16\");\n          } else {\n            classStrings.push(\"video-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"video-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-landscape-16x9\");\n          } else {\n            classStrings.push(\"video-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, video) {\n        var thesePlayerNodes = elem[0].firstElementChild.childNodes;\n        var thisVideo = thesePlayerNodes[1];\n        var thisWidth = $(thisVideo).width();\n        if (NETWORK_DEBUG){\n          // console.log(\"Elem in setD: \", elem);\n          // console.log(\"PlayerNodes in setD: \", thesePlayerNodes);\n          // console.log(\"Video in setD: \", thisVideo);\n          // console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var styleObj = {};\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        styleObj['height'] = height;\n        if (!!video){\n          styleObj['background-image'] = 'url(' + video.mediaThumbUrl + ')';\n          styleObj['background-size'] = 'cover';\n          styleObj['background-position-y'] = setYOffset(video);\n          styleObj['background-position-x'] = setXOffset(video);\n        }\n        if (NETWORK_DEBUG){\n          // console.log(\"Set Dimensions Object: \", styleObj);\n        }\n        return styleObj;\n      }\n\n      function setYOffset(video){\n        var offset;\n        if (!!video.mediaAspectFeed.y){\n          offset = '-' + video.mediaAspectFeed.y + 'px';\n        }\n        else if (!!video.mediaAspectFull.y){\n          offset = '-' + video.mediaAspectFull.y + 'px';\n        }\n        return offset;\n      }\n\n      function setXOffset(video){\n        var offset;\n        if (!!video.mediaAspectFeed.x){\n          offset = '-' + video.mediaAspectFeed.x + 'px';\n        }\n        else if (!!video.mediaAspectFull.x){\n          offset = '-' + video.mediaAspectFull.x + 'px';\n        }\n        return offset;\n      }\n\n    },\n    templateUrl: 'partials/mediaPlayer.html'\n  };\n}]);\n\nangular.module('TopicModule')\n.directive('ngElementReady', [function() {\n  return {\n    priority: -1000,\n    restrict: \"A\",\n    link: function($scope, $element, $attributes) {\n        $scope.$eval($attributes.ngElementReady); // execute expression from attribute\n    }\n  };\n}]);\n\n","angular.module('TopicModule')\n.directive('embedPlayer', ['$sce', 'UserAgentService',\n  function ($sce, UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '='\n    },\n    link: function(scope,elem,attr) {\n\n      scope.isMobileUser = UserAgentService.isMobileUser();\n\n      scope.trustSrcHtml = function(src){\n        return $sce.trustAsHtml(src);\n      }\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (NETWORK_DEBUG){\n          // console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-portrait-9x16\");\n          } else {\n            classStrings.push(\"video-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"video-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-landscape-16x9\");\n          } else {\n            classStrings.push(\"video-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, video) {\n        var thesePlayerNodes = elem[0].childNodes;\n        var thisVideo = thesePlayerNodes[0];\n        var thisWidth = $(thisVideo).width();\n        if (NETWORK_DEBUG){\n          // console.log(\"PlayerNodes in setD: \", thesePlayerNodes);\n          // console.log(\"Video in setD: \", thisVideo);\n          // console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        var iframePlayer = thisVideo.childNodes[0];\n        $(iframePlayer).css('height',height);\n        if (NETWORK_DEBUG){\n          // console.log(\"Setting Height On: \", iframePlayer, height);\n        }\n      }\n\n    },\n    templateUrl: 'partials/embedPlayer.html'\n  };\n}]);","angular.module('TopicModule')\n.directive('imageControl', ['$sce',\n  function ($sce) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '='\n    },\n    link: function(scope,elem,attr) {\n\n      scope.imageClick = function(imageURL) {\n        event.cancelBubble = true;\n        if(event.stopPropagation) event.stopPropagation();\n\n        $.magnificPopup.open({\n          items: {\n            type:'image',\n            src: imageURL,\n          },\n          type: 'inline',\n          callbacks: {\n            open: function(){\n              $('body').bind('touchmove', function(e){e.preventDefault()});\n            },\n            close: function(){\n              $('body').unbind('touchmove');\n            }\n          }\n        });\n      };\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (NETWORK_DEBUG){\n          // console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"image-portrait-9x16\");\n          } else {\n            classStrings.push(\"image-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"image-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"image-landscape-16x9\");\n          } else {\n            classStrings.push(\"image-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, image) {\n        var thisImage = elem[0].childNodes[0];\n        var thisWidth = $(thisImage).width();\n        if (NETWORK_DEBUG){\n          // console.log(\"Image in setD: \", thisImage);\n          // console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var styleObj = {};\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        styleObj['height'] = height;\n        if (!!image){\n          styleObj['background-image'] = 'url(' + image.mediaUrl + ')';\n          styleObj['background-size'] = 'cover';\n          styleObj['background-position-y'] = setOffsets(image, 'y', height) || '';\n          styleObj['background-position-x'] = setOffsets(image, 'x', thisWidth) || '';\n        }\n\n        if (NETWORK_DEBUG){\n          // console.log(\"Set Dimensions Object: \", styleObj);\n        }\n        return styleObj;\n      }\n\n      function setOffsets(image, direction, ref){\n        var offset;\n        var offsetScale; \n        if (direction === 'y'){\n          if (!!image.mediaAspectFeed.y){\n            offsetScale = ref / image.mediaAspectFeed.h;\n            var scaledY = image.mediaAspectFeed.y * offsetScale;\n            offset = '-' + scaledY + 'px';\n          }\n        }\n        if (direction === 'x'){\n          if (!!image.mediaAspectFeed.x){\n            offsetScale = ref / image.mediaAspectFeed.w;\n            var scaledX = image.mediaAspectFeed.x * offsetScale;\n            offset = '-' + scaledX + 'px';\n          }\n        }\n        return offset;\n      }\n\n    },\n    templateUrl: 'partials/imageControl.html'\n  };\n}]);","angular.module('NetworkModule')\n.service('DataService', [\"TopicService\",\"CommentService\",\"ReplyService\",\"ChannelService\",\"SocialService\",\"VideoService\",\n  function (TopicService, CommentService, ReplyService, ChannelService, SocialService, VideoService) {\n  \n  var DATA_TYPE_TOPIC = \"topic\";\n  var DATA_TYPE_COMMENT = \"comment\";\n  var DATA_TYPE_REPLY = \"reply\";\n  var DATA_TYPE_SCORE = \"score\";\n  var DATA_BANT_ID_LENGTH = 16;\n\n  function delegateSetComments(commentsData) \n  { \n    if(commentsData.error){\n      console.log(\"Comments Error message from network: \", commentsData.error);\n    }\n    else if(commentsData.push){\n      if(commentsData.method == \"UPSERT\"){\n        if (NETWORK_DEBUG) console.log(\"Comment Upsert\");\n        if(CommentService.updateComment(commentsData) == 0)\n          TopicService.updateCommentCount(1);\n      }\n      else if(commentsData.method == \"REMOVE\"){\n        //TODO: Design requirement for how to show a deleted comment\n//        if(CommentService.removeComment(commentsData) == 0)\n//          TopicService.updateCommentCount(-1);  \n      }\n    }\n    else {\n      if(commentsData.method == \"POST\"){\n        if (NETWORK_DEBUG) console.log(\"Comment Post\");\n        var uri = commentsData.uri;\n        if(uri != undefined){\n          var commentId = uri.slice(-DATA_BANT_ID_LENGTH);\n//          console.log(\"Comment ID: \"+ commentId);\n//          console.log(\"uri: \"+ uri);\n          if(uri == \"/v1.0/comment/create\"){\n            if (NETWORK_DEBUG) console.log(\"Comment Post Create\");\n            CommentService.appendToComments(commentsData);\n            TopicService.updateCommentCount(1);\n          }\n          else{\n            if(CommentService.updateCommentLocalData(uri, commentId) == 0){\n              if (NETWORK_DEBUG) console.log(\"Comment Post Delete\");\n              TopicService.updateCommentCount(-1);\n            }\n          }\n        }\n      }\n      else\n        CommentService.setComments(commentsData);\n\n    }\n  }\n\n  function delegateSetTopic(topicData)\n  {\n    if(topicData.error){\n      console.log(\"Topic Error message from network: \", topicData.error);\n    }\n    else if(topicData.push){\n      if(topicData.method == \"UPSERT\")\n        TopicService.updateTopic(topicData.data);\n      else if(topicData.method == \"REMOVE\")\n        TopicService.removeTopic(topicData.data);\n    }\n    else\n      TopicService.setTopic(topicData);\n  }\n\n  function delegateSetReplies(replyData)\n  {\n    if(replyData.error){\n      console.log(\"Topic Error message from network: \", replyData.error);\n    }\n    else if(replyData.push){\n      console.log(\"reply pushed \");\n      if(replyData.method == \"UPSERT\")\n        if(ReplyService.updateReply(replyData) === 0){\n          if(replyData.data != undefined)\n          CommentService.updateReplyCountById(replyData.data.commentId,1);\n        }\n      else if(replyData.method == \"REMOVE\"){\n        //TODO: no action required\n        //ReplyService.removeReply(replyData);\n      }\n    }\n    else {\n      if(replyData.method == \"POST\"){\n        var uri = replyData.uri;\n        if(uri != undefined){\n          var id = uri.slice(-DATA_BANT_ID_LENGTH);\n//          console.log(\"Comment ID: \"+ id);\n//          console.log(\"uri: \"+ uri);\n          if(uri == \"/v1.0/reply/create\"){\n            ReplyService.appendToReplies(replyData);\n            if(replyData.data != undefined)\n              CommentService.updateReplyCountById(replyData.data.commentId, 1);\n          }\n          else{\n            var commentId =  ReplyService.getCommentIdByReply(id);\n            if(ReplyService.updateReplyLocalData(uri, id) == 0)\n              CommentService.updateReplyCountById(commentId, -1);\n          }\n        }\n      }\n      else\n        ReplyService.setReplies(replyData);\n    }\n      \n  }\n  \n  function delegateSetChannel(data) {\n    if(data.error){\n      console.log(\"Topic Error message from network: \", data.error);\n    }\n    else {\n      console.log(\"delegateSetChannel: \", data);\n      ChannelService.setTopicData(data);\n    }\n  }\n  \n  function delegateSetSocial(data) {\n    if(data.error){\n      console.log(\"Social Error message from network: \", data.error);\n    }\n    else {\n      console.log(\"SOCIAL GET\");\n      SocialService.setSocialData(data);\n    }\n  }\n\n  function delegateSetVideo(data) {\n    if(data.error){\n      console.log(\"Video Error message from network: \", data.error);\n    }\n    else {\n      console.log(\"VIDEO GET\");\n      VideoService.setVideoData(data);\n    }\n  }\n\n  return {\n    setVideo:delegateSetVideo,\n    setSocial:delegateSetSocial,\n    setChannel:delegateSetChannel,\n    setTopic:delegateSetTopic,\n    setComments:delegateSetComments,\n    setReplies:delegateSetReplies,\n    setWatchTopic:function(watched){\n      TopicService.setWatchTopic(watched);\n    }\n  };\n\n}]);","angular.module('TopicModule')\n.factory('TopicService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\",\n  function (DateUtilityService,Bant,FDSUtility) {\n\n  var TOPIC_BASE_URI = \"/v1.0/topic/show/\";\n  var LIKE_TOPIC_URI = \"/v1.0/topic/like/\";\n  var UNLIKE_TOPIC_URI = \"/v1.0/topic/unlike/\";\n  var WATCH_TOPIC_URI = \"/v1.0/topic/watch/\";\n  \n  var _channelId;\n  var _userType;\n  \n  var _isTopicWatched = false;\n  var _topic;\n  var _topicType;\n  var _id;\n  var _title;\n  var _game;\n  var _status;\n  var _score;\n  var _gameStats;\n  var _links;\n  var _scheduledAt;\n  var observerCallbacks = []; \n  var directComment; //bool flag to indicate whether user tapped on a comment's \"comment\" icon\n\n  function setTopicData(topicData) \n  {\n    if(topicData.data != undefined){\n      if(topicData.data.content != undefined ){\n        _title = topicData.data.content.title;\n      }\n\n\n      _topicType = topicData.data.topicType;\n      console.log(\"TOPIC TYPE :\"+_topicType );\n      _id = topicData.data.id;\n      if(_topicType == \"livegame\"){\n        _game = topicData.data.game;\n        if(_game != undefined){\n          _scheduledAt = DateUtilityService.getGameScheduledTime(_game.scheduledAt);\n          _score = _game.score;\n  //        Future game: live == false AND final == false.\n  //        Live game: live == true.\n  //        Past game: final == true.\n          if(_score.live == undefined && _score.final == undefined)\n            _status = \"future\";\n          else if(_score.live == true)\n            _status = \"live\";\n          else if(_score.final == true)\n            _status = \"past\";\n          // console.log(\"GAME Status  :\"+ _status );\n  \n          if(_status == \"live\"){\n            console.log(\"_gameStats\" + _score.status);\n            _gameStats = _score.status;\n          }\n        }\n      }\n\n      _topic = Bant.bant(topicData.data);\n      notifyObservers();\n    }\n    else if(topicData.method == \"POST\"){\n\n      //Handle operations dependent on POST\n      if(topicData.uri == WATCH_TOPIC_URI+_id){\n        if(NETWORK_DEBUG)\n          console.log(\"Topic watch success\");\n        _isTopicWatched = true;\n      }\n      else if(topicData.uri == LIKE_TOPIC_URI+_id)\n      {\n        if(NETWORK_DEBUG)\n          console.log(\"Topic liked success\");\n        _topic = Bant.updateBantLiked(_topic, true);\n        notifyObservers();\n      }\n      else if(topicData.uri == UNLIKE_TOPIC_URI+_id){\n        if(NETWORK_DEBUG)\n          console.log(\"Topic unliked success\");\n        _topic = Bant.updateBantLiked(_topic, false);\n        notifyObservers();\n      }\n    }\n  }\n\n  function updateTopicData(scoreData){\n    console.log(\"Topic Service scoreData :\" + scoreData)\n    setScoreData(scoreData);\n  }\n\n  function setScoreData(scoreData) \n  {\n    _score = scoreData;\n    //console.log(\"TopicService  insideScore\"+_score );\n    if(_score != undefined){\n      if(_score.live == true){\n        _status = \"live\";\n      }\n      _gameStats = _score.status;\n      console.log(\"Game Points :\" + _score.points[0] + \" : : \"+_score.points[1] );\n      console.log(\"Game Period :\" + _gameStats[0]);\n      console.log(\"Game Period :\" + _gameStats[1]);\n      notifyObservers();\n    }\n  }\n  \n  function updateCommentCount(value){\n    console.log(\"Update comment count: \" + _topic.metrics.comments + \"     Value : \"+ value);\n    if(_topic!= undefined && _topic.metrics != undefined){\n      if(value == 1)\n      _topic.metrics.comments == undefined ? _topic.metrics.comments =1: _topic.metrics.comments = _topic.metrics.comments+1;\n      else\n        _topic.metrics.comments == undefined ? _topic.metrics.comments =0: _topic.metrics.comments = _topic.metrics.comments-1; \n    }\n    notifyObservers();\n  }\n\n  function getTopicRequest(topicId){\n    var uri = TOPIC_BASE_URI+topicId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"GET\",\n        \"uri\": encodeURI(uri)};\n  }\n  function getFollowChannelRequest(){\n    \n    var channelId = 0;\n    if(_topic!= undefined && _topic.owner!= undefined)\n      channelId = _topic.owner.id;\n      _channelId = channelId;\n    var uri = \"/v1.0/channel/follow/\" + channelId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(uri)};\n  }\n  \n  function watchTopicRequest(topicId){\n    var uri = WATCH_TOPIC_URI+topicId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(uri)};\n  }\n\n  function likeTopicRequest(){\n    console.log(\"Like topic request invoked\"+_id);\n    return  varLikeParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(LIKE_TOPIC_URI + _id)};\n\n\n  }\n\n  function unlikeTopicRequest(){\n    return  varLikeParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(UNLIKE_TOPIC_URI + _id)};\n\n\n  }\n\n  //call this when you know 'data' has been changed\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n  \n  function registerObserverCallback(callback){\n    //register an observer\n    var callbackLength  = observerCallbacks.length;\n    for (var i = 0; i < callbackLength; i++){\n      if (observerCallbacks[i] === callback){\n        return;\n      }\n    }\n    observerCallbacks.push(callback);\n  }\n\n  return {\n    getTopic: function(){ \n      return _topic ;},\n    getTopicId: function(){ \n      return _id ;},\n    getTopicType: function(){ \n      return _topicType ;},\n    getGame: function(){  \n      return _game;},\n    getGameTime: function(){\n      return _scheduledAt;\n    },\n    getTeamA: function(){ \n      if(_game != undefined) {\n        return _game.teams[0];\n      }},\n    getTeamB: function(){ \n      if(_game != undefined) {\n        return _game.teams[1];}\n    },\n    getScoresTitle: function(){   \n      if(_game != undefined && _game.links != undefined) \n        return _game.links[0].title;},\n    getScoresLink: function(){  \n      if((_game != undefined) && (_game.links != undefined)) \n        return _game.links[0].url;},\n    getScore: function(){ \n      if(_score != undefined) \n        return _score;},\n    getGameStatus: function() { \n      return _status;},\n    getGamePeriod: function() { \n      return _gameStats[0];},\n    getGameClock: function() {  \n      return _gameStats[1];},\n//    getSectionType: function(sectionNumber){ \n//    //TODO check for section length\n//    if(sectionNumber == undefined )\n//    return _topic.data.content.sections[0].type;\n//    else\n//    return _topic.data.content.sections[sectionNumber].type\n//    },\n    getChannelId:function(){  \n      if(_topic != undefined) \n        return _topic.owner.id;},\n    getTitle:function(){  \n      return _title;},\n    getHtml:function(){ \n      if(_topic != undefined) \n        return _topic.html},\n//    getMedia:function(){return _media},\n//    getTweet:function(){return _tweet},\n//    getOgp:function(){return _ogp},\n//    getLink:function(){return _link},\n    getTimeCreatedAt:function(){  \n      if(_topic != undefined) \n        return _topic.createdAt},\n    getLiked:function(){  \n      if(_topic != undefined) \n        return _topic.signal.like},\n    getMetrics:function(){  \n      if(_topic != undefined) \n        return _topic.metrics},\n    \n    watchTopicRequest:watchTopicRequest,\n    \n    getLikeTopicRequest:likeTopicRequest,\n    \n    getUnlikeTopicRequest:unlikeTopicRequest,\n    \n    getFollowChannelRequest:getFollowChannelRequest,\n    \n    getTopicRequest:getTopicRequest,\n    \n    isWatchingTopic: function(){ return _isTopicWatched;},\n    \n    setWatchTopic: function(watch){_isTopicWatched = watch;},\n    \n    setTopicId: function(topicId){_id = topicId ;},\n    \n    setChannel: function(channelId){_channelId = channelId; },\n    getChannel: function(){return _channelId ; },\n    \n    setTopic:setTopicData,\n    \n    updateTopic:updateTopicData,\n    \n    updateCommentCount: updateCommentCount,\n    \n    registerObserverCallback:registerObserverCallback,\n    \n    directComment:directComment\n\n  };\n\n}]);","angular.module('SocialModule')\n.factory('VideoService', [\"Bant\",\n\tfunction (Bant) {\n\tvar LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n\tvar observerCallbacks = [];\n\tvar _videoArray = [];\n\tvar _offset = 0;\n\tvar LIMIT = 10;\n\n\n\tfunction setVideoData(videoData) {\n\t\t_videoArray = [];\n\t\tvar tempData = videoData.data.results;\n\t\tvar len = tempData.length;\n\n\t\tif (!!tempData && len > 0){\n\t\t\tfor (i = 0; i < len; i++){\n\t\t\t\tvar _videoObject = Bant.bant(tempData[i]);\n\t\t\t\tif (!!_videoObject.id)\n\t\t\t\t\t_videoArray.push(_videoObject);\n\t\t\t}\n\t\t\t_offset = videoData.data.nextOffset;\n\t\t\tnotifyObservers();\n\t\t}\n\t}\n\n\n\t//call this when you know 'comments' has been changed\n\tvar notifyObservers = function(){\n\t\tangular.forEach(observerCallbacks, function(callback){\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tfunction registerObserverCallback(callback){\n\t\t//register an observer\n\t\tvar callbackLength  = observerCallbacks.length;\n\t\twhile(callbackLength > 0){\n\t\t\tcallbackLength = observerCallbacks.length;\n\t\t\tobserverCallbacks.pop();\n\t\t}\n\t\tobserverCallbacks.push(callback);\n\t}\n\n\tfunction getVideoDataRequest(id, offset){\n\t\tvar reqOffset = offset || _offset;\n\t\tvar request = {\n\t\t\t\"rid\": \"video\",\n\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\"method\": \"GET\",\n\t\t\t\"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset+\"&filter=video\")\n\t\t};\n\t\tconsole.log(\"Video Request: \", request);\n\t\treturn request;\n\t}\n\n\treturn {\n\t\tvideoArray: function(){\n\t\t\treturn _videoArray;\n\t\t},\n\t\tresetVideoOffset: function(){\n      _offset = 0;\n    },\n\t\tsetVideoData:setVideoData,\n\t\tgetVideoDataRequest:getVideoDataRequest,\n\t\tregisterObserverCallback:registerObserverCallback\n\t};\n\n}]);","angular.module('SocialModule')\n.factory('SocialService', [\"Bant\", \n  function (Bant) {\n  var LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n  var observerCallbacks = [];\n  var _socialArray = [];\n  var _offset = 0;\n  var LIMIT = 20;\n\n\n  function setSocialData(socialData) {\n    _socialArray = [];\n    var tempData = socialData.data.results;\n    var len = tempData.length;\n\n    if (!!tempData && len > 0){\n      for (i = 0; i < len; i++){\n        var _socialObject = Bant.bant(tempData[i]);\n        if (!!_socialObject.id)\n          _socialArray.push(_socialObject);\n      }\n      _offset = socialData.data.nextOffset;\n      notifyObservers();\n    }\n  };\n\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n\n  function registerObserverCallback(callback){\n    // register an observer for provided feed\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  };\n\n  function getSocialDataRequest(id, offset){\n    var reqOffset = offset || _offset;\n    var request = {\n      \"rid\": \"social\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset)\n    };\n    console.log(\"Social Request: \", request);\n    return request;\n  };\n\n  return {\n    socialArray: function(){\n      return _socialArray;\n    },\n    resetSocialOffset: function(){\n      _offset = 0;\n    },\n    setSocialData: setSocialData,\n    getSocialDataRequest: getSocialDataRequest,\n    registerObserverCallback: registerObserverCallback\n  };\n\n}]);","angular.module(\"SplashModule\", [])\n.factory(\"SplashService\", function(){\n  var _hidePeelSplash = true;\n  var _hideSSSplash = true;\n \n  return {\n    hidePeelSplash: function(){\n      return _hidePeelSplash;\n    },\n    hideSSSplash: function(){\n      return _hideSSSplash;\n    },\n    setPeelSplash: function(val){\n      _hidePeelSplash = val;\n    },\n    setSSSplash: function(val){\n      _hideSSSplash = val;\n    }\n  }\n});","angular.module('NetworkModule')\n.factory('CommentService', [\"Bant\",\"DateUtilityService\",\"FDSUtility\",\n  function (Bant,DateUtilityService,FDSUtility) {\n  var LIST_COMMENTS_URI = \"/v1.0/topic/comments/list/\"\n  var SHOW_COMMENT_URI = \"/v1.0/comment/show/\";\n    \n  var POST_COMMENT_URI=\"/v1.0/comment/create\";\n  var UPDATE_COMMNET_URI = \"/v1.0/comment/content/update/\";\n  var PIN_COMMENT_URI = \"/v1.0/comment/pin/\";\n  var DELETE_COMMENT_URI = \"/v1.0/comment/delete/\";\n  \n  var LIKE_COMMENT_URI = \"/v1.0/comment/like/\";\n  var UNLIKE_COMMENT_URI = \"/v1.0/comment/unlike/\";\n\n  var HIDE_COMMENT_URI = \"/v1.0/comment/hide/\";\n  var UNHIDE_COMMENT_URI = \"/v1.0/comment/unhide/\";\n  \n  var FLAG_COMMENT_URI = \"/v1.0/comment/flag/\";\n  var UNFLAG_COMMENT_URI = \"/v1.0/comment/unflag/\";\n  \n  var observerCallbacks = [];\n  var tempObserverCallbacks = [];\n  var _comments = [];\n  var _pinnedComments = 0;\n  var _offset = 0;\n\n  var _loadedComments = false;\n\n  function setComments(commentsData) {\n    //TODO clear comments for complete refresh Comments API\n    _comments = [];\n    tempCommentsData = commentsData.data.results;\n    if(tempCommentsData != undefined && tempCommentsData.length>0){\n      var len = tempCommentsData.length;\n      for(i=0;i<len;i++){\n        var _commentObject = {};\n        _commentObject = Bant.bant(tempCommentsData[i]);\n        if(_commentObject.id != undefined)\n          _comments.push(_commentObject);\n        // console.log(\"Comments in set comment Service type:\"+_commentObject.type + \"  \" +_commentObject.html );\n      }\n      // if (commentsData.data.prevOffset === \"\"){\n      //   notifyObservers(true);\n      // } else {\n        notifyObservers();\n      // }\n      // _offset = commentsData.data.nextOffset;\n    }\n    else{\n      //PArticular case when user is on reply page and requires comment by comment ID\n      var data = commentsData.data;\n      if((commentsData.method == \"GET\") &&(commentsData.uri.substring(0,SHOW_COMMENT_URI.length) == SHOW_COMMENT_URI) ){\n        if(NETWORK_DEBUG) console.log(\"Processing Show comment\");\n        var _commentObject = {};\n        _commentObject = Bant.bant(data);\n        if(_commentObject.id != undefined)\n          _comments.push(_commentObject); \n        notifyObservers();\n      }\n    }\n  }\n\n  function appendToComments(postCommentData) {\n    var tempComment = postCommentData.data;\n    if(tempComment!= undefined){\n      var _commentObject = {};\n      _commentObject = Bant.bant(tempComment);\n      if(_commentObject.id != undefined && (_commentObject.html != undefined || _commentObject.media != undefined)){\n        var i = 0;\n        if(_comments.length >0)\n        while(_comments[i].pin == true)\n          i++; \n        _pinnedComments = i;\n        //console.log(\"Pinned comments \"+ i);\n        if(_pinnedComments>0)\n          _comments.splice(i,0,_commentObject);\n        else\n          _comments.unshift(_commentObject);\n      }\n      // console.log(\"appendToComments CommentService\"+_commentObject.html );\n    }\n    notifyObservers();\n  }\n\n\n\n\n  function updateComment(commentData){\n    //if comments ID exist, update it \n    //else append to existing list\n    var commentObj = commentData.data;\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == commentObj.id){\n        //update\n        _comments[i] = Bant.bant(commentObj);\n        return 1;\n      }\n    }\n    appendToComments(commentData);\n    //notifyObservers();\n    console.log(\"In Comment Service update comment\");\n    return 0;\n  }\n  \n  function updateLocalData(newData){\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == newData.id){\n        //update\n        _comments[i] = newData;\n        return;\n      }\n    }\n  }\n  \n  function updateLikeCommentWithId(id, liked){\n    if(NETWORK_DEBUG)\n    console.log(\"updateLikeCommentWithId :\"+ id + \"   liked \"+ liked);\n    if((id != undefined)){\n      var tempObject;\n      tempObject = getCommentById(id);\n      tempObject = Bant.updateBantLiked(tempObject, liked);\n      updateLocalData(tempObject);\n\n      notifyObservers();\n    }\n    \n  }\n\n  function removeComment(commentData){\n    var commentObj = commentData.data;\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == commentObj.id){\n        //remove element\n        _comments.splice(i,1);\n        console.log(\"found Comment\")\n        return 0;\n      }\n    }\n    return 1;\n\n  }\n  \n  function getCommentById(id){\n    if(NETWORK_DEBUG) console.log(\"_comments :\"+ _comments.length);\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == id){\n        //remove element\n        return _comments[i];\n      }\n    }\n  }\n\n\n\n\n  //call this when you know 'comments' has been changed\n  var notifyObservers = function(temp){\n    if (temp){\n      console.log(\"IN TEMP\");\n      angular.forEach(tempObserverCallbacks, function(callback){\n        callback();\n      });\n    } else {\n      console.log(\"IN REG\");\n      angular.forEach(observerCallbacks, function(callback){\n        callback();\n      });\n    }\n  };\n  \n  function registerObserverCallback(callback, temp){\n    //register an observer\n    if (temp){\n      var callbackLength = tempObserverCallbacks.length;\n      while (callbackLength > 0){\n        callbackLength = tempObserverCallbacks.length;\n        tempObserverCallbacks.pop();\n      }\n      tempObserverCallbacks.push(callback);\n    } else {\n      var callbackLength  = observerCallbacks.length;\n      while (callbackLength > 0){\n        callbackLength = observerCallbacks.length;\n        observerCallbacks.pop();\n      }\n      observerCallbacks.push(callback);\n    }\n  }\n  \n  function commentGetRequest(uri){\n    // var queryStr;\n    // if (_offset === 0){\n    //   queryStr = \"?limit=10&offset=\" + _offset;\n    // } else {\n    //   queryStr = \"?offset=\" + _offset;\n    // }\n    return  {\"rid\": \"comment\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(uri)}\n  }\n  function commentPostRequest(uri){\n    return  {\"rid\": \"comment\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"POST\",\n      \"uri\": encodeURI(uri)}\n  }\n  function getCommentsRequest(commentId){\n    var uri = LIST_COMMENTS_URI+commentId;\n    return  commentGetRequest(uri);\n  }\n  \n  function getCommentByIdRequest(commentId){\n    var uri = SHOW_COMMENT_URI + commentId;\n    return  commentGetRequest(uri);\n  }\n\n  function postCommentRequest(topicId, commentData){\n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData}]},\n          \"topicId\": topicId,\n        };\n    return createCommentParams;\n  }\n  function postCommentRequestForMedia(topicId, commentData, mediaData){\n    var m = {\"media\":[mediaData]};\n    \n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData},{\"type\":\"media\"}]},\n          \n          \"topicId\": topicId,\n        };\n    createCommentParams.data.content.sections[1].media = m.media;\n    console.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n    return createCommentParams;\n  }\n\n  function postCommentRequestForShare(topicId, commentData, embedData){\n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData},{\"type\":\"embed\"}]},\n          \n          \"topicId\": topicId,\n        };\n    createCommentParams.data.content.sections[1].embed = embedData;\n    console.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n    return createCommentParams;\n  }\n\n  function likeCommentRequest(id){\n    return commentPostRequest(LIKE_COMMENT_URI + id);\n\n  }\n\n  function unlikeCommentRequest(id){\n    return commentPostRequest(UNLIKE_COMMENT_URI + id);\n  }\n  \n  function hideCommentRequest(id){\n    return commentPostRequest(HIDE_COMMENT_URI + id);\n\n  }\n\n  function unhideCommentRequest(id){\n    return commentPostRequest(UNHIDE_COMMENT_URI + id);\n  }\n  \n  function flagCommentRequest(id){\n    return commentPostRequest(FLAG_COMMENT_URI + id + \"?reason=spam\");\n\n  }\n\n  function unflagCommentRequest(id){\n    return commentPostRequest(UNFLAG_COMMENT_URI + id);\n  }\n  \n  function deleteCommentRequest(id){\n    return commentPostRequest(DELETE_COMMENT_URI + id);\n  }\n  \n  function isCommentLiked(id){\n    return FDSUtility.isLikedById(_comments,id);\n  }\n  \n  \n  function updateReplyCountById(id, value){\n    if(id != undefined ){\n    //var id = replyData.commentId;\n    var tempStructure = getCommentById(id);\n    if(tempStructure != undefined){\n      if(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.metrics.replies :\"+ tempStructure.metrics.replies);\n      if(value == -1){\n      tempStructure.metrics.replies == undefined ? tempStructure.metrics.replies = 0: tempStructure.metrics.replies = tempStructure.metrics.replies - 1;\n      }\n      else {\n        \n        tempStructure.metrics.replies == undefined ? tempStructure.metrics.replies = 1: tempStructure.metrics.replies = tempStructure.metrics.replies + 1;\n      }\n      updateLocalData(tempStructure); \n    notifyObservers();\n    }\n    }\n    \n  }\n\n  function updateCommentLocalData(uri,id){\n    if(uri == LIKE_COMMENT_URI+id){\n      console.log(\"calling update like \");\n      updateLikeCommentWithId(id, true)\n    }\n    else if(uri == UNLIKE_COMMENT_URI+id){\n      updateLikeCommentWithId(id, false)\n    }\n    else if(uri == DELETE_COMMENT_URI+id){\n      _comments = FDSUtility.deleteById(_comments,id);\n      notifyObservers();\n      return 0;\n    }\n    else if(uri == FLAG_COMMENT_URI+id){\n      _comments = FDSUtility.flagById(_comments, false);\n      }\n    else if(uri == UNFLAG_COMMENT_URI+id){\n      _comments = FDSUtility.flagById(_comments, false);\n    }\n    else if(uri == HIDE_COMMENT_URI+id){\n      _comments = FDSUtility.hideById(_comments, true);\n    }\n    else if(uri == UNHIDE_COMMENT_URI+id){\n      _comments = FDSUtility.hideById(_comments, false);\n    }\n  }\n\n\n  return {\n    comments: function(){\n      return _comments },\n\n      setComments:setComments,\n      updateComment:updateComment,\n      appendToComments:appendToComments,\n      updateLikeCommentWithId:updateLikeCommentWithId,\n      updateCommentLocalData:updateCommentLocalData,\n      updateReplyCountById:updateReplyCountById,\n      removeComment:removeComment,\n      postCommentRequest:postCommentRequest,\n      postCommentRequestForMedia:postCommentRequestForMedia,\n      postCommentRequestForShare:postCommentRequestForShare,\n      getLikeCommentRequest:likeCommentRequest,\n      getUnlikeCommentRequest:unlikeCommentRequest,\n      registerObserverCallback:registerObserverCallback,\n      getCommentsRequest:getCommentsRequest,\n      getCommentById:getCommentById,\n      getCommentByIdRequest:getCommentByIdRequest,\n      deleteCommentRequest:deleteCommentRequest,\n      flagCommentRequest:flagCommentRequest,\n      isCommentLiked:isCommentLiked,\n      getNumPinComments:function(){\n        return _pinnedComments;\n      },\n      loadedComments: function(){\n        return _loadedComments;\n      },\n      setLoadedComments: function(val){\n        _loadedComments = val;\n      }\n  };\n\n}]);","angular.module('NetworkModule')\n.service('DateUtilityService', function () {\n\n\tfunction timeSince(timeStamp) {\n\t\t// console.log(\"timeSatmp\", timeStamp);\n\t\tvar now = new Date();\n\t\tvar createdDate = new Date(timeStamp);\n\t\tsecondsPast = (now.getTime() - createdDate.getTime()) / 1000;\n\t\tif(secondsPast < 60){\n\t\t\treturn 'now';\n\t\t}\n\t\tif(secondsPast < 3600){\n\t\t\treturn parseInt(secondsPast/60) + 'm';\n\t\t}\n\t\tif(secondsPast < 86400){\n\t\t\treturn parseInt(secondsPast/3600) + 'h';\n\t\t}\n\t\tif(secondsPast < 2592000){\n\n\t\t\tvar daysPassed = secondsPast/86400;\n\t\t\treturn Math.floor(daysPassed) + 'd';\n\t\t}\n\t\tif(secondsPast > 2592000){\n\t\t\tday = createdDate.getDate();\n\t\t\tmonth = createdDate.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \",\"\");\n\t\t\tyear = createdDate.getFullYear() == now.getFullYear() ? \"\" :  \" \"+createdDate.getFullYear();\n\t\t\tconsole.log(\"DATE \"+ day + \" \" + month + year);\n\t\t\treturn day + \" \" + month + year;\n\t\t}\n\t}\n\t\n\tfunction gameScheduleTime(timeStamp){\n\t\tvar date_format = '12';\n\t\tvar createdDate = new Date(timeStamp);\n\t\tday = createdDate.getDate();\n\t\tmonth = createdDate.getMonth() + 1;\n\t\thour = createdDate.getHours();\n\t\tvar hour    = createdDate.getHours();  /* Returns the hour (from 0-23) */\n\t\tvar minutes     = createdDate.getMinutes();  /* Returns the minutes (from 0-59) */\n\t\tvar time  = hour;\n\t\tvar ext     = '';\n\t\tvar timeZone = createdDate.toLocaleString('en', {timeZoneName:'short'}).split(' ').pop();\n\n\t\tif(date_format == '12'){\n\t\t    if(hour > 12){\n\t\t        ext = 'PM';\n\t\t        hour = (hour - 12);\n\n\t\t        if(hour < 10){\n\t\t        \ttime = \"0\" + hour;\n\t\t        }else if(hour == 12){\n\t\t            hour = \"00\";\n\t\t            ext = 'AM';\n\t\t        }\n\t\t    }\n\t\t    else if(hour < 12){\n\t\t    \ttime = ((hour < 10) ? \"0\" + hour : hour);\n\t\t        ext = 'AM';\n\t\t    }else if(hour == 12){\n\t\t        ext = 'PM';\n\t\t    }\n\t\t}\n\n\t\tif(minutes < 10){\n\t\t    minutes = \"0\" + minutes; \n\t\t}\n\n\t\ttime = time + \":\" + minutes + ' ' + ext + ' '+timeZone; \n\t\tdate = month+ \"/\" +day;\n\t\tresult = {\"date\":date,\"time\":time};\n\n\t\tconsole.log(\"Scheduled date : \"+ result.date + \"  Scheduled time : \"+result.time);\n\t\t\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\treturn{\n\t\tgetTimeSince:timeSince,\n\t\tgetGameScheduledTime:gameScheduleTime\n\t};\t\n});","angular.module('NetworkModule')\n.factory('Bant', [\"DateUtilityService\",\n  function (DateUtilityService) {\n  var EXTRACT_MEDIA_TYPE_LENGTH = 5;\n  \n  function extractMediaObject (_bantObject, tempMedia){\n    //if Video update\n    _bantObject.mediaType = tempMedia.mediaType.substring(EXTRACT_MEDIA_TYPE_LENGTH,0);\n    if(_bantObject.mediaType ==\"video\"){\n      _bantObject.mediaThumbUrl = tempMedia.thumbUrl;\n    }\n    _bantObject.mediaUrl = tempMedia.url;\n    if(tempMedia.sizes != undefined){\n    _bantObject.mediaAspectFull = tempMedia.sizes[\"full\"];\n    _bantObject.mediaAspect16x9 = tempMedia.sizes[\"16:9\"];\n    _bantObject.mediaAspect1x1 = tempMedia.sizes[\"1:1\"];\n    _bantObject.mediaAspect2x1 = tempMedia.sizes[\"2:1\"];\n    }\n    if(_bantObject.mediaAspect16x9 != undefined){\n      _bantObject.mediaAspectRatio = 1.778;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect16x9;\n      if (_bantObject.mediaAspect16x9.w < _bantObject.mediaAspect16x9.h){\n        _bantObject.mediaOrientation = \"portrait\";\n      } else {\n        _bantObject.mediaOrientation = \"landscape\";\n      }\n    }\n    else if(_bantObject.mediaAspect1x1 != undefined){\n      _bantObject.mediaAspectRatio = 1;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect1x1;\n      _bantObject.mediaOrientation = \"square\";\n    }\n    else if(_bantObject.mediaAspect2x1 != undefined){\n      _bantObject.mediaAspectRatio = 2;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect2x1;\n      if (_bantObject.mediaAspect2x1.w < _bantObject.mediaAspect2x1.h){\n        _bantObject.mediaOrientation = \"portrait\";\n      } else {\n        _bantObject.mediaOrientation = \"landscape\";\n      }\n    }\n    if(_bantObject.mediaAspectFeed != undefined){\n      _bantObject.mediaAspectFeed.x == undefined ? 0 : _bantObject.mediaAspectFeed.x;\n      _bantObject.mediaAspectFeed.y == undefined ? 0 : _bantObject.mediaAspectFeed.y;\n      _bantObject.mediaAspectFeed.w == undefined ? 0 : _bantObject.mediaAspectFeed.w;\n      _bantObject.mediaAspectFeed.h == undefined ? 0 : _bantObject.mediaAspectFeed.h;\n    }\n    if(_bantObject.mediaAspectFull != undefined){\n      _bantObject.mediaAspectFull.x == undefined ? 0 : _bantObject.mediaAspectFull.x;\n      _bantObject.mediaAspectFull.y == undefined ? 0 : _bantObject.mediaAspectFull.y;\n      _bantObject.mediaAspectFull.w == undefined ? 0 : _bantObject.mediaAspectFull.w;\n      _bantObject.mediaAspectFull.h == undefined ? 0 : _bantObject.mediaAspectFull.h;\n    }\n    return _bantObject;\n  }\n  \n  function extractEmbedObject(_bantObject, embedObject){\n//    Type      string        `json:\"type,omitempty\"`      // Type: \"link\", \"media\" or \"html\".\n//    Title     string        `json:\"title,omitempty\"`     // Title.\n//    Text      string        `json:\"text,omitempty\"`      // Text.\n//    Media     []Media       `json:\"media,omitempty\"`     // List of images or videos.\n//    Url       string        `json:\"url,omitempty\"`       // URL.\n//    Playable  bool          `json:\"playable,omitempty\"`  // Link contains playable content such as video.\n//    Html      string        `json:\"html,omitempty\"`      // HTML code to embed.\n//    Mini      bool          `json:\"mini,omitempty\"`      // Use mini display format.\n//    Author    EmbedAuthor   `json:\"author,omitempty\"`    // Author info.\n//    Provider  EmbedProvider `json:\"provider,omitempty\"`  // Provider info.\n//    CreatedAt string        `json:\"createdAt,omitempty\"` // Publication time in RFC3339 format.\n    _bantObject.embedType = embedObject.type;\n    _bantObject.embedTitle = embedObject.title;\n    _bantObject.embedText = embedObject.text;\n    _bantObject.embedMedia = {};\n    if(embedObject.type === 'media' || embedObject.type === 'link'){\n      // console.log(\"*****!!embedObject.media\",embedObject.media,embedObject);\n      if (embedObject.media){\n        _bantObject.embedMedia = extractMediaObject(_bantObject.embedMedia, embedObject.media[0]);\n      }\n    }\n    _bantObject.embedUrl = embedObject.url;\n    _bantObject.embedPlayable = embedObject.playable;\n    _bantObject.embedHtml = embedObject.html;\n    _bantObject.embedMetrics = embedObject.metrics;\n    _bantObject.embedMini = embedObject.mini;\n    _bantObject.embedAuthor = embedObject.author;\n    _bantObject.embedProvider = embedObject.provider;\n    _bantObject.embedCreatedAt = DateUtilityService.getTimeSince(embedObject.createdAt);\n    _bantObject.embedCreatedAtFull = embedObject.createdAt;\n    \n    \n    return _bantObject;\n\n  }\n\n  function Bant(data){\n    var _bantObject = {};\n    _bantObject.id = data.id;\n    _bantObject.author = data.author;\n    _bantObject.owner = data.owner;\n    if(data.content.sections != undefined){\n      _bantObject.sectionsLength = data.content.sections.length;\n\n      for(j=0;j<_bantObject.sectionsLength;j++){\n        _bantObject.type = data.content.sections[j].type;\n        if(_bantObject.type == \"html\")\n          _bantObject.html = data.content.sections[j].html;\n\n        if(_bantObject.type == \"media\"){\n          _bantObject.media = data.content.sections[j].media;\n          _bantObject = extractMediaObject(_bantObject, _bantObject.media[0]);\n        }\n        if(_bantObject.type == \"embed\" || _bantObject.type == \"tweet\"){\n          if (data.content.sections[j].embed !== null){\n            // console.log(\"!!!!!Fiding ID:\",data.content.sections[j]);\n            _bantObject = extractEmbedObject(_bantObject,data.content.sections[j].embed);\n            _bantObject.embed = data.content.sections[j].embed;\n          }\n        }\n        _bantObject.tweet = data.content.sections[j].tweet;\n        _bantObject.ogp = data.content.sections[j].ogp;\n        _bantObject.link = data.content.sections[j].link;\n      }\n    }\n    _bantObject.signal = data.signal;\n    if(_bantObject.signal == undefined){\n      var likeObject = {like:false};\n      _bantObject.signal = likeObject;\n    }\n    else if(_bantObject.signal.like == undefined)\n      _bantObject.signal.like = false;\n    _bantObject.metrics = data.metrics;\n    _bantObject.createdAtFull = data.createdAt;\n    _bantObject.createdAt = DateUtilityService.getTimeSince(data.createdAt);\n    _bantObject.pin = data.pin;\n    _bantObject.commentId = data.commentId;\n    _bantObject.topicId = data.topicId;\n    \n    return _bantObject;\n\n  }\n  \n  \n  \n  function updateBantLiked(data, liked){\n    //if same state, dont do anything\n    if(data.signal.like == liked){\n      if(NETWORK_DEBUG)\n        console.log(\"no need to change   data.signal.like:\"+ data.signal.like);\n      return data;\n    }\n    if(liked){\n      //update like status\n      data.signal.like = true;\n      //increment like count.\n      (data.metrics.likes == undefined) ? data.metrics.likes = 1: data.metrics.likes = (data.metrics.likes + 1);\n    }\n    else{\n      //update like status\n      data.signal.like = false;\n      //decrement like count.\n      if(data.metrics.likes != undefined) \n      data.metrics.likes = (data.metrics.likes - 1);\n    }\n    if(NETWORK_DEBUG)\n      console.log(\"data.metrics.likes :\"+ data.metrics.likes);\n    return data;\n  }\n\n  return {\n    bant: Bant,\n    updateBantLiked : updateBantLiked\n  };\n\n}]);","angular.module('NetworkModule')\n.factory('UserInfoService', [\"ForumStorage\",\"URIHelper\",\n\tfunction (ForumStorage, URIHelper) {\n\t//OLD Creds userId=1, sessionId=dac24379, accessToken=7uFF3QGh-84=\n\t//NEW Creds userId=193, sessionId=53d7b518, accessToken=dsKGKXyZgGs=\n\tvar _userInfo = {};\n\tvar userInfoTemp = {\n\t\t\t\"userId\":\"193\",\n\t\t\t\"accessToken\":\"dsKGKXyZgGs=\",\n\t\t\t\"sessionId\":\"53d7b518\"\n\t};\n\tvar _isUserLoggedIn = false;\n\tvar _userType = \"\";\n\n//\tvar userInfoTemp = {\n//\t\"userId\":\"204\",\n//\t\"accessToken\":\"_uO41ylA_xs=\",\n//\t\"sessionId\":\"b7427f4a\"\n//\t};\n\n\tfunction getUserCredentials(){\n\t\tif(_userInfo == undefined){\n\t\t\tconsole.log(\"UserInfoService : UserId is not defined , using static user, TODO : Remove this for release build\");\n\t\t\t_userInfo = userInfoTemp;\n\t\t\treturn userInfoTemp;\n\t\t}\n\n\t\treturn _userInfo;\n\t}\n\n\tfunction isCurrentUser(id){\n\t\t//console.log(\"Current user id  && id :\"+_userInfo.userId + \" :   \"+ id);\n\t\tif(id == _userInfo.userId)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tfunction setUserCredentials(userId, accessToken, sessionId, userType){\n\t\tconsole.log(\"setUserCredentials: \", userId, accessToken, sessionId, userType);\n\t\t// _userInfo = {};\n\t\t_userInfo.userId = userId;\n\t\t_userInfo.accessToken = accessToken;\n\t\t_userInfo.sessionId = sessionId;\n\t\t_isUserLoggedIn = true;\n\t\t_userInfo.userType = userType;\n\t\t// ForumStorage.clearStorage();\n\t\tForumStorage.setToLocalStorage(\"forumIsLoggedIn\",_isUserLoggedIn);\n\t\tForumStorage.setToLocalStorage(\"forumUserId\",userId);\n\t\tForumStorage.setToLocalStorage(\"forumAccessToken\",accessToken);\n\t\tForumStorage.setToLocalStorage(\"forumSessionId\",sessionId);\n\t\tForumStorage.setToLocalStorage(\"forumUserType\",userType);\n\n\t\t// console.log(\"this.userInfo.userId :\"+ _userInfo.userId);\n\t}\n\n\tfunction hasUserVisited() {\n\t\treturn ForumStorage.getFromLocalStorage(\"hasUserVisited\") ? true : false;\n\t}\n\n\treturn{\n\t\tgetUserCredentials:getUserCredentials,\n\t\tsetUserCredentials:setUserCredentials,\n\t\tisCurrentUser:isCurrentUser,\n\t\thasUserVisited: hasUserVisited,\n\t\tisUserLoggedIn:function(){\n\n\t\t\t//console.log(\"cached : is user logged in : \"+_isUserLoggedIn);\n\t\t\tif(_isUserLoggedIn)\n\t\t\t\treturn true;\n\t\t\telse{\n//\t\t\t\tvar islogged = ForumStorage.getFromLocalStorage(\"forumIsLoggedIn\");\n//\t\t\t\tconsole.log(\"storage : is user logged in : \"+islogged);\n\t\t\t\tif(ForumStorage.getFromLocalStorage(\"forumIsLoggedIn\"))\n\t\t\t\t{\n\t\t\t\t\t_userInfo = {};\n\t\t\t\t\t_userInfo.userId = ForumStorage.getFromLocalStorage(\"forumUserId\");\n\t\t\t\t\t_userInfo.accessToken = ForumStorage.getFromLocalStorage(\"forumAccessToken\");\n\t\t\t\t\t_userInfo.sessionId = ForumStorage.getFromLocalStorage(\"forumSessionId\");\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tisPeelUser:function(){\n\t\t\tURIHelper.isPeelUser();\n\t\t\tif (GEN_DEBUG) console.log(\"ForumStorage.getFromLocalStorage: \"+ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(_userInfo.userType === \"peel\")\n\t\t\t\treturn true;\n\t\t\tif(ForumStorage.getFromLocalStorage(\"forumUserType\") === \"peel\")\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t},\n\t\tisSmartStadiumUser:function(){\n\t\t\tvar ssUser = URIHelper.isSmartStadiumUser();\n\t\t\tif (GEN_DEBUG) console.log(\"ForumStorage.getFromLocalStorage: \", ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(ssUser){\n\t\t\t\t_userInfo.userType = 'email';\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(_userInfo.userType === \"email\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (ForumStorage.getFromLocalStorage(\"forumUserType\") === \"email\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tisMI16User:function(){\n\t\t\tvar MI16User = URIHelper.isTechMUser();\n\t\t\tif (GEN_DEBUG) console.log(\"ForumStorage.getFromLocalStorage: \", ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(MI16User){\n\t\t\t\t_userInfo.userType = 'MI16';\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(_userInfo.userType === \"MI16\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (ForumStorage.getFromLocalStorage(\"forumUserType\") === \"MI16\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tisMWCUser:function(){\n\t\t\tvar MWCUser = URIHelper.isMWCUser();\n\t\t\tif (GEN_DEBUG) console.log(\"ForumStorage.getFromLocalStorage: \", ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(MWCUser){\n\t\t\t\t_userInfo.userType = 'MWC';\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(_userInfo.userType === \"MWC\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (ForumStorage.getFromLocalStorage(\"forumUserType\") === \"MWC\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetUserType:function(){\n\t\t\tif (GEN_DEBUG) console.log(\"UIS _userType - - - \", _userInfo.userType);\n\t\t\treturn _userInfo.userType;\n\t\t},\n\t\tisGuestUser:function(){\n\t\t\tif (GEN_DEBUG) console.log(\"UIS _userType - - - \", _userInfo.userType);\n\t\t\tif(_userInfo.userType === \"guest\" || ForumStorage.getFromLocalStorage(\"forumUserType\") === \"guest\")\n\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\n\t};\n\n}]);","angular.module('AuthModule')\n.factory(\"AuthService\", [\"$state\",\"$stateParams\",\"$http\",\"$window\",\"$location\",\"UserInfoService\", \"TopicService\", \"ReplyService\", \"networkService\", \"ForumDeviceInfo\", \"ChannelService\", \"URIHelper\", \n  function ($state, $stateParams, $http, $window, $location, UserInfoService, TopicService, ReplyService, networkService, ForumDeviceInfo, ChannelService, URIHelper) {\n\n  var userLoggedInToFacebook = false;\n\n  var loginAsGuest = function() {\n  console.log(\"Logging in as Guest\");\n    var userData = {};\n    userData.id = ForumDeviceInfo.getDeviceId();\n    userData.userName = \"GuestUser\";\n\n    var registerParams = setRegistrationParams(\"guest\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var loginToFacebook = function(callback) {\n    FB.login(function (response) {\n      if (response.status === 'connected') {\n        callback();\n        var registerParams = setRegistrationParams(\"facebook\", -25200, response.authResponse);\n        registerUser(registerParams);\n      }\n    });\n  };\n\n  var loginWithPeel = function() {\n    var userData = {};\n    userData.id = URIHelper.getPeelUserId();\n    userData.userName = URIHelper.getPeelUserName();\n\n    var registerParams = setRegistrationParams(\"peel\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var loginWithEmail = function() {\n    var userData = {\n      \"id\": URIHelper.getSSUserId(),\n      \"userName\": URIHelper.getSSUserName()\n    };\n\n    var registerParams = setRegistrationParams(\"email\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var techMLogin = function (name, email, mUserType) {\n    var userData = {\n      \"id\": email,\n      \"userName\": name\n    };\n    if (NETWORK_DEBUG)\n    console.log(\"techMLogin: \", userData);\n    var registerParams = setRegistrationParams(\"email\", -28800, userData);\n    registerUser(registerParams, mUserType);\n  };\n\n  var setRegistrationParams = function (type, utcOffset, userData) {\n    var deviceId = ForumDeviceInfo.getDeviceId();\n    var registerParams = {\n      \"type\": type,\n      \"locale\": \"en_US\",\n      \"utcOffset\": utcOffset,\n      \"deviceType\": \"web\",\n      \"deviceId\": deviceId,\n      \"deviceModel\": \"browser\",\n      \"appKey\": \"testKey\",\n      \"appVersion\": \"1.0\"\n    };\n\n    if (type === 'facebook'){\n      registerParams.facebook = {\n        \"id\": userData.userID,\n        \"accessToken\": userData.accessToken\n      };\n    } else if (type === 'peel'){\n      registerParams.peel = {\n        \"id\": userData.id,\n        \"name\": userData.userName\n      }; \n    } else if (type === 'email'){\n      registerParams.email = {\n        \"id\": userData.id,\n        \"name\": userData.userName\n      }\n    }\n    return registerParams;\n  };\n\n  var registerUser = function(registerParams, mUserType) {\n    // Post request to our api to register/retrieve user\n    var userType = registerParams.type;\n    if (mUserType){\n      userType = mUserType;\n    }\n    $http.post(REGISTER_SERVER_URI, JSON.stringify(registerParams))\n      .then(function (response) {\n        if (response.status === 200) {\n          console.log(\"Successfully Registered User of Type: \" + userType);\n          if (registerParams.type === 'facebook'){\n            userLoggedInToFacebook = true;\n          }\n\n          // Store user credentials in Local Storage\n          UserInfoService.setUserCredentials(\n            response.data.userId, \n            response.data.accessToken, \n            response.data.sessionId,\n            userType);\n        }\n      },\n      function (response) {\n        console.log('Registration Error: ', response);\n      }).then(function (response) {\n        initializeContent();\n      });\n  };\n\n  var initializeContent = function() {\n    console.log(\"Initializing Content\");\n    // Initialize Network Service and determine what type of resource is being accessed\n    networkService.init();\n\n    var initChannel = ChannelService.getChannel();\n    var initTopic = TopicService.getTopicId();\n\n    if (!!initChannel) {\n      console.log(\"found channel ID: \" + initChannel);\n      networkService.send(ChannelService.getLiveGameTopic(initChannel));\n    }\n    else if (!!initTopic) {\n      console.log(\"found Topic ID: \" + initTopic);\n      var initParams = $stateParams;\n      initParams.topicID = initTopic;\n      $state.go('topic.chat', initParams);\n    }\n    else {\n      var initPost = ReplyService.getPostId();\n      if (!!initPost){\n        console.log(\"found post ID: \" + initPost);\n        var initParams = $stateParams;\n        initParams.postID = initPost;\n        $state.go('post', initParams);\n      }\n    }\n  };\n\n  return {\n    loginAsGuest:loginAsGuest,\n    loginToFacebook: loginToFacebook,\n    loginWithPeel: loginWithPeel,\n    loginWithEmail: loginWithEmail,\n    techMLogin: techMLogin,\n    setRegistrationParams: setRegistrationParams,\n    registerUser: registerUser,\n    initializeContent: initializeContent,\n    userLoggedInToFacebook: userLoggedInToFacebook\n  };\n\n}]);\n","angular.module('NetworkModule')\n.service('StaticData', function () {\n\t//TODO: Static data used for Demo, remove this once the Development is complete\n\tvar postAuthors = [\n\t                   {\n\t                \t   \"photo\":\"ana.png\",\n\t                \t   \"name\":\"Ana\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"arod.png\",\n\t                \t   \"name\":\"A-Rod\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"cristiano.png\",\n\t                \t   \"name\":\"Cristiano\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"derek.png\",\n\t                \t   \"name\":\"Derek\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"dwayne.png\",\n\t                \t   \"name\":\"Dwayne\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"erin.png\",\n\t                \t   \"name\":\"Erin\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"jordan.png\",\n\t                \t   \"name\":\"Michael\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"lebron.png\",\n\t                \t   \"name\":\"Lebron\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"lionel.png\",\n\t                \t   \"name\":\"Lionel\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"maria.png\",\n\t                \t   \"name\":\"Maria\"\n\t                   }\n\t                   ];\n\n\tvar loremIpsum = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\";\n\tvar postTypes = [\"text\", \"text\", \"text\", \"photo\", \"video\"];\n\n\tfunction getPostsForTopicID()\n\t{\n\t\tvar staticPosts = [];\n\n\t\tvar fakePhotos = [\"fakePhoto1.jpg\", \"fakePhoto2.jpg\", \"fakePhoto3.jpg\", \"fakePhoto4.jpg\", \"fakePhoto5.jpg\", \"fakePhoto6.jpg\"];\n\t\tvar usedFakePhotos = 0;\n\n\t\tvar fakeVideos = [\"fakeVideo1.jpg\", \"fakeVideo2.jpg\", \"fakeVideo3.jpg\"];\n\t\tvar usedFakeVideos = 0;\n\n\t\tvar peelDemoData = [\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Will this be the year Kaep teaches Sherman a lesson or will Kaep get schooled again?\",\n\t\t                    \t\"postMedia\":\"fakePhoto1.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Remember Kyle Williams - for some reason, I am having recurring nightmares about him again - weird but true:(\",\n\t\t                    \t\"postMedia\":\"fakeVideo1.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Will Kaep be given a free reign to do whatever he wants? Please don't make him a pocket passer because HE IS NOT ONE\",\n\t\t                    \t\"postMedia\":\"fakePhoto2.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Running back of the 9ers this season truly scares the hell out of me - thoughts?\",\n\t\t                    \t\"postMedia\":\"fakeVideo2.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Will our defense save us again? We have seen that this offense needs lot of help:(\",\n\t\t                    \t\"postMedia\":\"fakeVideo3.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Can't wait for this game - gets me want to kick Seahawks every time we play them\",\n\t\t                    \t\"postMedia\":\"fakePhoto3.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Jimmy Graham is going to be such a formidable match-up for our secondary. Not sure if we have the personnel to cover him. Hate the fact that the saehawks offense just got whole lot better this year\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"From contenders to last in the league - reasons for our free fall down the ranks\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"One more drubbing - when are we going to be good again?\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"How do we always fuck up the second half? It is always the take of two halves with us this year. Sucks\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Are you fuckin kidding me - how did we miss that tackle? Why do we keep messing up defensively during 3rd and long? That is the 5th 3rd and long conversion for the Hawks.. Come on DDDDD\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Time to talk about the next season already? Sure nothing is going to change and we are going to suck again.. \",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"We miss Aldon Smith so much - we absolutely don't have an edge rusher.. what a jack-ass.. blew away so much second chances:(\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    }\n\t\t                    ]\n\n\t\tfor(var i = 0 ; i < peelDemoData.length ; i++)\n\t\t{\n\t\t\tvar peelPost = peelDemoData[i];\n\t\t\tvar fakePost = new Object();\n\t\t\tfakePost.postID = i;\n\t\t\tvar minimumCharacterCount = 20\n\t\t\tvar randomCharacterCount = minimumCharacterCount + Math.round(Math.random() * (loremIpsum.length - minimumCharacterCount));\n\t\t\t// console.log(\"random character count: \" + randomCharacterCount);\n\t\t\tvar loremIpsumSubstring = loremIpsum.substring(0, randomCharacterCount);\n\t\t\t// console.log(\"-> \" + loremIpsumSubstring);\n\t\t\tfakePost.postContent = peelPost.postContent;//loremIpsumSubstring\n\t\t\tvar postType = peelPost.type;//postTypes[Math.floor(Math.random() * postTypes.length)];\n\t\t\tfakePost.postType = postType;\n\t\t\tif(postType == \"photo\")\n\t\t\t{\n\t\t\t\tvar fakePhoto = fakePhotos[usedFakePhotos % fakePhotos.length];\n\t\t\t\tfakePost.photo = fakePhoto;\n\t\t\t\t// peelPost.photo = peelPost.postMedia\n\t\t\t\tusedFakePhotos++;\n\t\t\t}\n\t\t\telse if(postType == \"video\")\n\t\t\t{\n\t\t\t\tvar fakeVideo = fakeVideos[usedFakeVideos % fakeVideos.length];\n\t\t\t\tfakePost.video = fakeVideo;\n\t\t\t\t// peelPost.video = peelPost.postMedia\n\t\t\t\tusedFakeVideos++;\n\t\t\t}\n\n\t\t\tvar author = postAuthors[i % postAuthors.length];\n\t\t\tfakePost.postAuthorPhoto = author.photo;\n\t\t\tpeelPost.postAuthorPhoto = author.photo;\n\t\t\tfakePost.postAuthorName = author.name;\n\t\t\tpeelPost.postAuthorName = author.name;\n\n\t\t\tfakePost.likeCount = Math.floor(Math.random() * 100);\n\t\t\tpeelPost.likeCount = Math.floor(Math.random() * 100);\n\t\t\tfakePost.commentCount = Math.floor(Math.random() * 500);\n\t\t\tpeelPost.commentCount = Math.floor(Math.random() * 500);\n\n\t\t\t// console.log(\"fake post \" + i + \" :  \" + JSON.stringify(fakePost));\n\t\t\t// console.log(\"fake post \" + i + \" :  \" + JSON.stringify(peelPost));\n\n\t\t\t// staticPosts.push(fakePost);\n\t\t\tstaticPosts.push(peelPost);\n\t\t}\n\t\treturn staticPosts\n\t}\n\n\tfunction getRepliesForPostID()\n\t{\n\t\t/*\n\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"0\",\n\t\t\t\t\t\t\"replyContent\":\"reply A\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"1\",\n\t\t\t\t\t\t\"replyContent\":\"reply B\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"2\",\n\t\t\t\t\t\t\"replyContent\":\"reply C\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"3\",\n\t\t\t\t\t\t\"replyContent\":\"reply D\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"4\",\n\t\t\t\t\t\t\"replyContent\":\"reply E\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t */\n\n\t\tvar fakeReplies = [];\n\t\tfor(var i = 0 ; i < 10 ; i++)\n\t\t{\n\t\t\tvar fakeReply = new Object();\n\t\t\tfakeReply.postID = i;\n\t\t\tvar minimumCharacterCount = 20\n\t\t\tvar randomCharacterCount = minimumCharacterCount + Math.round(Math.random() * (loremIpsum.length - minimumCharacterCount));\n\t\t\t// console.log(\"random character count: \" + randomCharacterCount);\n\t\t\tvar loremIpsumSubstring = loremIpsum.substring(0, randomCharacterCount);\n\t\t\t// console.log(\"-> \" + loremIpsumSubstring);\n\t\t\tfakeReply.replyContent = loremIpsumSubstring\n\t\t\tfakeReply.replyType = \"text\";\n\n\t\t\tvar author = postAuthors[i % postAuthors.length];\n\t\t\tfakeReply.postAuthorPhoto = author.photo;\n\t\t\tfakeReply.postAuthorName = author.name;\n\n\t\t\tfakeReply.likeCount = Math.floor(Math.random() * 100);\n\t\t\tfakeReply.commentCount = Math.floor(Math.random() * 500);\n\n\t\t\t// staticPosts.push(fakePost);\n\t\t\tfakeReplies.push(fakeReply);\n\t\t}\n\n\t\treturn fakeReplies\n\t}\n\t\n\treturn{\n\tgetPostsForTopicID:getPostsForTopicID,\n\tgetRepliesForPostID:getRepliesForPostID\n\t}\n});","angular.module('NetworkModule')\n.factory('FDSUtility', function () {\n\t\n\tfunction getStructureById(array, id){\n\t\tif(NETWORK_DEBUG) console.log(\"structureLengths :\"+ array.length);\n\t\tfor(i=0;i<array.length;i++){\n\t\t\tif(array[i].id == id){\n\t\t\t\treturn array[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getIndexById(array, id){\n\t\tif(NETWORK_DEBUG) console.log(\"structureLengths :\"+ array.length);\n\t\tfor(i=0;i<array.length;i++){\n\t\t\tif(array[i].id == id){\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t\n\tfunction isLikedById(array, id){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.like :\"+ tempStructure.signal.like);\n\t\t\tif(tempStructure.signal.like == true){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction isFlaggedById(array, id){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.flag :\"+ tempStructure.signal.flag);\n\t\t\tif(tempStructure.signal.flag == true){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t}\n\t\treturn false;\n\t}\n\n\t\n\tfunction flagById(array, id, flag){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.flag :\"+ tempStructure.signal.flag);\n\t\t\ttempStructure.signal.flag = flag;\n\t\t\t}\n\t}\n\t\n\t\n\tfunction deleteById(array, id){\n\t\tvar index = getIndexById(array,id);\n\t\t\n\t\tif(index != -1){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element at:\"+index );\n\t\t\tarray.splice(index,1);\n\t\t\t}\n\t\treturn array;\n\t}\n\n\treturn {\n\t\tisLikedById:isLikedById,\n\t\tisFlaggedById:isFlaggedById,\n\t\tflagById:flagById,\n\t\tdeleteById:deleteById\n\t\t\n\t\t\n\t};\n\n});","angular.module('MediaModule', ['angularFileUpload', 'NetworkModule', 'TopicModule'])\n.factory('MUService',  function () {\n\tvar POST_COMMENT_URI=\"/v1.0/comment/create\";\n\tvar POST_REPLY_URI=\"/v1.0/reply/create\";\n\tvar isComment = true;\n\tvar commentText = \"\";\n\tvar topicId = \"\";\n\tvar commentId = \"\";\n\tvar replyId = \"\";\n\n\tfunction commentPostRequest(){\n\t\tvar createCommentParams = {\"rid\": \"comment\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(POST_COMMENT_URI)};\n\t\tcreateCommentParams.data =\n\t\t{\n\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\"topicId\": topicId,\n\t\t};\n\t\tif(!isComment){\n\t\t\tcreateCommentParams = {\"rid\": \"reply\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(POST_REPLY_URI)};\n\t\t\tcreateCommentParams.data =\n\t\t\t{\n\t\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\t\"topicId\": topicId,\n\t\t\t};\n\t\t\tcreateCommentParams.data.target = {\n\t\t\t\t\t\"type\": \"comment\", // Target type: “comment” or “reply”.\n\t\t\t\t\t\"id\": commentId,  // Target bant ID of comment or reply.\n\t\t\t};\n\n\t\t\tcreateCommentParams.data.commentId = commentId;\n\t\t}\n\t\treturn createCommentParams;\n\t}\n\n\tfunction setCommentParams(tId,text,isCom,comId,repId){\n\t\tif (text === undefined){\n\t\t\ttext = \"\";\n\t\t}\n\t\tconsole.log(\"Setting Comment Params: \", tId, text, isCom, comId, repId);\n\t\ttopicId = tId;\n\t\tcommentText = text;\n\t\tisComment = isCom;\n\t\t\n\t\tcommentId = comId;\n\t\treplyId = repId;\n\t}\n\n\tfunction postMediaRequest(mediaData){\n\t\tvar m = {\"media\":[mediaData]};\n\t\tvar sections = [];\n\t\tif(commentText !== undefined){\n\t\t\tsections.push({\"type\": \"html\",\"html\":commentText});\n\t\t}\n\t\tsections.push({\"type\": \"media\", \"media\" : m.media});\n\n\t\tvar createCommentParams = commentPostRequest();\n\t\t\n\t\tvar content =  {\"sections\": sections};\n\t\tcreateCommentParams.data.content = content;\n\t\tconsole.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n\t\treturn createCommentParams;\n\t}\n\treturn {\n\t\tpostMediaRequest:postMediaRequest,\n\t\tsetCommentParams:setCommentParams,\n\t\tresetCommentParams:function(){\n\t\t\ttopicId = \"\";\n\t\t\tcommentId = \"\";\n\t\t\tcommentText = \"\";\n\t\t}\n\t}\n});\n"],"sourceRoot":"/source/"}