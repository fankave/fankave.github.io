{"version":3,"sources":["Forum.js","ChannelController.js","AuthController.js","TopicController.js","VideoController.js","SocialController.js","UserInputController.js","UserAgentService.js","NetworkService.js","ForumStorage.js","ForumDeviceInfo.js","URIHelper.js","ChannelService.js","Scorecard.js","TopicDirectives.js","EmbedPlayer.js","ImageControl.js","DataService.js","TopicService.js","VideoService.js","SocialService.js","SplashService.js","CommentService.js","DateUtilityService.js","Bant.js","UserInfoService.js","AuthService.js","StaticData.js","ForumDSUtility.js","MediaUploadService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$locationProvider","state","url","templateUrl","controller","abstract","deepStateRedirect","views","topic-tab-view","controllerAs","when","otherwise","window","history","pushState","HTML5_LOC","html5Mode","enabled","run","$state","$rootScope","filter","$filter","$sce","text","target","replacedText","targetAttr","isDefined","replacePattern1","replace","replacePattern2","trustAsHtml","$scope","$stateParams","$window","$location","networkService","ChannelService","TopicService","URIHelper","AuthService","UserInfoService","setChannel","channelID","channelParams","console","log","init","send","getLiveGameTopic","updateTopic","id","getLiveTopicId","undefined","urlQueryStr","path","search","paramsObj","topicID","channel","go","registerObserverCallback","isUserLoggedIn","NETWORK_DEBUG","isSmartStadiumUser","loginWithEmail","isTechMUser","location","isPeelUser","loginWithPeel","loginAsGuest","$http","ReplyService","ForumDeviceInfo","showSpinner","showFacebookButton","href","indexOf","slice","techMIUser","facebookUser","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","ga","loginToFacebook","techMLogin","name","email","isValid","submitted","fbAsyncInit","FB","appId","xfbml","version","getLoginStatus","response","status","registerParams","setRegistrationParams","authResponse","registerUser","$sanitize","$timeout","CommentService","SplashService","MUService","ForumStorage","FileUploader","SocialService","UserAgentService","isMobileUser","mobileBrowser","mobileUserAgent","getMobileUserAgent","setTopicId","topicType","innerButtonTapped","hideSSSplash","setToLocalStorage","continueToExperience","isMI16User","hasUserVisited","hidePeelSplash","env","setPeelSplash","setSSSplash","setScoreCardUI","$","css","getTopic","getTopicType","isWatchingTopic","getFollowChannelRequest","watchTopicRequest","getTeamA","leftTeam","rightTeam","getTeamB","score","getScore","leftTeamScore","points","rightTeamScore","gameStatus","getGameStatus","gamePeriod","getGamePeriod","gameClock","getGameClock","gameScheduledTime","getGameTime","allScoresTitle","getScoresTitle","allScoresURL","getScoresLink","left","right","pColor","topicTitle","getTitle","thisTopic","topicDescHtml","html","type","topicMediaUrl","mediaUrl","topicMediaAspectFeed","mediaAspectFull","createdAt","getTimeCreatedAt","liked","getLiked","metrics","getMetrics","likesCount","likes","commentsCount","comments","loadingChat","getTopicRequest","setPeelUI","initPage","updateComments","pageClass","showNewCommentsIndicator","style","paddingBottom","setLinksOnComments","postDivs","getElementsByClassName","div","thisDiv","onclick","e","is","this","thisPost","commentsArray","$$phase","$apply","postParams","postID","isSocketConnected","MI16","peelClose","peelWatchOnTV","showId","getPeelShowId","newCommentsIndicatorTapped","scrollTop","imageClick","imageURL","event","cancelBubble","stopPropagation","magnificPopup","open","items","callbacks","bind","preventDefault","close","unbind","moreButtonTapped","updateLikeTopic","getUnlikeTopicRequest","getLikeTopicRequest","commentOnTopic","focus","updateLikeComment","isCommentLiked","getUnlikeCommentRequest","getLikeCommentRequest","deleteComment","length","lastComment","deleteCommentRequest","reportCommentAsSpam","flagCommentRequest","goToRepliesWithKeyboardTriggered","directComment","secureLink","isGuestUser","notifyNewComments","commentsdata","len","pinIndex","getNumPinComments","isCurrentUser","author","trustSrc","trustAsResourceUrl","addEventListener","activeTab","xLinkActivated","switchTabs","tab","addClass","removeClass","initializeTab","includes","_channelId","getChannel","tabs","tabContainer","tabsTop","tabsHeight","inputHeight","clientHeight","docHeight","headerHeight","docVarsSet","setDocVars","offset","top","height","documentElement","fixed","watchScroll","off","on","VideoService","DateUtilityService","updateFeed","feedData","existingLength","tabArray","videoArray","_this","i","tempItem","itemExists","j","postAuthorName","embedAuthor","postAuthorAlias","alias","postAuthorPhoto","photo","tweetId","tweet","postTimestamp","providerName","embedProvider","embedText","retweetCount","likeCount","replyCount","embed","embedCreatedAt","providerLogo","provider","logo","embedType","embedUrl","embedPlayable","embedHtml","mediaType","embedMedia","mediaThumbUrl","mediaAspectRatio","mediaAspectFeed","mediaOrientation","push","loadingVideo","updateTimestamps","getTimeSince","createdAtFull","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","loading","resetVideoOffset","loadContent","getChannelId","getVideoDataRequest","innerHeight","watchContentScroll","currentScroll","retweetPost","method","headers","Access-Control-Allow-Origin","shareTweetToChat","embedShareContent","showShareDialog","fullClient","submitSharedPost","commentData","embedData","postCommentRequestForShare","shareToFacebook","ui","exitShare","highlightPost","unhighlightPost","doneLoading","socialArray","loadingSocial","resetSocialOffset","getSocialDataRequest","generateImagePreview","evt","f","files","match","previewSrc","reader","FileReader","onload","theFile","span","innerHTML","result","join","dontAdd","readAsDataURL","MUS_SERVER_URI","DEV_BUILD","UPLOAD_URL","uploader","autoUpload","removeAfterUpload","queueLimit","isHTML5","filters","fn","item","options","itemType","queue","size","removeMedia","clearQueue","wrap","closest","get","reset","unwrap","fileMaxExceeded","onWhenAddingFileFailed","info","HTML5warning","onAfterAddingFile","fileItem","onAfterAddingAll","addedFileItems","onBeforeUploadItem","user","getUserCredentials","X-UserId","userId","X-SessionId","sessionId","X-AccessToken","accessToken","formData","_file","file","onProgressItem","progress","onProgressAll","onSuccessItem","postMediaRequest","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","resetCommentParams","postComment","commentText","isComment","setCommentParams","topicId","postCommentRequest","getPostReplyRequest","uploadAll","blur","scrollTo","body","scrollHeight","mobileHighlightPost","mobileUnhighlightPost","factory","agent","test","navigator","userAgent","MSStream","_userAgent","check","a","substr","vendor","opera","isUserAgent","$websocket","DataService","initSocket","getWebsocketUri","socketUri","WEBSOCKET_BASE_URI","ws","setWatchTopic","onOpen","onClose","data","onMessage","responseJson","JSON","parse","rid","setTopic","setComments","setReplies","setSocial","setVideo","onError","stringify","disconnectSocket","reconnectSocket","reload","readyState","OPEN","message","key","value","localStorage","localStorageAvailable","setItem","getFromLocalStorage","getItem","clearStorage","clear","_p8","p","Math","random","toString","generateUUID","uuid","getDeviceId","getUrlVars","peelUserName","peelUserId","peelShowId","ssUserName","ssUserId","_MI16","vars","getPeelUserId","getPeelUserName","getPeelParams","substring","getSSUserId","getSSUserName","Bant","FDSUtility","setTopicData","topicData","_liveTopicId","notifyObservers","channelId","reqChannelId","uri","topicParams","timestamp","Date","getTime","callback","callbackLength","observerCallbacks","pop","forEach","directive","restrict","link","$elem","$attrs","element","$eval","secureClick","secureFocus","$element","$last","repeatFinishedNotify","scope","imageZoom","trustSource","preventNav","elem","attr","vidIndex","setYOffset","video","y","setXOffset","x","firstElementChild","childNodes","loadingSpinner","className","zIndex","canPlay","togglePlayPause","thesePlayerNodes","thisVideo","thisThumbnail","thisPlayBtn","thisLoading","paused","ended","play","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","pause","setAspectRatio","aspectRatio","orientation","classStrings","setDimensions","thisWidth","width","styleObj","priority","$attributes","ngElementReady","trustSrcHtml","iframePlayer","setOffsets","image","direction","ref","offsetScale","h","scaledY","w","scaledX","thisImage","service","delegateSetComments","commentsData","error","updateComment","updateCommentCount","commentId","DATA_BANT_ID_LENGTH","appendToComments","updateCommentLocalData","delegateSetTopic","removeTopic","delegateSetReplies","replyData","updateReply","updateReplyCountById","appendToReplies","getCommentIdByReply","updateReplyLocalData","delegateSetChannel","delegateSetSocial","setSocialData","delegateSetVideo","setVideoData","watched","content","_title","title","_topicType","_id","_game","game","_scheduledAt","getGameScheduledTime","scheduledAt","_score","live","_status","_gameStats","_topic","bant","WATCH_TOPIC_URI","_isTopicWatched","LIKE_TOPIC_URI","updateBantLiked","UNLIKE_TOPIC_URI","updateTopicData","scoreData","setScoreData","TOPIC_BASE_URI","varTopicParams","encodeURI","owner","likeTopicRequest","varLikeParams","unlikeTopicRequest","getTopicId","getGame","teams","links","getHtml","signal","like","watch","videoData","_videoArray","tempData","results","_videoObject","_offset","nextOffset","reqOffset","request","LIST_SOCIAL_URI","LIMIT","socialData","_socialArray","_socialObject","_hidePeelSplash","_hideSSSplash","val","_comments","tempCommentsData","_commentObject","prevOffset","SHOW_COMMENT_URI","postCommentData","tempComment","media","pin","_pinnedComments","splice","unshift","commentObj","updateLocalData","newData","updateLikeCommentWithId","tempObject","getCommentById","removeComment","temp","tempObserverCallbacks","commentGetRequest","queryStr","commentPostRequest","getCommentsRequest","LIST_COMMENTS_URI","getCommentByIdRequest","createCommentParams","POST_COMMENT_URI","lang","sections","postCommentRequestForMedia","mediaData","m","likeCommentRequest","LIKE_COMMENT_URI","unlikeCommentRequest","UNLIKE_COMMENT_URI","FLAG_COMMENT_URI","DELETE_COMMENT_URI","isLikedById","tempStructure","replies","deleteById","flagById","UNFLAG_COMMENT_URI","HIDE_COMMENT_URI","hideById","UNHIDE_COMMENT_URI","_loadedComments","loadedComments","setLoadedComments","timeSince","timeStamp","now","createdDate","secondsPast","parseInt","daysPassed","floor","day","getDate","month","toDateString","year","getFullYear","gameScheduleTime","date_format","getMonth","hour","getHours","minutes","getMinutes","time","ext","timeZone","toLocaleString","timeZoneName","split","date","extractMediaObject","_bantObject","tempMedia","EXTRACT_MEDIA_TYPE_LENGTH","thumbUrl","sizes","mediaAspect16x9","mediaAspect1x1","mediaAspect2x1","extractEmbedObject","embedObject","embedTitle","playable","embedMetrics","embedMini","mini","embedCreatedAtFull","sectionsLength","ogp","likeObject","_userInfo","userInfoTemp","setUserCredentials","userType","_isUserLoggedIn","ssUser","MI16User","getUserType","userLoggedInToFacebook","userData","userName","login","utcOffset","deviceId","locale","deviceType","deviceModel","appKey","appVersion","facebook","userID","peel","isMI16","post","REGISTER_SERVER_URI","then","initializeContent","initChannel","initTopic","initPost","getPostId","getPostsForTopicID","staticPosts","fakePhotos","usedFakePhotos","fakeVideos","usedFakeVideos","peelDemoData","postContent","postMedia","peelPost","fakePost","Object","minimumCharacterCount","randomCharacterCount","round","loremIpsum","postType","fakePhoto","fakeVideo","postAuthors","commentCount","getRepliesForPostID","fakeReplies","fakeReply","loremIpsumSubstring","replyContent","replyType","getStructureById","array","getIndexById","isFlaggedById","flag","index","POST_REPLY_URI","tId","isCom","comId","repId","replyId"],"mappings":"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","file":"app.min.js","sourcesContent":["angular.module(\"Forum\", [\"ui.router\",\"ngSanitize\",\"AuthModule\",\"ChannelModule\",\"TopicModule\",\"PostModule\",\"NetworkModule\",\"MediaModule\",\"VideoModule\",\"SocialModule\",\"UserInput\",\"SmartStadiumModule\"])\n.config([\"$stateProvider\", \"$urlRouterProvider\", \"$locationProvider\",\nfunction ($stateProvider, $urlRouterProvider, $locationProvider) {\n  \n  $stateProvider\n  .state('login', {\n    url: '/login',\n    templateUrl:'partials/facebookLogin.html',\n    controller:'AuthController'\n  })\n  .state('channel', {\n    url: '/channel/:channelID?peel&userId&userName&showId&smartStadium&MI16',\n    templateUrl:'partials/login.html',\n    controller:'ChannelController'\n  })\n  .state('topic', {\n    url: '/topic/:topicID?channel&peel&userId&userName&showId&smartStadium&MI16',\n    abstract: true,\n    templateUrl:'partials/topic.html',\n    controller:'TopicController'\n  })\n    .state('topic.chat', {\n      url: '/chat',\n      deepStateRedirect: true,\n      views: {\n        'topic-tab-view': {\n          templateUrl:'partials/chat.html',\n          controller: 'ChatController',\n          controllerAs: 'chat'\n        }\n      }\n    })\n    .state('topic.video', {\n      url: '/video',\n      deepStateRedirect: true,\n      views: {\n        'topic-tab-view': {\n          templateUrl:'partials/video.html',\n          controller: 'VideoController',\n          controllerAs: 'video'\n        }\n      }\n    })\n    .state('topic.social', {\n      url: '/social',\n      deepStateRedirect: true,\n      views: {\n        'topic-tab-view': {\n          templateUrl:'partials/social.html',\n          controller: 'SocialController',\n          controllerAs: 'social'\n        }\n      }\n    })\n  .state('post', {\n    url: '/post/:postID?channel&peel&userId&userName&showId&smartStadium&MI16',\n    templateUrl:'partials/post.html',\n    controller:'PostController'\n  })\n  .state('invalid', {\n    url: 'invalidTopic',\n    templateUrl:'partials/invalidTopic.html'\n  })\n  $urlRouterProvider.when('/topic/:topicID', '/topic/:topicID/chat');\n  $urlRouterProvider.otherwise('invalid');\n\n  if (window.history && window.history.pushState && HTML5_LOC){\n    $locationProvider.html5Mode({\n      enabled:true\n    });\n  }\n}])\n\n.run(['$state','$rootScope',function ($state, $rootScope) {\n  $rootScope.$state = $state;\n}])\n\n.filter('hashtags',['$filter', '$sce',\n  function ($filter, $sce) {\n    return function(text, target) {\n      if (!text) return text;\n\n      var replacedText = $filter('linky')(text, target);\n      var targetAttr = \"\";\n      if (angular.isDefined(target)) {\n          targetAttr = ' target=\"' + target + '\"';\n      }\n      // replace #hashtags and send them to twitter\n      var replacePattern1 = /(^|\\s)#(\\w*[a-zA-Z_]+\\w*)/gim;\n      replacedText = text.replace(replacePattern1, '$1<a href=\"https://twitter.com/search?q=%23$2\"' + targetAttr + '>#$2</a>');\n      // replace @mentions but keep them to our site\n      var replacePattern2 = /(^|\\s)\\@(\\w*[a-zA-Z_]+\\w*)/gim;\n      replacedText = replacedText.replace(replacePattern2, '$1<a href=\"https://twitter.com/$2\"' + targetAttr + '>@$2</a>');\n\n      $sce.trustAsHtml(replacedText);\n      return replacedText;\n  };\n}]);\n","angular.module(\"ChannelModule\", [\"NetworkModule\", \"AuthModule\"])\n.controller(\"ChannelController\", [\"$scope\", \"$state\", \"$stateParams\", \"$window\",\"$location\",\"$sce\",\"networkService\", \"ChannelService\",\"TopicService\",\"URIHelper\",\"AuthService\",\"UserInfoService\",\n\nfunction ($scope,$state,$stateParams,$window,$location,$sce,networkService,ChannelService,TopicService, URIHelper, AuthService, UserInfoService)\n{\n  ChannelService.setChannel($stateParams.channelID);\n  var channelParams = $stateParams;\n  console.log(\"Channel Params: \", channelParams);\n  // if (window.location.href.indexOf('?') !== -1){\n  //   $scope.urlQueryStr = window.location.href.slice(window.location.href.indexOf('?')+1);\n  //   console.log(\" $scope.urlQueryStr: \" + $scope.urlQueryStr);\n  // }\n  \n  $scope.init = function() {\n    console.log(\"Init all connections\");\n    networkService.init();\n    networkService.send(ChannelService.getLiveGameTopic($stateParams.channelID));\n  };\n\n  \n  var updateTopic = function(){\n    var id = ChannelService.getLiveTopicId();\n    if(id !== undefined){\n      console.log(\"Got Topic id from Channel : \" +\"/topic/\" + id + $scope.urlQueryStr);\n      if (HTML5_LOC){\n        if(!!$scope.urlQueryStr)\n          $location.path(\"/topic/\" + id).search($scope.urlQueryStr);\n        else\n          $location.path(\"/topic/\" + id);\n      } else {\n        // if(!!$scope.urlQueryStr)\n        var paramsObj = channelParams;\n        paramsObj.topicID = id;\n        paramsObj.channel = channelParams.channelID;\n        console.log(\"GO Topic: \", paramsObj);\n        $state.go(\"topic.chat\", paramsObj);\n        // else\n          // $window.location = \"#/topic/\" + id;\n      }\n    }\n\n  };\n  \n  \n\n  ChannelService.registerObserverCallback(updateTopic);\n  \n  if(UserInfoService.isUserLoggedIn()){\n    if(NETWORK_DEBUG)\n      console.log(\"User is logged in, checking for connection\");\n    $scope.init();\n  }\n  else if (URIHelper.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    AuthService.loginWithEmail();\n  }\n  else if (URIHelper.isTechMUser()){\n    console.log(\"MI16 User Detected\");\n    $window.location = \"#/login?MI16=true\";\n  }\n  else {\n    if(URIHelper.isPeelUser()){\n      $scope.isPeelUser = true;\n      AuthService.loginWithPeel();\n    }\n    else{\n      AuthService.loginAsGuest();\n    }\n  }\n  \n\n}]);\n","angular.module(\"AuthModule\", [\"NetworkModule\", \"TopicModule\"])\n.controller(\"AuthController\", [\"$scope\", \"$stateParams\", \"$http\", \"AuthService\", \"UserInfoService\", \"TopicService\", \"ReplyService\", \"networkService\",\"ForumDeviceInfo\", \"ChannelService\", \"URIHelper\",\n  function ($scope, $stateParams, $http, AuthService, UserInfoService, TopicService, ReplyService, networkService, ForumDeviceInfo, ChannelService, URIHelper) {\n\n    if (window.location.href.indexOf('?') !== -1){\n      var urlQueryStr = window.location.href.slice(window.location.href.indexOf('?')+1);\n      console.log(\"urlQueryStr: \", urlQueryStr);\n      if (urlQueryStr === 'MI16=true'){\n        $scope.techMIUser = true;\n        $scope.facebookUser = false;\n      }\n    } else {\n      $scope.techMIUser = false;\n      $scope.facebookUser = true;\n    }\n\n    if ($scope.facebookUser){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n      ga('send', 'pageview', 'Facebook Landing');\n    }\n    else {\n      ga('send', 'pageview', 'Tech MI16 Landing');\n    }\n    // FACEBOOK AUTH SECTION\n    $scope.showFacebookButton = true;\n\n    function showSpinner() {\n      $scope.showFacebookButton = false;\n    }\n\n    $scope.loginToFacebook = function() {\n      AuthService.loginToFacebook(showSpinner);\n    };\n\n    $scope.techMLogin = function(name, email, isValid) {\n      if (isValid){\n        AuthService.techMLogin(name, email);\n      }\n      $scope.submitted = true;\n    };\n\n    // load Facebook SDK and initialize\n    // TBD: may want to move this initialization to the run cycle instead of in controller\n    window.fbAsyncInit = function() {\n      \n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n\n      FB.getLoginStatus(function (response) {\n\n        // User is logged in to Facebook and authenticated our app\n        // response.authResponse contains user auth information\n        if (response.status === 'connected') {\n          $scope.showFacebookButton = false;\n          var registerParams = AuthService.setRegistrationParams(\"facebook\", -25200, response.authResponse);\n          AuthService.registerUser(registerParams);\n        }\n        // User is logged in to Facebook but hasn't authenticated our app\n        else if (response.status === 'not_authorized') {\n          // FB.login();\n          $scope.showFacebookButton = false;\n          $scope.loginToFacebook();\n        }\n        // User not logged in to Facebook\n        else {\n          $scope.showFacebookButton = true;\n        }\n\n      });\n\n    };\n\n\n    \n}]);","angular.module(\"TopicModule\", [\"NetworkModule\", \"SplashModule\", \"AuthModule\", \"MediaModule\", \"angularFileUpload\",\"SocialModule\"])\n.controller(\"TopicController\", [\"$scope\", \"$state\", \"$stateParams\", \"$sce\", \"$window\", \"$location\",\"$sanitize\", \"$timeout\", \"networkService\", \"TopicService\",\"CommentService\", \"UserInfoService\",\"URIHelper\",\"AuthService\",\"SplashService\",\"MUService\",\"ForumStorage\",\"FileUploader\",\"SocialService\",\"ChannelService\",\"UserAgentService\",\n\nfunction ($scope, $state, $stateParams, $sce, $window, $location, $sanitize, $timeout, networkService,TopicService, CommentService, UserInfoService, URIHelper, AuthService, SplashService,MUService,ForumStorage,FileUploader,SocialService, ChannelService, UserAgentService)\n{\n  // var lastComment = false;\n  // Check For Mobile Browser\n  if (UserAgentService.isMobileUser()){\n    $scope.mobileBrowser = true;\n    $scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n    console.log(\"MOBILE USER AGENT: \", $scope.mobileUserAgent);\n  } else {\n    $scope.mobileBrowser = false;\n  }\n\n  // if (!$scope.commentsArray){\n  //   $scope.loadingChat = true;\n  // }\n\n  ga('send', 'pageview', \"/topic/\"+$stateParams.topicID);\n  console.log('Sent Pageview from /topic/' + $stateParams.topicID);\n  \n  TopicService.setTopicId($stateParams.topicID);\n  $scope.topicType = \"livegame\";\n  $scope.innerButtonTapped = false;\n  if (UserInfoService.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    // if (!UserInfoService.hasUserVisited()){\n      console.log('SS USER HASNT VISITED');\n      $scope.hideSSSplash = false;\n      ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n      $timeout(function() {$scope.continueToExperience('smartS'); }, 5000);\n    // }\n  }\n  else if (UserInfoService.isMI16User()){\n    $scope.isMI16User = true;\n  }\n  else if(UserInfoService.isPeelUser()){\n    $scope.isPeelUser = true;\n    if (!UserInfoService.hasUserVisited()){\n      console.log('PEEL USER HASNT VISITED');\n      $scope.hidePeelSplash = false;\n      ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n      $timeout(function() {$scope.continueToExperience('peel'); }, 5000);\n    }\n  }\n  else {\n    $scope.isPeelUser = false;  \n    $scope.hidePeelSplash = true;\n    $scope.hideSSSplash = true;\n  }\n\n  $scope.continueToExperience = function(env) {\n    console.log(\"CONTINUE XP CLICKED\");\n    if (env === 'peel'){\n      SplashService.setPeelSplash(true);\n      $scope.hidePeelSplash = true;\n    } else if (env === 'smartS'){\n      SplashService.setSSSplash(true);\n      $scope.hideSSSplash = true;\n    }\n  };\n  $scope.setScoreCardUI = function() {\n    if ($scope.topicType === 'livegame'){\n      if ($scope.isPeelUser){\n        $('#topicSection').css('padding-top','54px');\n      } else if ($scope.isSmartStadiumUser){\n        $('#topicSection').css('padding-top','54px');\n      } else if ($scope.isMI16User){\n        // $('#topicSection').css('padding-top','54px');\n      } else {\n        $('#topicSection').css('padding-top','0px');\n      }\n    }\n  };\n  \n  var updateTopic = function(){\n    if(TopicService.getTopic() !== undefined){\n      $scope.topicType = TopicService.getTopicType();\n      if(TopicService.isWatchingTopic() === false){\n        networkService.send(TopicService.getFollowChannelRequest());\n        networkService.send(TopicService.watchTopicRequest($stateParams.topicID));\n      }\n      \n      \n      $scope.setScoreCardUI();\n      if($scope.topicType == \"livegame\"){\n        console.log(\"Inside topic set :\"+ TopicService.getTeamA());\n        //Score API update\n        $scope.leftTeam = TopicService.getTeamA();\n        $scope.rightTeam = TopicService.getTeamB();\n        var score = TopicService.getScore();\n        if(score != undefined){\n          $scope.leftTeamScore = score.points[0];\n          $scope.rightTeamScore = score.points[1];\n        }\n        $scope.gameStatus = TopicService.getGameStatus();\n        // console.log($scope.gameStatus)\n\n        if($scope.gameStatus == \"live\") {\n          $scope.gamePeriod = TopicService.getGamePeriod();\n          $scope.gameClock = TopicService.getGameClock();\n        }\n\n        $scope.gameScheduledTime = TopicService.getGameTime();\n\n\n\n        $scope.allScoresTitle = TopicService.getScoresTitle();\n        $scope.allScoresURL = TopicService.getScoresLink();\n\n        // renderScoreCard($scope.leftTeam.pColor, $scope.rightTeam.pColor);\n        var left = $('.scoreCardContent');\n        var right = $('.svg-content');\n        left.css('background-color', $scope.leftTeam.pColor);\n        right.css('fill', $scope.rightTeam.pColor);\n      }\n      $scope.topicTitle = TopicService.getTitle();\n      var thisTopic = TopicService.getTopic();\n      $scope.topicDescHtml = thisTopic.html;\n      //console.log(\"has MEDIA  :\"+ thisTopic.type +\"thisTopic.mediaUrl\"+ thisTopic.mediaUrl);\n      if(thisTopic.type == \"media\"){\n      $scope.topicMediaUrl = thisTopic.mediaUrl;\n      $scope.topicMediaAspectFeed = thisTopic.mediaAspectFull;\n      }\n//      var width = window.innerWidth;\n//      console.log(\"Image width :\"+$scope.topicMediaAspectFeed.w +\"  X  \" + $scope.topicMediaAspectFeed.h + \"xxxx \"+width)\n//      $scope.topicMediaAspectFull = thisTopic.mediaAspectFull;\n\n      $scope.createdAt = TopicService.getTimeCreatedAt();\n      $scope.liked = TopicService.getLiked();\n      var metrics = TopicService.getMetrics();\n      $scope.likesCount = metrics.likes;\n      $scope.commentsCount = metrics.comments;\n      if (!$scope.commentsCount || $scope.commentsCount === 0){\n        $scope.loadingChat = false;\n      }\n\n    }\n  };\n\n  // var updateComments = function(){\n  //   var commentsdata = CommentService.comments();\n  //   if(commentsdata != undefined && (commentsdata.length >0 || lastComment === true)){\n  //     lastComment = false;\n  //     // console.log(\"CommentsData : \", commentsdata);\n  //     var len = commentsdata.length;\n\n  //     $scope.commentsArray = [];\n\n  //     for(i=0;i<len;i++){\n  //       var tempComment = {};\n  //       tempComment = commentsdata[i];\n  //       tempComment.postAuthorName = commentsdata[i].author.name;\n  //       tempComment.postAuthorPhoto = commentsdata[i].author.photo;\n  //       tempComment.isMyComment = UserInfoService.isCurrentUser(commentsdata[i].author.id);\n\n  //       tempComment.likeCount = commentsdata[i].metrics.likes;\n  //       tempComment.replyCount = commentsdata[i].metrics.replies;\n\n  //       tempComment.postTimestamp = commentsdata[i].createdAt;\n  //       if (tempComment.type === 'media'){\n  //         tempComment.mediaUrl = commentsdata[i].mediaUrl;\n  //         // tempComment.trustedMediaUrl = $scope.trustSrc(tempComment.mediaUrl);\n  //         tempComment.mediaAspectFeed = commentsdata[i].mediaAspectFeed;\n  //         tempComment.mediaAspectFull = commentsdata[i].mediaAspectFull;\n  //         tempComment.mediaAspectRatio = commentsdata[i].mediaAspectRatio;\n  //         tempComment.mediaOrientation = commentsdata[i].mediaOrientation;\n  //         tempComment.mediaThumbUrl = commentsdata[i].mediaThumbUrl;\n  //       }\n  //       tempComment.isLiked = commentsdata[i].signal.like;\n\n  //       if (tempComment.type === 'embed'){\n  //         tempComment.shared = true;\n  //         tempComment.embed = commentsdata[i].embed;\n  //         tempComment.embed.embedCreatedAt = commentsdata[i].embedCreatedAt;\n  //         tempComment.embed.embedCreatedAtFull = commentsdata[i].embedCreatedAtFull;\n  //         tempComment.embedType = commentsdata[i].embedType;\n          \n  //         if (tempComment.embedType === 'media' || tempComment.embedType === 'link'){\n  //           tempComment.mediaUrl = commentsdata[i].embedMedia.mediaUrl;\n  //           tempComment.mediaThumbUrl = commentsdata[i].embedMedia.mediaThumbUrl;\n  //           tempComment.mediaAspectFeed = commentsdata[i].embedMedia.mediaAspectFeed;\n  //           tempComment.mediaAspectFull = commentsdata[i].embedMedia.mediaAspectFull;\n  //           tempComment.mediaAspectRatio = commentsdata[i].embedMedia.mediaAspectRatio;\n  //           tempComment.mediaOrientation = commentsdata[i].embedMedia.mediaOrientation;\n  //         }\n\n  //         if (tempComment.providerName === \"Twitter\"){\n  //           tempComment.embed.embedLogo = \"img/twitterLogo@2x.png\";\n  //         } else {\n  //           tempComment.embed.embedLogo = commentsdata[i].embed.provider.logo;\n  //         }\n\n  //         if (commentsdata[i].embed.type === 'link' && commentsdata[i].embed.playable === true){\n  //           tempComment.embedHtml = commentsdata[i].embedHtml;\n  //         }\n  //       }\n  //       $scope.commentsArray.push(tempComment);\n  //       if (i === len - 1 && NETWORK_DEBUG){\n  //         console.log(\"Comments Array: \", $scope.commentsArray);\n  //       }\n\n  //     }\n  //   }\n\n  // };\n\n  // $scope.loadRemainingComments = function() {\n  //   console.log(\"LOADING REST OF COMMENTS...\");\n  //   if (!CommentService.loadedComments()){\n  //     networkService.send(CommentService.getCommentsRequest($stateParams.topicID));\n  //     CommentService.setLoadedComments(true);\n  //     $scope.loadedAllComments = true;\n  //   }\n  // };\n\n  $scope.init = function() {\n    networkService.send(TopicService.getTopicRequest($stateParams.topicID));\n    // networkService.send(CommentService.getCommentsRequest($stateParams.topicID));\n  };\n  \n\n  $scope.setPeelUI = function(isPeelUser){\n    //console.log(\"isPeelUser :\"+isPeelUser);\n    $scope.isPeelUser = isPeelUser;\n    \n  };\n\n  \n  $scope.setPeelUI($scope.isPeelUser);\n\n  // $scope.hideLoading = function(){\n  //   console.log(\"HIDING LOAD\");\n  //   $scope.loadingChat = false;\n  //   $scope.loadingSocial = false;\n  //   $scope.loadingSocial = false;\n  // };\n  $scope.initPage = function(){\n    updateTopic();\n    updateComments();\n    $scope.pageClass = 'page-topic';\n    $scope.showNewCommentsIndicator = false;\n\n    $scope.topicID = $stateParams.topicID;\n    $scope.init();\n\n    if ($scope.mobileBrowser === true){\n      document.getElementById('topicSection').style.paddingBottom = \"42px\";\n    }\n  };\n\n  $scope.setLinksOnComments = function(){\n    var postDivs = document.getElementsByClassName(\"postRow\");\n    for (div in postDivs) {\n      var thisDiv = postDivs[div];\n      thisDiv.onclick = function(e) {\n        if ($(e.target).is('a')) {\n          console.log(\"EXTERNAL LINK: \", e, this.id);\n          return;\n        } \n        thisPost = $scope.commentsArray[this.id];\n        if ($scope.innerButtonTapped === false) {\n          console.log(\"Post Click Active: \", thisPost.id);\n          if (HTML5_LOC){\n            $location.path(\"/post/\" + thisPost.id);\n            if (!$scope.$$phase){\n              $scope.$apply();\n            }\n          } else {\n            // $window.location = \"#/post/\" + thisPost.id;\n            var postParams = $stateParams;\n            postParams.postID = thisPost.id;\n            $state.go('post', postParams);\n          }\n        }\n        $scope.innerButtonTapped = false;\n      }\n    }\n  }\n\n//  if(URIHelper.isPeelUser())\n//    ga('send', 'event', 'UserType', '0', 'Peel User', { 'nonInteraction': 2 });\n//  else\n//    ga('send', 'event', 'UserType', '0', 'Non Peel User', { 'nonInteraction': 2 });\n  if(UserInfoService.isUserLoggedIn()){\n    if(NETWORK_DEBUG)\n      console.log(\"User is logged in, checking for connection\");\n    if(!networkService.isSocketConnected())\n      networkService.init();\n    $scope.initPage();\n  }\n  else if (URIHelper.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    console.log(\"SS User? \", $scope.isSmartStadiumUser);\n    AuthService.loginWithEmail();\n  }\n  else if (URIHelper.isTechMUser()){\n    // $window.location = \"#/login?MI16=true\";\n    $state.go('login', {MI16: true});\n  }\n  else if (URIHelper.isPeelUser()){\n    $scope.isPeelUser = true;\n    $scope.setPeelUI(true);\n    AuthService.loginWithPeel();\n  }\n  else {\n    // console.log(\"Not logged in to facebook, take user to login page\")\n    AuthService.loginAsGuest();\n  }\n\n\n  $scope.peelClose = function()\n  {\n    ga('send', 'event', 'Peel', 'click', 'BackToPeelHome');\n    console.log(\"peelClose()\");\n    window.location = \"peel://home\";\n  }\n\n  $scope.peelWatchOnTV = function()\n  {\n    ga('send', 'event', 'Peel', 'click', 'PeelWatchOnTV');\n    console.log(\"peelWatchOnTV()\");\n    var showId = URIHelper.getPeelShowId();\n    console.log(\"Peel show on TV uri :  \"+ \"peel://tunein/\"+showId);\n    if(showId != undefined)\n      window.location = \"peel://tunein/\"+showId;\n    else\n      window.location = \"peel://home\";\n  }\n\n  $scope.showNewCommentsIndicator = false;\n  $scope.newCommentsIndicatorTapped = function()\n  {\n    console.log(\"newCommentsIndicatorTapped\");\n    $scope.showNewCommentsIndicator = false;\n    updateComments();\n    $(document).scrollTop(0);\n  }\n\n  $scope.imageClick = function(imageURL)\n  {\n    event.cancelBubble = true;\n    if(event.stopPropagation) event.stopPropagation();\n\n    $.magnificPopup.open({\n      items: {\n        type:'image',\n        src: imageURL,\n      },\n      type: 'inline',\n      callbacks:\n      {\n        open: function()\n        {\n          console.log(\"popup opened\");\n          $('body').bind('touchmove', function(e){e.preventDefault()})\n        },\n        close: function()\n        {\n          console.log(\"popup closed\");\n          $('body').unbind('touchmove')\n        }\n        // e.t.c.\n      }\n    });\n  }\n\n  $scope.moreButtonTapped = function()\n  {\n    $scope.innerButtonTapped = true;\n  }\n\n  $scope.updateLikeTopic = function() {\n    console.log(\"TopicController update like Topic\");\n    if(TopicService.getLiked() == true)\n      networkService.send(TopicService.getUnlikeTopicRequest());\n    else\n      networkService.send(TopicService.getLikeTopicRequest());  \n  };\n\n  $scope.commentOnTopic = function()\n  {\n    document.getElementById(\"topicCommentField\").focus();\n  };\n\n  $scope.updateLikeComment = function(id) {\n    $scope.innerButtonTapped = true;\n    \n    // event.cancelBubble = true;\n    // if(event.stopPropagation) event.stopPropagation();\n\n    console.log(\"TopicController updateLike (\" + id + \")\");\n    if(CommentService.isCommentLiked(id)){\n      networkService.send(CommentService.getUnlikeCommentRequest(id));\n    }\n    else{\n      networkService.send(CommentService.getLikeCommentRequest(id));  \n    }\n  };\n\n\n  $scope.deleteComment = function(id)\n  {\n    console.log(\"deleteComment(\" + id + \")\");\n    if ($scope.commentsArray.length === 1){\n      console.log(\"Deleting Final Comment\");\n      lastComment = true;\n    }\n    $scope.innerButtonTapped = true;\n    networkService.send(CommentService.deleteCommentRequest(id));\n  }\n\n  $scope.reportCommentAsSpam = function(id)\n  {\n    console.log(\"reportCommentAsSpam(\" + id + \")\");\n    $scope.innerButtonTapped = true;\n    networkService.send(CommentService.flagCommentRequest(id)); \n  }\n\n  $scope.goToRepliesWithKeyboardTriggered = function(id)\n  {\n    // event.cancelBubble = true;\n    // if(event.stopPropagation) event.stopPropagation();\n\n    // console.log(\"TopicController.goToRepliesWithKeyboardTriggered(\" + id + \")\");\n    TopicService.directComment = true;\n    if (HTML5_LOC){\n      $location.path(\"/post/\" + id);\n    } else {\n      // $window.location = \"#/post/\" + id;\n      $state.go('post', {postID: id});\n    }\n  };\n\n  $scope.secureLink = function(url, id) {\n    if (UserInfoService.isGuestUser()){\n      return \"\";\n    } else {\n      return url + id;\n    }\n  };\n\n  var notifyNewComments = function(){\n    if($scope.commentsArray == undefined)\n    {\n      updateComments();\n    }\n    else {\n      var commentsdata = CommentService.comments();\n      var len = commentsdata.length;\n      var pinIndex = CommentService.getNumPinComments();\n      if($scope.commentsArray.length < len){\n        if(!UserInfoService.isCurrentUser(commentsdata[pinIndex].author.id)){\n          $scope.showNewCommentsIndicator = true;\n        }\n        else {\n          updateComments();\n        }\n      }\n      else{\n        updateComments();\n      }\n    }\n  };\n\n  TopicService.registerObserverCallback(updateTopic);\n  CommentService.registerObserverCallback(notifyNewComments);\n  CommentService.registerObserverCallback(updateComments, true);\n\n  $scope.trustSrc = function(src)\n  {\n    return $sce.trustAsResourceUrl(src);\n  }\n\n  $window.addEventListener(\"beforeunload\", function(){\n    console.log(\"Before Unload\");\n    ForumStorage.setToLocalStorage(\"lastTabActive\", $scope.activeTab);\n  });\n\n  $scope.xLinkActivated = false;\n\n  // CONTENT TABS\n  $scope.switchTabs = function(tab) {\n    if (tab === 'chat'){\n      $('#chatTab').addClass('selectedTab');\n      $('#videoTab').removeClass('selectedTab');\n      $('#socialTab').removeClass('selectedTab');\n      $state.go('topic.chat');\n      $scope.activeTab = 'chat';\n      $(document).scrollTop(0);\n      updateTopic();\n      updateComments();\n    }\n    if (tab === 'video'){\n      $('#chatTab').removeClass('selectedTab');\n      $('#videoTab').addClass('selectedTab');\n      $('#socialTab').removeClass('selectedTab');\n      $state.go('topic.video');\n      $scope.activeTab = 'video';\n      $(document).scrollTop(0);\n    }\n    if (tab === 'social'){\n      $('#chatTab').removeClass('selectedTab');\n      $('#videoTab').removeClass('selectedTab');\n      $('#socialTab').addClass('selectedTab');\n      $state.go('topic.social');\n      $scope.activeTab = 'social';\n      $(document).scrollTop(0);\n    }\n    // console.log(\"Active Tab: \", $scope.activeTab);\n  };\n\n  $scope.initializeTab = function() {\n    console.log(\"Initializing Tabs\");\n    if ($state.includes(\"topic.chat\")){\n      console.log(\"In Chat\");\n      $('#chatTab').addClass('selectedTab');\n    }\n    else if ($state.includes(\"topic.video\")){\n      console.log(\"In Video\");\n      $('#videoTab').addClass('selectedTab');\n    }\n    else if ($state.includes(\"topic.social\")){\n      console.log(\"In Social\");\n      $('#socialTab').addClass('selectedTab');\n    }\n  };\n\n  var _channelId = ChannelService.getChannel();\n  TopicService.setChannel(_channelId);\n\n  function debounce(func, wait, immediate) {\n    var timeout;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  };\n\n  var docVarsSet = false;\n  var tabs,\n      tabContainer,\n      tabsTop,\n      tabsHeight,\n      inputHeight,\n      clientHeight,\n      docHeight,\n      headerHeight;\n  $scope.setDocVars = function() {\n    if (!docVarsSet){\n      tabs = $('#inputControls');\n      tabContainer = $('.tabContainer');\n      tabsTop = tabs.offset().top;\n      tabsHeight = tabContainer.height();\n      inputHeight = tabs.height();\n      clientHeight = document.documentElement.clientHeight;\n      docHeight = $(document).height();\n      docVarsSet = true;\n      if ($scope.isSmartStadiumUser){\n        headerHeight = 54;\n      } else if ($scope.isPeelUser){\n        headerHeight = 54;\n      } else {\n        headerHeight = 0;\n      }\n    }\n  };\n\n  var fixed = false;\n  var watchScroll = function watchScroll() {\n    console.log(\"Tabs Top: \", tabsTop);\n    if ($scope.showNewCommentsIndicator){\n      $scope.showNewCommentsIndicator = false;\n    }\n    // if ($scope.isPeelUser){\n      if ($(document).scrollTop() > (tabsTop - headerHeight) && (docHeight - clientHeight) > (tabsTop + inputHeight - tabsHeight)) {\n        tabs.addClass('fixTabsPeel');\n        tabs.css('top',headerHeight);\n        tabContainer.addClass('fixTabContainer');\n        $('.commentsContainer').css('padding-top',$('#inputControls').height());\n        fixed = true;\n      } else if (fixed) {\n        tabs.removeClass('fixTabsPeel');\n        tabs.css('top','');\n        tabContainer.removeClass('fixTabContainer');\n        $('.commentsContainer').css('padding-top','');\n        fixed = false;\n      }\n  };\n\n  $(document).off('scroll');\n  $(document).on('scroll', watchScroll);\n\n\n}]);\n\n","angular.module(\"VideoModule\", [\"NetworkModule\",\"ChannelModule\",\"TopicModule\"])\n.controller(\"VideoController\", [\"$state\",\"$stateParams\",\"$sce\",\"$window\",\"$http\",\"VideoService\",\"networkService\",\"ChannelService\",\"TopicService\",\"DateUtilityService\",\"CommentService\",\"URIHelper\",\n  function ($state,$stateParams,$sce,$window,$http,VideoService,networkService,ChannelService,TopicService,DateUtilityService,CommentService,URIHelper){\n\n    var _this = this;\n    if (!this.videoArray){\n      this.loading = true;\n    }\n    if (!!this.videoArray){\n      updateTimestamps();\n    }\n    VideoService.resetVideoOffset();\n    VideoService.registerObserverCallback(function(){updateFeed();});\n\n\n    this.loadContent = function(offset) {\n      var channelID = $stateParams.channel || ChannelService.getChannel()||TopicService.getChannelId();\n      console.log(\"LOADING VIDEO: \", channelID);\n      networkService.send(VideoService.getVideoDataRequest(channelID,offset));\n    };\n    this.loadContent();\n\n    function updateFeed() {\n      console.log(\"Updating Video Feed\");\n      // Get Appropriate Content\n      var feedData,\n          existingLength,\n          tabArray;\n      feedData = VideoService.videoArray();\n      _this.videoArray = _this.videoArray || [];\n      existingLength = _this.videoArray.length;\n      tabArray = _this.videoArray;\n\n      var len = feedData.length;\n      if (!!feedData && len > 0){\n        // console.log(\"Feed Data: \", feedData, \" Type: \", tab);\n\n        for (var i = 0; i < len; i++){\n          var tempItem = feedData[i];\n\n          // Check to See if Item Already Exists in Scope Array\n          var itemExists = false;\n          for (var j = 0; j < existingLength; j++){\n            if (tempItem.id === tabArray[j].id){\n              itemExists = true;\n            }\n          }\n          // If Exists, Skip To Next Item\n          if (itemExists){\n            continue;\n          }\n          \n          tempItem.postAuthorName = feedData[i].embedAuthor.name;\n          tempItem.postAuthorAlias = feedData[i].embedAuthor.alias;\n          tempItem.postAuthorPhoto = feedData[i].embedAuthor.photo;\n          tempItem.tweetId = feedData[i].tweet.id;\n          \n          tempItem.postTimestamp = feedData[i].createdAt;\n          tempItem.providerName = feedData[i].embedProvider.name;\n          tempItem.html = feedData[i].embedText;\n          tempItem.retweetCount = feedData[i].tweet.metrics.retweetCount;\n          tempItem.likeCount = feedData[i].tweet.metrics.likeCount;\n          tempItem.replyCount = feedData[i].tweet.metrics.replyCount;\n\n          // Embed Object for Sharing\n          tempItem.embed = feedData[i].embed;\n          tempItem.embed.embedCreatedAt = feedData[i].embedCreatedAt;\n          // tempItem.embed.embedCreatedAtFull = feedData[i].embedCreatedAtFull;\n\n          if (tempItem.providerName === \"Twitter\"){\n            tempItem.providerLogo = \"img/twitterLogo@2x.png\";\n            tempItem.embed.provider.logo = \"img/twitterLogo@2x.png\";\n          } else {\n            tempItem.providerLogo = feedData[i].embedProvider.logo;\n            tempItem.embed.provider.logo = feedData[i].embedProvider.logo;\n          }\n\n          tempItem.embedType = feedData[i].embedType;\n          tempItem.embedUrl = feedData[i].embedUrl;\n          if (feedData[i].embedType === \"link\" && feedData[i].embedPlayable === true){\n            tempItem.embedHtml = feedData[i].embedHtml;\n            tempItem.embedPlayable = true;\n          }\n          if (feedData[i].embedType === \"media\" || feedData[i].embedType === \"link\"){\n            tempItem.mediaType = feedData[i].embedMedia.mediaType;\n            tempItem.mediaUrl = feedData[i].embedMedia.mediaUrl;\n            tempItem.mediaThumbUrl = feedData[i].embedMedia.mediaThumbUrl;\n            tempItem.mediaAspectRatio = feedData[i].embedMedia.mediaAspectRatio;\n            tempItem.mediaAspectFeed = feedData[i].embedMedia.mediaAspectFeed;\n            tempItem.mediaAspectFull = feedData[i].embedMedia.mediaAspectFull;\n            tempItem.mediaOrientation = feedData[i].embedMedia.mediaOrientation;\n          }\n\n          _this.videoArray.push(tempItem);\n          if (NETWORK_DEBUG && i === len - 1){\n            _this.loadingVideo = false;\n            console.log(\"Video Array: \", _this.videoArray);\n          }\n        }\n      }\n    };\n\n    function trustSrc(src) {\n      return $sce.trustAsResourceUrl(src);\n    };\n\n    function updateTimestamps(){\n      for (var i = 0; i < _this.videoArray.length; i++){\n        _this.videoArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.videoArray[i].createdAtFull);\n      }\n    };\n\n    \n    // Limit Rate that Function Can be Called\n    function debounce(func, wait, immediate) {\n      var timeout;\n      return function() {\n        var context = this, args = arguments;\n        var later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    var watchContentScroll = debounce(function() {\n      var currentScroll = $(document).height() - clientHeight - 50;\n      if ($(document).scrollTop() > currentScroll && currentScroll > 500) {\n        // We are Loading More Content -->\n        // Base offset on Current Length of Scope Array\n        _this.loadContent(_this.videoArray.length);\n      }\n    }, 100);\n\n    $(document).on('scroll', watchContentScroll);\n\n    this.retweetPost = function(id) {\n      $http({\n        method: 'GET',\n        url: 'https://twitter.com/intent/retweet?tweet_id=' + id,\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    };\n\n    this.shareTweetToChat = function (embed) {\n      _this.embedShareContent = embed;\n      _this.showShareDialog = true;\n      console.log(\"Embed Object: \", embed);\n      if (URIHelper.isPeelUser()){\n        var fullClient = document.documentElement.clientHeight - 54;\n        console.log(\"fullClient Height: \", fullClient);\n        setTimeout(function(){\n          $('#sharePreviewContainer').css({top: '54px'}).height(fullClient);\n        },25);\n      }\n    };\n\n    this.submitSharedPost = function (commentData,embedData) {\n      var topicID = $stateParams.topicID;\n      console.log(\"topicID From Parent: \", topicID);\n      networkService.send(CommentService.postCommentRequestForShare(topicID,commentData,embedData));\n      _this.showShareDialog = false;\n      $state.go('topic.chat', $stateParams);\n    };\n\n    console.log(\"WAY BEFOREEEE\");\n    if (!window.FB){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n    }\n\n    window.fbAsyncInit = function() {\n      console.log(\"BEFOREEEE\");\n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n      console.log(\"AFTERRRRR\");\n    };\n\n    this.shareToFacebook = function (id,embedUrl) {\n      FB.ui({\n        method: 'share',\n        href: embedUrl\n      }, function (response){\n        // Keep Track of User Shares to Facebook?\n        console.log(\"FB Response Post-Share: \", response);\n      });\n    };\n\n    this.exitShare = function () {\n      _this.showShareDialog = false;\n    };\n\n    this.highlightPost = function(){\n      $('#postShareContent').css('color','rgb(22,189,231)');\n    };\n\n    this.unhighlightPost = function(){\n      $('#postShareContent').css('color','rgb(211,214,215)');\n    };\n    \n    this.doneLoading = function() {\n      _this.loading = false;\n    }\n\n}]);\n\n","angular.module(\"SocialModule\", [\"NetworkModule\",\"ChannelModule\",\"TopicModule\"])\n.controller(\"SocialController\", [\"$state\",\"$stateParams\",\"$sce\",\"$window\",\"$http\",\"SocialService\",\"networkService\",\"ChannelService\",\"TopicService\",\"DateUtilityService\",\"CommentService\",\"URIHelper\",\n  function ($state,$stateParams,$sce,$window,$http,SocialService,networkService,ChannelService,TopicService,DateUtilityService,CommentService,URIHelper){\n\n    var _this = this;\n    if (!this.socialArray){\n      this.loading = true;\n    }\n    if (!!this.socialArray){\n      updateTimestamps();\n    }\n    SocialService.resetSocialOffset();\n    SocialService.registerObserverCallback(function(){updateFeed();});\n\n\n    this.loadContent = function(offset) {\n      var channelID = $stateParams.channel || ChannelService.getChannel()||TopicService.getChannelId();\n      console.log(\"LOADING SOCIAL: \", channelID);\n      networkService.send(SocialService.getSocialDataRequest(channelID,offset));\n    };\n    this.loadContent();\n\n    function updateFeed() {\n\n      // Get Appropriate Content\n      var feedData,\n          existingLength,\n          tabArray;\n      feedData = SocialService.socialArray();\n      _this.socialArray = _this.socialArray || [];\n      existingLength = _this.socialArray.length;\n      tabArray = _this.socialArray;\n\n      var len = feedData.length;\n      if (!!feedData && len > 0){\n        // console.log(\"Feed Data: \", feedData, \" Type: \", tab);\n\n        for (var i = 0; i < len; i++){\n          var tempItem = feedData[i];\n\n          // Check to See if Item Already Exists in Scope Array\n          var itemExists = false;\n          for (var j = 0; j < existingLength; j++){\n            if (tempItem.id === tabArray[j].id){\n              itemExists = true;\n            }\n          }\n          // If Exists, Skip To Next Item\n          if (itemExists){\n            continue;\n          }\n          \n          tempItem.postAuthorName = feedData[i].embedAuthor.name;\n          tempItem.postAuthorAlias = feedData[i].embedAuthor.alias;\n          tempItem.postAuthorPhoto = feedData[i].embedAuthor.photo;\n          tempItem.tweetId = feedData[i].tweet.id;\n          \n          tempItem.postTimestamp = feedData[i].createdAt;\n          tempItem.providerName = feedData[i].embedProvider.name;\n          tempItem.html = feedData[i].embedText;\n          tempItem.retweetCount = feedData[i].tweet.metrics.retweetCount;\n          tempItem.likeCount = feedData[i].tweet.metrics.likeCount;\n          tempItem.replyCount = feedData[i].tweet.metrics.replyCount;\n\n          // Embed Object for Sharing\n          tempItem.embed = feedData[i].embed;\n          tempItem.embed.embedCreatedAt = feedData[i].embedCreatedAt;\n          // tempItem.embed.embedCreatedAtFull = feedData[i].embedCreatedAtFull;\n\n          if (tempItem.providerName === \"Twitter\"){\n            tempItem.providerLogo = \"img/twitterLogo@2x.png\";\n            tempItem.embed.provider.logo = \"img/twitterLogo@2x.png\";\n          } else {\n            tempItem.providerLogo = feedData[i].embedProvider.logo;\n            tempItem.embed.provider.logo = feedData[i].embedProvider.logo;\n          }\n\n          tempItem.embedType = feedData[i].embedType;\n          tempItem.embedUrl = feedData[i].embedUrl;\n          if (feedData[i].embedType === \"link\" && feedData[i].embedPlayable === true){\n            tempItem.embedHtml = feedData[i].embedHtml;\n            tempItem.embedPlayable = true;\n          }\n          if (feedData[i].embedType === \"media\" || feedData[i].embedType === \"link\"){\n            tempItem.mediaType = feedData[i].embedMedia.mediaType;\n            tempItem.mediaUrl = feedData[i].embedMedia.mediaUrl;\n            tempItem.mediaThumbUrl = feedData[i].embedMedia.mediaThumbUrl;\n            tempItem.mediaAspectRatio = feedData[i].embedMedia.mediaAspectRatio;\n            tempItem.mediaAspectFeed = feedData[i].embedMedia.mediaAspectFeed;\n            tempItem.mediaAspectFull = feedData[i].embedMedia.mediaAspectFull;\n            tempItem.mediaOrientation = feedData[i].embedMedia.mediaOrientation;\n          }\n\n          _this.socialArray.push(tempItem);\n          if (NETWORK_DEBUG && i === len - 1){\n            _this.loadingSocial = false;\n            console.log(\"Social Array: \", _this.socialArray);\n          }\n        }\n      }\n    };\n\n    function trustSrc(src) {\n      return $sce.trustAsResourceUrl(src);\n    };\n\n    function updateTimestamps(){\n      for (var i = 0; i < _this.socialArray.length; i++){\n        _this.socialArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.socialArray[i].createdAtFull);\n      }\n    };\n\n    \n    // Limit Rate that Function Can be Called\n    function debounce(func, wait, immediate) {\n      var timeout;\n      return function() {\n        var context = this, args = arguments;\n        var later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    var watchContentScroll = debounce(function() {\n      var currentScroll = $(document).height() - clientHeight - 50;\n      if ($(document).scrollTop() > currentScroll && currentScroll > 500) {\n        // We are Loading More Content -->\n        // Base offset on Current Length of Scope Array\n        _this.loadContent(_this.socialArray.length);\n      }\n    }, 100);\n\n    $(document).on('scroll', watchContentScroll);\n\n    this.retweetPost = function(id) {\n      $http({\n        method: 'GET',\n        url: 'https://twitter.com/intent/retweet?tweet_id=' + id,\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    };\n\n    this.shareTweetToChat = function (embed) {\n      _this.embedShareContent = embed;\n      _this.showShareDialog = true;\n      console.log(\"Embed Object: \", embed);\n      if (URIHelper.isPeelUser()){\n        var fullClient = document.documentElement.clientHeight - 54;\n        console.log(\"fullClient Height: \", fullClient);\n        setTimeout(function(){\n          $('#sharePreviewContainer').css({top: '54px'}).height(fullClient);\n        },25);\n      }\n    };\n\n    this.submitSharedPost = function (commentData,embedData) {\n      var topicID = $stateParams.topicID;\n      console.log(\"topicID From Parent: \", topicID);\n      networkService.send(CommentService.postCommentRequestForShare(topicID,commentData,embedData));\n      _this.showShareDialog = false;\n      $state.go('topic.chat', $stateParams);\n    };\n\n    console.log(\"WAY BEFOREEEE\");\n    if (!window.FB){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n    }\n\n    window.fbAsyncInit = function() {\n      console.log(\"BEFOREEEE\");\n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n      console.log(\"AFTERRRRR\");\n    };\n\n    this.shareToFacebook = function (id,embedUrl) {\n      FB.ui({\n        method: 'share',\n        href: embedUrl\n      }, function (response){\n        // Keep Track of User Shares to Facebook?\n        console.log(\"FB Response Post-Share: \", response);\n      });\n    };\n\n    this.exitShare = function () {\n      _this.showShareDialog = false;\n    };\n\n    this.highlightPost = function(){\n      $('#postShareContent').css('color','rgb(22,189,231)');\n    };\n\n    this.unhighlightPost = function(){\n      $('#postShareContent').css('color','rgb(211,214,215)');\n    };\n    \n    this.doneLoading = function() {\n      _this.loading = false;\n    }\n\n}]);\n\n","angular.module(\"UserInput\", [\"NetworkModule\",\"TopicModule\",\"MediaModule\",\"angularFileUpload\"])\n  .controller(\"UserInputController\", [\"$scope\",\"$window\",\"$timeout\",\"$stateParams\",\"networkService\",\"TopicService\",\"CommentService\",\"ReplyService\",\"UserInfoService\",\"FileUploader\",\"MUService\",\n    function ($scope,$window,$timeout,$stateParams,networkService,TopicService,CommentService,ReplyService,UserInfoService,FileUploader,MUService){\n\n      // ATTACH MEDIA\n      var MUS_SERVER_URI;\n      if (DEV_BUILD === true){\n        MUS_SERVER_URI = 'https://dev.fankave.com:8080';\n      } else {\n        MUS_SERVER_URI = 'https://mus.fankave.com';\n      }\n      var UPLOAD_URL = '/v1.0/media/upload';\n\n      var uploader = this.uploader = new FileUploader({\n        url: MUS_SERVER_URI + UPLOAD_URL,\n        autoUpload: false,\n        removeAfterUpload: true,\n        queueLimit: 1\n      });\n\n      var _this = this;\n      this.isHTML5 = this.uploader.isHTML5;\n      this.mediaType;\n      this.uploader.filters.push({\n        name: 'customFilter',\n        fn: function(item /*{File|FileLikeObject}*/, options) {\n          var itemType = item.type;\n          if(itemType.indexOf(\"image\") != -1){\n            _this.mediaType = \"image\";\n            return this.queue.length < 1 && (item.size < 5242880);\n          }\n          else if(itemType.indexOf(\"video\") != -1){\n            _this.mediaType = \"video\";\n            return this.queue.length < 1 && (item.size < 268435456);\n          }\n          return this.queue.length < 10;\n        }\n      });\n\n      // MEDIA PREVIEW\n      var dontAdd;\n      function generateImagePreview(evt) {\n        var f = evt.target.files[0];\n        console.log('F:', f);\n\n        if (!f.type.match('image.*')) {\n          var previewSrc = \"img/videoPrevIcon@2x.png\";\n        }\n\n        var reader = new FileReader();\n        reader.onload = (function (theFile) {\n          return function (e) {\n            var span = document.createElement('span');\n            span.innerHTML = ['<img class=\"thumb\" src=\"',\n              previewSrc || e.target.result,\n              '\"/>'].join('');\n            if ($scope.mobileBrowser === true && !dontAdd){\n              document.getElementById('mobilePreview').insertBefore(span, null);\n            } else if (!dontAdd) {\n              document.getElementById('preview').insertBefore(span, null);\n            }\n            };\n          })(f);\n          reader.readAsDataURL(f);\n        };\n\n      document.getElementById('fileUpload').addEventListener('change',\n        generateImagePreview, false);\n\n      this.removeMedia = function(){\n        _this.uploader.clearQueue();\n        var e = $('#fileUpload');\n        e.wrap('<form>').closest('form').get(0).reset();\n        e.unwrap();\n        dontAdd = false;\n        _this.unhighlightPost();\n      };\n\n      // CALLBACKS\n      this.fileMaxExceeded = false;\n      this.uploader.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\n        dontAdd = true;\n        console.info('onWhenAddingFileFailed', item, filter, options);\n        if (!_this.isHTML5){\n          console.log(\"Browser Doesn't Support HTML5\");\n          _this.HTML5warning = true;\n        } else if (_this.uploader.queue.length < 1) {\n          _this.fileMaxExceeded = true;\n          _this.removeMedia();\n          $timeout(function(){_this.fileMaxExceeded = false;}, 5000);\n        }\n      };\n      this.uploader.onAfterAddingFile = function(fileItem) {\n        console.info('onAfterAddingFile', fileItem);\n        _this.highlightPost();\n      };\n      this.uploader.onAfterAddingAll = function(addedFileItems) {\n        console.info('onAfterAddingAll', addedFileItems);\n      };\n      this.uploader.onBeforeUploadItem = function(item) {\n        var user = UserInfoService.getUserCredentials();\n        item.headers = {  \n            'X-UserId': user.userId,\n            'X-SessionId': user.sessionId,\n            'X-AccessToken': user.accessToken};\n        item.formData =[{'type':item._file.type},{'size': item._file.size},{'file': item._file}];\n\n        console.info('onBeforeUploadItem', item);\n      };\n      this.uploader.onProgressItem = function(fileItem, progress) {\n        console.info('onProgressItem', fileItem, progress);\n      };\n      this.uploader.onProgressAll = function(progress) {\n        console.info('onProgressAll', progress);\n      };\n      this.uploader.onSuccessItem = function(fileItem, response, status, headers) {\n        console.info('onSuccessItem', fileItem, response, status, headers);\n        networkService.send(MUService.postMediaRequest(response));\n      };\n      this.uploader.onErrorItem = function(fileItem, response, status, headers) {\n        console.info('onErrorItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCancelItem = function(fileItem, response, status, headers) {\n        console.info('onCancelItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCompleteItem = function(fileItem, response, status, headers) {\n        console.info('onCompleteItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCompleteAll = function() {\n        console.info('onCompleteAll');\n        _this.uploader.clearQueue();\n        MUService.resetCommentParams();\n      };\n\n      console.info('uploader', this.uploader);\n\n      // POST COMMENT\n      this.postComment = function(commentText, isComment) {\n        // console.log(\"In New Controller: \", isComment);\n        if (_this.uploader.queue.length > 0 && isComment){\n          MUService.setCommentParams($scope.topicID, commentText, true);\n        } else if (_this.uploader.queue.length > 0 && !isComment){\n          MUService.setCommentParams($scope.topicId, commentText, false, $scope.postID);\n        } else if (!!commentText && commentText !== \"\" && isComment){\n          networkService.send(CommentService.postCommentRequest($scope.topicID, commentText));\n        } else if (!!commentText && commentText !== \"\" && !isComment){\n          networkService.send(ReplyService.getPostReplyRequest($scope.topicId, $scope.postID, commentText));\n        }\n        _this.uploader.uploadAll();\n        $scope.commentText = \"\";\n        $('input#topicCommentField').blur();\n        $('#postCommentButton').css('color','rgb(211,214,215)');\n        if (isComment){\n          $(document).scrollTop(0);\n        } else {\n          window.scrollTo(0, document.body.scrollHeight);\n        }\n      };\n\n      this.highlightPost = function(){\n        console.log(\"Styling post\");\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      };\n\n      this.unhighlightPost = function(){\n        console.log(\"Styling post\");\n        $('#postCommentButton').css('color','rgb(211,214,215)');\n      };\n\n      this.mobileHighlightPost = function(){\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      }\n\n      this.mobileUnhighlightPost = function(){\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      }\n\n      $('input#topicCommentField').bind('focusin focus', function(e){\n        e.preventDefault();\n      });\n\n      $('input').bind('focusin focus', function(e){\n        e.preventDefault();\n      });\n\n    }]);","angular.module('Forum')\n.factory(\"UserAgentService\", [\"ForumStorage\",\"UserInfoService\",\n  function (ForumStorage,UserInfoService){\n\n    var _userAgent;\n\n    function getMobileUserAgent() {\n      var agent;\n      if (isMobileUser()){\n        if (/iPad|iPhone|iPod/i.test(navigator.userAgent) && !window.MSStream){\n          agent = 'iOS';\n        } else if (/Android/i.test(navigator.userAgent)){\n          agent = 'android';\n        } else if (/IEMobile/i.test(navigator.userAgent)){\n          agent = 'windows';\n        }\n      }\n      _userAgent = agent;\n      return agent;\n    }\n\n    function isMobileUser() {\n      var check = false;\n      (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\n      return check;\n    }\n\n    function isUserAgent(type) {\n      if (_userAgent === type){\n        return true;\n      }\n      return false;\n    }\n\n    return {\n      getMobileUserAgent: getMobileUserAgent,\n      isMobileUser: isMobileUser,\n      isUserAgent: isUserAgent\n    };\n\n}]);","angular.module(\"NetworkModule\", ['ngWebSocket'])\n.factory(\"networkService\",[\"$websocket\",\"$state\",\"DataService\",\"UserInfoService\",\n\nfunction ($websocket,$state,DataService,UserInfoService)\n{\n  var ws;\n\n  disconnectSocket = function(){\n    console.log(\"Disconnect Callback triggered\");\n    if(ws !== undefined) {\n      ws.close();\n      ws = undefined;\n    }\n  }\n\n  reconnectSocket = function(){\n    console.log(\"Reconnect Callback triggered\");\n    $state.reload();\n  }\n  \n  // window.document.addEventListener(visEvent, function(){\n  //     visChange(reconnectSocket, disconnectSocket);\n  //   });\n\n  function initSocket() { \n    ws = $websocket(getWebsocketUri());\n    DataService.setWatchTopic(false);\n    //Websocket callbacks below\n    ws.onOpen(function() {\n      console.log(\"Websocket Connected\");\n    });\n\n    ws.onClose(function(evt) {\n      ws = undefined;\n      console.log(\"Websocket Closed :\"+evt.data);\n    });\n\n    ws.onMessage(function(evt) {\n      if(NETWORK_DEBUG) console.log(\"Websocket Message Recieved :  \" +evt.data);\n      var responseJson = JSON.parse(evt.data);\n      var type = responseJson.rid;\n      if(type !== undefined){\n        if(type === \"channel\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Channel\");\n          DataService.setChannel(responseJson);\n        }\n        if(type === \"topic\" || type === \"score\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Topic\");\n          DataService.setTopic(responseJson);\n        }else if(type === \"comment\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Comments\");\n          DataService.setComments(responseJson);\n        }\n        else if(type === \"reply\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Reply\");\n          DataService.setReplies(responseJson);\n        }\n        else if(type === \"social\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Social\");\n          DataService.setSocial(responseJson);\n        }\n        else if(type === \"video\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Video\");\n          DataService.setVideo(responseJson);\n        }\n      }\n    });\n\n    ws.onError(function(evt) {\n      \n      console.log(\"Websocket OnError: \"+JSON.stringify(evt) );\n    });\n\n    function getWebsocketUri(){\n      var user = UserInfoService.getUserCredentials();\n      var socketUri = WEBSOCKET_BASE_URI+\n      'userId='+user.userId+\n      '&sessionId='+user.sessionId+\n      '&accessToken='+user.accessToken+\n      '/';\n      if(NETWORK_DEBUG) console.log(\"socketUri: \" + socketUri);\n      return socketUri;\n    }\n  }\n  return{\n    isSocketConnected:function(){\n      if(NETWORK_DEBUG){\n        if(ws!= null)\n        console.log(\"ws status : \"+ ws.readyState);\n        else\n          console.log(\"ws is null\");\n      }\n      if(ws != undefined && ws.readyState == ws.OPEN){\n        return true;\n      }\n      return false;\n    },\n    send:function(message) { \n      if(ws == undefined){ \n        initSocket();\n      }\n      ws.send(JSON.stringify(message));\n    },\n    init:initSocket\n  }\n}]);","angular.module('NetworkModule')\n.factory('ForumStorage', function () {\n\tvar localStorageAvailable = false;\n\tif(typeof(Storage) != undefined) {\n\t\tconsole.log(\"Local storage available :\"+ typeof(Storage));\n\t\tlocalStorageAvailable = true;\n\t}  \n\telse {\n\t\tconsole.log(\"Sorry! No Storage support on this browser..\");\n\t}\n\t\n\tfunction setToLocalStorage(key, value){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\tlocalStorage.setItem(key,value);\n\t}\n\t\n\tfunction getFromLocalStorage(key){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\treturn localStorage.getItem(key);\n\t\treturn undefined;\n\t}\n\t\n\tfunction clearStorage(){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\tlocalStorage.clear();\n\t}\n\t\n\treturn{\n\t\tgetFromLocalStorage:getFromLocalStorage,\n\t\tsetToLocalStorage:setToLocalStorage,\n\t\tclearStorage:clearStorage\n\t}\n\t\n\t\n\n});","angular.module('NetworkModule')\n.factory('ForumDeviceInfo', [\"ForumStorage\",\n\tfunction (ForumStorage) {\n\t//TODO : TEMP function to generate uuid. change this in final version\n\tfunction _p8(s) {\n\t\tvar p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n\t\treturn s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n\t}\n\tfunction generateUUID() {\n\t\tconsole.log(\"GEnerating UUID\");\n\t\tvar uuid = _p8() + _p8(true) + _p8(true) + _p8();\n\t\tconsole.log(\" UUID :\"+ uuid);\n\t\treturn uuid;\n\t}\n\n\treturn{\n\t\tgetDeviceId:function(){\n\t\t\tvar id = ForumStorage.getFromLocalStorage(\"forumUUID\");\n\t\t\tif(id == undefined || id.length <15){\n\t\t\t\tid = generateUUID();\n\t\t\t\tForumStorage.setToLocalStorage(\"forumUUID\",id);\n\t\t\t}\n\t\t\tconsole.log(\"generated ID : \"+ id);\n\t\t\treturn id;\n\n\t\t}\n\t}\n}]);\n","angular.module('NetworkModule')\n.factory('URIHelper', [\"ForumStorage\",\"$stateParams\",\n\tfunction (ForumStorage,$stateParams) {\n\n\tvar peelUserName;\n\tvar peelUserId;\n\tvar peelShowId;\n\n\tvar ssUserName;\n\tvar ssUserId;\n\n\tvar _MI16;\n\n\tfunction getUrlVars() {\n\t\t// var vars = [], hash;\n\t\t// var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\n\t\t// for (var i = 0; i < hashes.length; i++) {\n\t\t// \thash = hashes[i].split('=');\n\t\t// \tvars.push(hash[0]);\n\t\t// \tvars[hash[0]] = hash[1];\n\t\t// }\n\t\treturn $stateParams;\n\t}\n\t\n\t\n\n\treturn {\n\t\tisPeelUser:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif(vars[\"peel\"]){\n\t\t\t\tpeelUserId = vars[\"userId\"];\n\t\t\t\tpeelUserName = vars[\"userName\"];\n\t\t\t\tpeelShowId = vars[\"showId\"];\n\t\t\t\t//If diff previous peel user, clear storage\n\t\t\t\tvar prevPeelUser = ForumStorage.getFromLocalStorage(\"forumUserType\");\n\t\t\t\t// if(prevPeelUser != undefined && prevPeelUser == \"peel\" && ForumStorage.setToLocalStorage(\"forumPeelUserId\") != peelUserId)\n\t\t\t\t\t// ForumStorage.clearStorage();\n\t\t\t\tForumStorage.setToLocalStorage(\"forumPeelUserId\",peelUserId);\n\t\t\t\tForumStorage.setToLocalStorage(\"forumPeelShowId\",peelShowId);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\treturn false;\n\t\t},\n\t\tisSmartStadiumUser:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif(vars[\"smartStadium\"]){\n\t\t\t\tssUserId = vars[\"userId\"];\n\t\t\t\tssUserName = vars[\"userName\"];\n\t\t\t\tForumStorage.setToLocalStorage(\"forumSmartStadiumUserId\",ssUserId);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tisTechMUser:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif (vars[\"MI16\"]){\n\t\t\t\t_MI16 = true;\n\t\t\t\tForumStorage.setToLocalStorage(\"techMIUser\",true);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (_MI16){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetPeelUserId:function(){\n\t\t\treturn peelUserId;\n\t\t},\n\t\tgetPeelUserName:function(){\n\t\t\treturn peelUserName;\n\t\t},\n\t\tgetPeelShowId:function(){\n\t\t\treturn peelShowId;\n\t\t},\n\t\tgetPeelParams:function(){\n\t\t\treturn window.location.search.substring(1);\n\t\t},\n\t\tgetSSUserId:function(){\n\t\t\treturn ssUserId;\n\t\t},\n\t\tgetSSUserName:function(){\n\t\t\treturn ssUserName;\n\t\t}\n\n\n\t};\n\n}]);","angular.module('ChannelModule')\n.factory('ChannelService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\",\n  function (DateUtilityService,Bant,FDSUtility) {\n\n\n  var _channelId;\n  var _liveTopicId;\n\n  var observerCallbacks = []; \n\n  function setTopicData(topicData) \n  {\n    if(topicData.data != undefined){\n      _liveTopicId = topicData.data.id;\n      console.log(\"_liveTopicId : \"+ _liveTopicId);\n      notifyObservers();\n    }\n  }\n\n  function getLiveGameTopic(channelId){\n    var reqChannelId = channelId || _channelId;\n    var uri = \"/v1.0/channel/topic/show/\" + reqChannelId + \"?type=livegame\";\n    if(reqChannelId == \"404\" || reqChannelId == \"5066\")\n    uri = \"/v1.0/channel/topic/show/\" + reqChannelId;\n\n    var topicParams = {\"rid\": \"channel\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\":uri };\n    console.log(\"Ch.getLiveGameTopic: \", topicParams);\n    return topicParams;\n  }\n\n  //call this when you know 'data' has been changed\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n  \n  function registerObserverCallback(callback){\n    //register an observer\n    // console.log(\"topic callback registered\");\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  }\n\n  return {\n    setTopicData:setTopicData,\n    getLiveTopicId:function(){ return _liveTopicId;},\n    getLiveGameTopic:getLiveGameTopic,\n    setChannel: function(channelId){\n      _channelId = channelId;\n    },\n    getChannel: function(){\n      return _channelId;\n    },\n    registerObserverCallback:registerObserverCallback\n\n\n  };\n\n}]);","angular.module('TopicModule')\n.directive('scorecard', function() {\n  return {\n    restrict: 'E',\n    templateUrl: 'partials/scorecard.html'\n  }\n});","angular.module('TopicModule')\n.directive('secureClick', ['$location','$window','UserInfoService',\n  function ($location, $window, UserInfoService) {\n    return {\n      restrict: 'A',\n      link: function($scope, $elem, $attrs){\n        var element = $elem[0];\n        $(element).on('click', function(e){\n          e.preventDefault();\n          if (UserInfoService.isGuestUser()){\n            if (HTML5_LOC){\n              $location.path(\"/login\");\n            } else {\n              $window.location = \"#/login\";\n            }\n          } else {\n            $scope.$eval($attrs.secureClick);\n          }\n        });\n      }\n    }\n}]);\n\nangular.module('TopicModule')\n.directive('secureFocus', ['$location','$window','UserInfoService',\n  function ($location, $window, UserInfoService) {\n    return {\n      restrict: 'A',\n      link: function($scope, $elem, $attrs){\n        var element = $elem[0];\n        $(element).on('focus', function(e){\n          e.preventDefault();\n          if (UserInfoService.isGuestUser()){\n            if (HTML5_LOC){\n              $location.path(\"/login\");\n            } else {\n              $window.location = \"#/login\";\n            }\n          } else {\n            $scope.$eval($attrs.secureFocus);\n          }\n        });\n      }\n    }\n}]);\n\nangular.module('TopicModule')\n.directive('repeatFinishedNotify', function () {\n  return function ($scope, $element, $attrs) {\n    if ($scope.$last){\n      $scope.$eval($attrs.repeatFinishedNotify);\n    }\n  };\n});\n\nangular.module('TopicModule')\n.directive('embedSharedContent', ['UserAgentService',\n  function (UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=embedPost',\n      imageZoom: '&',\n      trustSource: '&',\n      preventNav: '&'      \n    },\n    link: function(scope,elem,attr){\n      scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n    },\n    templateUrl: 'partials/shared.html'\n  };\n}]);\n\nangular.module('TopicModule')\n.directive('mediaPlayer', ['$sce', 'UserAgentService',\n  function ($sce, UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=',\n      vidIndex: '@'\n    },\n    link: function(scope,elem,attr) {\n\n      scope.isMobileUser = UserAgentService.isMobileUser();\n\n      scope.trustSrc = function(src){\n        return $sce.trustAsResourceUrl(src);\n      }\n\n      var video = elem[0].firstElementChild.childNodes[1];\n      var loadingSpinner = elem[0].firstElementChild.childNodes[7];\n      \n      // Video Loading Event Listeners\n      $(video).on('waiting', function() {\n        if (NETWORK_DEBUG)\n          console.log(\"Video Waiting\");\n        if (scope.isMobileUser){\n          loadingSpinner.className = 'media-loading-fullscreen';\n          loadingSpinner.style.zIndex = \"2147483647\";\n        } else {\n          loadingSpinner.className = 'media-loading';\n        }\n      });\n      $(video).on('stalled', function() {\n        if (NETWORK_DEBUG)\n          console.log(\"Video Stalled\");\n        if (scope.isMobileUser){\n          loadingSpinner.className = 'media-loading-fullscreen';\n          loadingSpinner.style.zIndex = \"2147483647\";\n        } else {\n          loadingSpinner.className = 'media-loading';\n        }\n      });\n      var canPlay;\n      $(video).on('canplay', function() {\n        canPlay = true;\n      });\n      $(video).on('playing', function() {\n        if (NETWORK_DEBUG)\n          console.log(\"Video Playing\");\n        loadingSpinner.className = 'media-loading-default';\n      });\n\n      scope.togglePlayPause = function(e) {\n        var thesePlayerNodes = elem[0].firstElementChild.childNodes;\n        var thisVideo = thesePlayerNodes[1];\n        var thisThumbnail = thesePlayerNodes[3];\n        var thisPlayBtn = thesePlayerNodes[5];\n        var thisLoading = thesePlayerNodes[7];\n\n        if (thisVideo.paused || thisVideo.ended){\n          thisPlayBtn.className = 'pause';\n          thisThumbnail.className = 'pause';\n          thisVideo.play();\n          if (scope.isMobileUser){\n            if (thisVideo.requestFullscreen){\n              thisVideo.requestFullscreen();\n            } else if (thisVideo.webkitRequestFullscreen){\n              thisVideo.webkitRequestFullscreen();\n            } else if (thisVideo.mozRequestFullScreen){\n              thisVideo.mozRequestFullScreen();\n            } else if (thisVideo.msRequestFullscreen){\n              thisVideo.msRequestFullscreen();\n            }\n          }\n        }\n        else {\n          thisLoading.className = 'media-loading-default';\n          thisPlayBtn.className = 'media-controls';\n          thisThumbnail.className = 'media-thumbnail';\n          thisVideo.pause();\n        }\n      }\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (NETWORK_DEBUG){\n          // console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-portrait-9x16\");\n          } else {\n            classStrings.push(\"video-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"video-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-landscape-16x9\");\n          } else {\n            classStrings.push(\"video-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, video) {\n        var thesePlayerNodes = elem[0].firstElementChild.childNodes;\n        var thisVideo = thesePlayerNodes[1];\n        var thisWidth = $(thisVideo).width();\n        if (NETWORK_DEBUG){\n          // console.log(\"Elem in setD: \", elem);\n          // console.log(\"PlayerNodes in setD: \", thesePlayerNodes);\n          // console.log(\"Video in setD: \", thisVideo);\n          // console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var styleObj = {};\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        styleObj['height'] = height;\n        if (!!video){\n          styleObj['background-image'] = 'url(' + video.mediaThumbUrl + ')';\n          styleObj['background-size'] = 'cover';\n          styleObj['background-position-y'] = setYOffset(video);\n          styleObj['background-position-x'] = setXOffset(video);\n        }\n        if (NETWORK_DEBUG){\n          // console.log(\"Set Dimensions Object: \", styleObj);\n        }\n        return styleObj;\n      }\n\n      function setYOffset(video){\n        var offset;\n        if (!!video.mediaAspectFeed.y){\n          offset = '-' + video.mediaAspectFeed.y + 'px';\n        }\n        else if (!!video.mediaAspectFull.y){\n          offset = '-' + video.mediaAspectFull.y + 'px';\n        }\n        return offset;\n      }\n\n      function setXOffset(video){\n        var offset;\n        if (!!video.mediaAspectFeed.x){\n          offset = '-' + video.mediaAspectFeed.x + 'px';\n        }\n        else if (!!video.mediaAspectFull.x){\n          offset = '-' + video.mediaAspectFull.x + 'px';\n        }\n        return offset;\n      }\n\n    },\n    templateUrl: 'partials/mediaPlayer.html'\n  };\n}]);\n\nangular.module('TopicModule')\n.directive('ngElementReady', [function() {\n  return {\n    priority: -1000,\n    restrict: \"A\",\n    link: function($scope, $element, $attributes) {\n        $scope.$eval($attributes.ngElementReady); // execute expression from attribute\n    }\n  };\n}]);\n\n","angular.module('TopicModule')\n.directive('embedPlayer', ['$sce', 'UserAgentService',\n  function ($sce, UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '='\n    },\n    link: function(scope,elem,attr) {\n\n      scope.isMobileUser = UserAgentService.isMobileUser();\n\n      scope.trustSrcHtml = function(src){\n        return $sce.trustAsHtml(src);\n      }\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (NETWORK_DEBUG){\n          // console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-portrait-9x16\");\n          } else {\n            classStrings.push(\"video-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"video-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-landscape-16x9\");\n          } else {\n            classStrings.push(\"video-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, video) {\n        var thesePlayerNodes = elem[0].childNodes;\n        var thisVideo = thesePlayerNodes[0];\n        var thisWidth = $(thisVideo).width();\n        if (NETWORK_DEBUG){\n          // console.log(\"PlayerNodes in setD: \", thesePlayerNodes);\n          // console.log(\"Video in setD: \", thisVideo);\n          // console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        var iframePlayer = thisVideo.childNodes[0];\n        $(iframePlayer).css('height',height);\n        if (NETWORK_DEBUG){\n          // console.log(\"Setting Height On: \", iframePlayer, height);\n        }\n      }\n\n    },\n    templateUrl: 'partials/embedPlayer.html'\n  };\n}]);","angular.module('TopicModule')\n.directive('imageControl', ['$sce',\n  function ($sce) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '='\n    },\n    link: function(scope,elem,attr) {\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (NETWORK_DEBUG){\n          // console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"image-portrait-9x16\");\n          } else {\n            classStrings.push(\"image-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"image-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"image-landscape-16x9\");\n          } else {\n            classStrings.push(\"image-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, image) {\n        var thisImage = elem[0].childNodes[0];\n        var thisWidth = $(thisImage).width();\n        if (NETWORK_DEBUG){\n          // console.log(\"Image in setD: \", thisImage);\n          // console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var styleObj = {};\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        styleObj['height'] = height;\n        if (!!image){\n          styleObj['background-image'] = 'url(' + image.mediaUrl + ')';\n          styleObj['background-size'] = 'cover';\n          styleObj['background-position-y'] = setOffsets(image, 'y', height) || '';\n          styleObj['background-position-x'] = setOffsets(image, 'x', thisWidth) || '';\n        }\n\n        if (NETWORK_DEBUG){\n          // console.log(\"Set Dimensions Object: \", styleObj);\n        }\n        return styleObj;\n      }\n\n      function setOffsets(image, direction, ref){\n        var offset;\n        var offsetScale; \n        if (direction === 'y'){\n          if (!!image.mediaAspectFeed.y){\n            offsetScale = ref / image.mediaAspectFeed.h;\n            var scaledY = image.mediaAspectFeed.y * offsetScale;\n            offset = '-' + scaledY + 'px';\n          }\n        }\n        if (direction === 'x'){\n          if (!!image.mediaAspectFeed.x){\n            offsetScale = ref / image.mediaAspectFeed.w;\n            var scaledX = image.mediaAspectFeed.x * offsetScale;\n            offset = '-' + scaledX + 'px';\n          }\n        }\n        return offset;\n      }\n\n    },\n    templateUrl: 'partials/imageControl.html'\n  };\n}]);","angular.module('NetworkModule')\n.service('DataService', [\"TopicService\",\"CommentService\",\"ReplyService\",\"ChannelService\",\"SocialService\",\"VideoService\",\n  function (TopicService, CommentService, ReplyService, ChannelService, SocialService, VideoService) {\n  \n  var DATA_TYPE_TOPIC = \"topic\";\n  var DATA_TYPE_COMMENT = \"comment\";\n  var DATA_TYPE_REPLY = \"reply\";\n  var DATA_TYPE_SCORE = \"score\";\n  var DATA_BANT_ID_LENGTH = 16;\n\n  function delegateSetComments(commentsData) \n  { \n    if(commentsData.error){\n      console.log(\"Comments Error message from network: \", commentsData.error);\n    }\n    else if(commentsData.push){\n      if(commentsData.method == \"UPSERT\")\n        if(CommentService.updateComment(commentsData) == 0)\n          TopicService.updateCommentCount(1);\n      else if(commentsData.method == \"REMOVE\"){\n        //TODO: Design requirement for how to show a deleted comment\n//        if(CommentService.removeComment(commentsData) == 0)\n//          TopicService.updateCommentCount(-1);  \n      }\n    }\n    else {\n      if(commentsData.method == \"POST\"){\n        var uri = commentsData.uri;\n        if(uri != undefined){\n          var commentId = uri.slice(-DATA_BANT_ID_LENGTH);\n//          console.log(\"Comment ID: \"+ commentId);\n//          console.log(\"uri: \"+ uri);\n          if(uri == \"/v1.0/comment/create\"){\n            CommentService.appendToComments(commentsData);\n            TopicService.updateCommentCount(1);\n          }\n          else{\n            if(CommentService.updateCommentLocalData(uri, commentId) == 0)\n              TopicService.updateCommentCount(-1);\n          }\n        }\n      }\n      else\n        CommentService.setComments(commentsData);\n\n    }\n  }\n\n  function delegateSetTopic(topicData)\n  {\n    if(topicData.error){\n      console.log(\"Topic Error message from network: \", topicData.error);\n    }\n    else if(topicData.push){\n      if(topicData.method == \"UPSERT\")\n        TopicService.updateTopic(topicData.data);\n      else if(topicData.method == \"REMOVE\")\n        TopicService.removeTopic(topicData.data);\n    }\n    else\n      TopicService.setTopic(topicData);\n  }\n\n  function delegateSetReplies(replyData)\n  {\n    if(replyData.error){\n      console.log(\"Topic Error message from network: \", replyData.error);\n    }\n    else if(replyData.push){\n      console.log(\"reply pushed \");\n      if(replyData.method == \"UPSERT\")\n        if(ReplyService.updateReply(replyData) === 0){\n          if(replyData.data != undefined)\n          CommentService.updateReplyCountById(replyData.data.commentId,1);\n        }\n      else if(replyData.method == \"REMOVE\"){\n        //TODO: no action required\n        //ReplyService.removeReply(replyData);\n      }\n    }\n    else {\n      if(replyData.method == \"POST\"){\n        var uri = replyData.uri;\n        if(uri != undefined){\n          var id = uri.slice(-DATA_BANT_ID_LENGTH);\n//          console.log(\"Comment ID: \"+ id);\n//          console.log(\"uri: \"+ uri);\n          if(uri == \"/v1.0/reply/create\"){\n            ReplyService.appendToReplies(replyData);\n            if(replyData.data != undefined)\n              CommentService.updateReplyCountById(replyData.data.commentId, 1);\n          }\n          else{\n            var commentId =  ReplyService.getCommentIdByReply(id);\n            if(ReplyService.updateReplyLocalData(uri, id) == 0)\n              CommentService.updateReplyCountById(commentId, -1);\n          }\n        }\n      }\n      else\n        ReplyService.setReplies(replyData);\n    }\n      \n  }\n  \n  function delegateSetChannel(data) {\n    if(data.error){\n      console.log(\"Topic Error message from network: \", data.error);\n    }\n    else {\n      console.log(\"delegateSetChannel: \", data);\n      ChannelService.setTopicData(data);\n    }\n  }\n  \n  function delegateSetSocial(data) {\n    if(data.error){\n      console.log(\"Social Error message from network: \", data.error);\n    }\n    else {\n      console.log(\"SOCIAL GET\");\n      SocialService.setSocialData(data);\n    }\n  }\n\n  function delegateSetVideo(data) {\n    if(data.error){\n      console.log(\"Video Error message from network: \", data.error);\n    }\n    else {\n      console.log(\"VIDEO GET\");\n      VideoService.setVideoData(data);\n    }\n  }\n\n  return {\n    setVideo:delegateSetVideo,\n    setSocial:delegateSetSocial,\n    setChannel:delegateSetChannel,\n    setTopic:delegateSetTopic,\n    setComments:delegateSetComments,\n    setReplies:delegateSetReplies,\n    setWatchTopic:function(watched){\n      TopicService.setWatchTopic(watched);\n    }\n  };\n\n}]);","angular.module('TopicModule')\n.factory('TopicService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\",\n  function (DateUtilityService,Bant,FDSUtility) {\n\n  var TOPIC_BASE_URI = \"/v1.0/topic/show/\";\n  var LIKE_TOPIC_URI = \"/v1.0/topic/like/\";\n  var UNLIKE_TOPIC_URI = \"/v1.0/topic/unlike/\";\n  var WATCH_TOPIC_URI = \"/v1.0/topic/watch/\";\n  \n  var _channelId;\n  var _userType;\n  \n  var _isTopicWatched = false;\n  var _topic;\n  var _topicType;\n  var _id;\n  var _title;\n  var _game;\n  var _status;\n  var _score;\n  var _gameStats;\n  var _links;\n  var _scheduledAt;\n  var observerCallbacks = []; \n  var directComment; //bool flag to indicate whether user tapped on a comment's \"comment\" icon\n\n  function setTopicData(topicData) \n  {\n    if(topicData.data != undefined){\n      if(topicData.data.content != undefined ){\n        _title = topicData.data.content.title;\n      }\n\n\n      _topicType = topicData.data.topicType;\n      console.log(\"TOPIC TYPE :\"+_topicType );\n      _id = topicData.data.id;\n      if(_topicType == \"livegame\"){\n        _game = topicData.data.game;\n        if(_game != undefined){\n          _scheduledAt = DateUtilityService.getGameScheduledTime(_game.scheduledAt);\n          _score = _game.score;\n  //        Future game: live == false AND final == false.\n  //        Live game: live == true.\n  //        Past game: final == true.\n          if(_score.live == undefined && _score.final == undefined)\n            _status = \"future\";\n          else if(_score.live == true)\n            _status = \"live\";\n          else if(_score.final == true)\n            _status = \"past\";\n          // console.log(\"GAME Status  :\"+ _status );\n  \n          if(_status == \"live\"){\n            console.log(\"_gameStats\" + _score.status);\n            _gameStats = _score.status;\n          }\n        }\n      }\n\n      _topic = Bant.bant(topicData.data);\n      notifyObservers();\n    }\n    else if(topicData.method == \"POST\"){\n\n      //Handle operations dependent on POST\n      if(topicData.uri == WATCH_TOPIC_URI+_id){\n        if(NETWORK_DEBUG)\n          console.log(\"Topic watch success\");\n        _isTopicWatched = true;\n      }\n      else if(topicData.uri == LIKE_TOPIC_URI+_id)\n      {\n        if(NETWORK_DEBUG)\n          console.log(\"Topic liked success\");\n        _topic = Bant.updateBantLiked(_topic, true);\n        notifyObservers();\n      }\n      else if(topicData.uri == UNLIKE_TOPIC_URI+_id){\n        if(NETWORK_DEBUG)\n          console.log(\"Topic unliked success\");\n        _topic = Bant.updateBantLiked(_topic, false);\n        notifyObservers();\n      }\n    }\n  }\n\n  function updateTopicData(scoreData){\n    console.log(\"Topic Service scoreData :\" + scoreData)\n    setScoreData(scoreData);\n  }\n\n  function setScoreData(scoreData) \n  {\n    _score = scoreData;\n    //console.log(\"TopicService  insideScore\"+_score );\n    if(_score != undefined){\n      if(_score.live == true){\n        _status = \"live\";\n      }\n      _gameStats = _score.status;\n      console.log(\"Game Points :\" + _score.points[0] + \" : : \"+_score.points[1] );\n      console.log(\"Game Period :\" + _gameStats[0]);\n      console.log(\"Game Period :\" + _gameStats[1]);\n      notifyObservers();\n    }\n  }\n  \n  function updateCommentCount(value){\n    console.log(\"Update comment count: \" + _topic.metrics.comments + \"     Value : \"+ value);\n    if(_topic!= undefined && _topic.metrics != undefined){\n      if(value == 1)\n      _topic.metrics.comments == undefined ? _topic.metrics.comments =1: _topic.metrics.comments = _topic.metrics.comments+1;\n      else\n        _topic.metrics.comments == undefined ? _topic.metrics.comments =0: _topic.metrics.comments = _topic.metrics.comments-1; \n    }\n    notifyObservers();\n  }\n\n  function getTopicRequest(topicId){\n    var uri = TOPIC_BASE_URI+topicId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"GET\",\n        \"uri\": encodeURI(uri)};\n  }\n  function getFollowChannelRequest(){\n    \n    var channelId = 0;\n    if(_topic!= undefined && _topic.owner!= undefined)\n      channelId = _topic.owner.id;\n      _channelId = channelId;\n    var uri = \"/v1.0/channel/follow/\" + channelId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(uri)};\n  }\n  \n  function watchTopicRequest(topicId){\n    var uri = WATCH_TOPIC_URI+topicId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(uri)};\n  }\n\n  function likeTopicRequest(){\n    console.log(\"Like topic request invoked\"+_id);\n    return  varLikeParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(LIKE_TOPIC_URI + _id)};\n\n\n  }\n\n  function unlikeTopicRequest(){\n    return  varLikeParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(UNLIKE_TOPIC_URI + _id)};\n\n\n  }\n\n  //call this when you know 'data' has been changed\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n  \n  function registerObserverCallback(callback){\n    //register an observer\n    // console.log(\"topic callback registered\");\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  }\n\n  return {\n    getTopic: function(){ \n      return _topic ;},\n    getTopicId: function(){ \n      return _id ;},\n    getTopicType: function(){ \n      return _topicType ;},\n    getGame: function(){  \n      return _game;},\n    getGameTime: function(){\n      return _scheduledAt;\n    },\n    getTeamA: function(){ \n      if(_game != undefined) {\n        return _game.teams[0];\n      }},\n    getTeamB: function(){ \n      if(_game != undefined) {\n        return _game.teams[1];}\n    },\n    getScoresTitle: function(){   \n      if(_game != undefined && _game.links != undefined) \n        return _game.links[0].title;},\n    getScoresLink: function(){  \n      if((_game != undefined) && (_game.links != undefined)) \n        return _game.links[0].url;},\n    getScore: function(){ \n      if(_score != undefined) \n        return _score;},\n    getGameStatus: function() { \n      return _status;},\n    getGamePeriod: function() { \n      return _gameStats[0];},\n    getGameClock: function() {  \n      return _gameStats[1];},\n//    getSectionType: function(sectionNumber){ \n//    //TODO check for section length\n//    if(sectionNumber == undefined )\n//    return _topic.data.content.sections[0].type;\n//    else\n//    return _topic.data.content.sections[sectionNumber].type\n//    },\n    getChannelId:function(){  \n      if(_topic != undefined) \n        return _topic.owner.id;},\n    getTitle:function(){  \n      return _title;},\n    getHtml:function(){ \n      if(_topic != undefined) \n        return _topic.html},\n//    getMedia:function(){return _media},\n//    getTweet:function(){return _tweet},\n//    getOgp:function(){return _ogp},\n//    getLink:function(){return _link},\n    getTimeCreatedAt:function(){  \n      if(_topic != undefined) \n        return _topic.createdAt},\n    getLiked:function(){  \n      if(_topic != undefined) \n        return _topic.signal.like},\n    getMetrics:function(){  \n      if(_topic != undefined) \n        return _topic.metrics},\n    \n    watchTopicRequest:watchTopicRequest,\n    \n    getLikeTopicRequest:likeTopicRequest,\n    \n    getUnlikeTopicRequest:unlikeTopicRequest,\n    \n    getFollowChannelRequest:getFollowChannelRequest,\n    \n    getTopicRequest:getTopicRequest,\n    \n    isWatchingTopic: function(){ return _isTopicWatched;},\n    \n    setWatchTopic: function(watch){_isTopicWatched = watch;},\n    \n    setTopicId: function(topicId){_id = topicId ;},\n    \n    setChannel: function(channelId){_channelId = channelId; },\n    getChannel: function(){return _channelId ; },\n    \n    setTopic:setTopicData,\n    \n    updateTopic:updateTopicData,\n    \n    updateCommentCount: updateCommentCount,\n    \n    registerObserverCallback:registerObserverCallback,\n    \n    directComment:directComment\n\n  };\n\n}]);","angular.module('SocialModule')\n.factory('VideoService', [\"Bant\",\n\tfunction (Bant) {\n\tvar LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n\tvar observerCallbacks = [];\n\tvar _videoArray = [];\n\tvar _offset = 0;\n\tvar LIMIT = 10;\n\n\n\tfunction setVideoData(videoData) {\n\t\t_videoArray = [];\n\t\tvar tempData = videoData.data.results;\n\t\tvar len = tempData.length;\n\n\t\tif (!!tempData && len > 0){\n\t\t\tfor (i = 0; i < len; i++){\n\t\t\t\tvar _videoObject = Bant.bant(tempData[i]);\n\t\t\t\tif (!!_videoObject.id)\n\t\t\t\t\t_videoArray.push(_videoObject);\n\t\t\t}\n\t\t\t_offset = videoData.data.nextOffset;\n\t\t\tnotifyObservers();\n\t\t}\n\t}\n\n\n\t//call this when you know 'comments' has been changed\n\tvar notifyObservers = function(){\n\t\tangular.forEach(observerCallbacks, function(callback){\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tfunction registerObserverCallback(callback){\n\t\t//register an observer\n\t\tvar callbackLength  = observerCallbacks.length;\n\t\twhile(callbackLength > 0){\n\t\t\tcallbackLength = observerCallbacks.length;\n\t\t\tobserverCallbacks.pop();\n\t\t}\n\t\tobserverCallbacks.push(callback);\n\t}\n\n\tfunction getVideoDataRequest(id, offset){\n\t\tvar reqOffset = offset || _offset;\n\t\tvar request = {\n\t\t\t\"rid\": \"video\",\n\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\"method\": \"GET\",\n\t\t\t\"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset+\"&filter=video\")\n\t\t};\n\t\tconsole.log(\"Video Request: \", request);\n\t\treturn request;\n\t}\n\n\treturn {\n\t\tvideoArray: function(){\n\t\t\treturn _videoArray;\n\t\t},\n\t\tresetVideoOffset: function(){\n      _offset = 0;\n    },\n\t\tsetVideoData:setVideoData,\n\t\tgetVideoDataRequest:getVideoDataRequest,\n\t\tregisterObserverCallback:registerObserverCallback\n\t};\n\n}]);","angular.module('SocialModule')\n.factory('SocialService', [\"Bant\", \n  function (Bant) {\n  var LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n  var observerCallbacks = [];\n  var _socialArray = [];\n  var _offset = 0;\n  var LIMIT = 20;\n\n\n  function setSocialData(socialData) {\n    _socialArray = [];\n    var tempData = socialData.data.results;\n    var len = tempData.length;\n\n    if (!!tempData && len > 0){\n      for (i = 0; i < len; i++){\n        var _socialObject = Bant.bant(tempData[i]);\n        if (!!_socialObject.id)\n          _socialArray.push(_socialObject);\n      }\n      _offset = socialData.data.nextOffset;\n      notifyObservers();\n    }\n  };\n\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n\n  function registerObserverCallback(callback){\n    // register an observer for provided feed\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  };\n\n  function getSocialDataRequest(id, offset){\n    var reqOffset = offset || _offset;\n    var request = {\n      \"rid\": \"social\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset)\n    };\n    console.log(\"Social Request: \", request);\n    return request;\n  };\n\n  return {\n    socialArray: function(){\n      return _socialArray;\n    },\n    resetSocialOffset: function(){\n      _offset = 0;\n    },\n    setSocialData: setSocialData,\n    getSocialDataRequest: getSocialDataRequest,\n    registerObserverCallback: registerObserverCallback\n  };\n\n}]);","angular.module(\"SplashModule\", [])\n.factory(\"SplashService\", function(){\n  var _hidePeelSplash = true;\n  var _hideSSSplash = true;\n \n  return {\n    hidePeelSplash: function(){\n      return _hidePeelSplash;\n    },\n    hideSSSplash: function(){\n      return _hideSSSplash;\n    },\n    setPeelSplash: function(val){\n      _hidePeelSplash = val;\n    },\n    setSSSplash: function(val){\n      _hideSSSplash = val;\n    }\n  }\n});","angular.module('NetworkModule')\n.factory('CommentService', [\"Bant\",\"DateUtilityService\",\"FDSUtility\",\n  function (Bant,DateUtilityService,FDSUtility) {\n  var LIST_COMMENTS_URI = \"/v1.0/topic/comments/list/\"\n  var SHOW_COMMENT_URI = \"/v1.0/comment/show/\";\n    \n  var POST_COMMENT_URI=\"/v1.0/comment/create\";\n  var UPDATE_COMMNET_URI = \"/v1.0/comment/content/update/\";\n  var PIN_COMMENT_URI = \"/v1.0/comment/pin/\";\n  var DELETE_COMMENT_URI = \"/v1.0/comment/delete/\";\n  \n  var LIKE_COMMENT_URI = \"/v1.0/comment/like/\";\n  var UNLIKE_COMMENT_URI = \"/v1.0/comment/unlike/\";\n\n  var HIDE_COMMENT_URI = \"/v1.0/comment/hide/\";\n  var UNHIDE_COMMENT_URI = \"/v1.0/comment/unhide/\";\n  \n  var FLAG_COMMENT_URI = \"/v1.0/comment/flag/\";\n  var UNFLAG_COMMENT_URI = \"/v1.0/comment/unflag/\";\n  \n  var observerCallbacks = [];\n  var tempObserverCallbacks = [];\n  var _comments = [];\n  var _pinnedComments = 0;\n  var _offset = 0;\n\n  var _loadedComments = false;\n\n  function setComments(commentsData) {\n    //TODO clear comments for complete refresh Comments API\n    _comments = [];\n    tempCommentsData = commentsData.data.results;\n    if(tempCommentsData != undefined && tempCommentsData.length>0){\n      var len = tempCommentsData.length;\n      for(i=0;i<len;i++){\n        var _commentObject = {};\n        _commentObject = Bant.bant(tempCommentsData[i]);\n        if(_commentObject.id != undefined)\n          _comments.push(_commentObject);\n        // console.log(\"Comments in set comment Service type:\"+_commentObject.type + \"  \" +_commentObject.html );\n      }\n      if (commentsData.data.prevOffset === \"\"){\n        notifyObservers(true);\n      } else {\n        notifyObservers();\n      }\n      _offset = commentsData.data.nextOffset;\n    }\n    else{\n      //PArticular case when user is on reply page and requires comment by comment ID\n      var data = commentsData.data;\n      if((commentsData.method == \"GET\") &&(commentsData.uri.substring(0,SHOW_COMMENT_URI.length) == SHOW_COMMENT_URI) ){\n        if(NETWORK_DEBUG) console.log(\"Processing Show comment\");\n        var _commentObject = {};\n        _commentObject = Bant.bant(data);\n        if(_commentObject.id != undefined)\n          _comments.push(_commentObject); \n        notifyObservers();\n      }\n    }\n  }\n\n  function appendToComments(postCommentData) {\n    var tempComment = postCommentData.data;\n    if(tempComment!= undefined){\n      var _commentObject = {};\n      _commentObject = Bant.bant(tempComment);\n      if(_commentObject.id != undefined && (_commentObject.html != undefined || _commentObject.media != undefined)){\n        var i = 0;\n        if(_comments.length >0)\n        while(_comments[i].pin == true)\n          i++; \n        _pinnedComments = i;\n        //console.log(\"Pinned comments \"+ i);\n        if(_pinnedComments>0)\n          _comments.splice(i,0,_commentObject);\n        else\n          _comments.unshift(_commentObject);\n      }\n      // console.log(\"appendToComments CommentService\"+_commentObject.html );\n    }\n    notifyObservers();\n  }\n\n\n\n\n  function updateComment(commentData){\n    //if comments ID exist, update it \n    //else append to existing list\n    var commentObj = commentData.data;\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == commentObj.id){\n        //update\n        _comments[i] = Bant.bant(commentObj);\n        return 1;\n      }\n    }\n    appendToComments(commentData);\n    //notifyObservers();\n    console.log(\"In Comment Service update comment\");\n    return 0;\n  }\n  \n  function updateLocalData(newData){\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == newData.id){\n        //update\n        _comments[i] = newData;\n        return;\n      }\n    }\n  }\n  \n  function updateLikeCommentWithId(id, liked){\n    if(NETWORK_DEBUG)\n    console.log(\"updateLikeCommentWithId :\"+ id + \"   liked \"+ liked);\n    if((id != undefined)){\n      var tempObject;\n      tempObject = getCommentById(id);\n      tempObject = Bant.updateBantLiked(tempObject, liked);\n      updateLocalData(tempObject);\n\n      notifyObservers();\n    }\n    \n  }\n\n  function removeComment(commentData){\n    var commentObj = commentData.data;\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == commentObj.id){\n        //remove element\n        _comments.splice(i,1);\n        console.log(\"found Comment\")\n        return 0;\n      }\n    }\n    return 1;\n\n  }\n  \n  function getCommentById(id){\n    if(NETWORK_DEBUG) console.log(\"_comments :\"+ _comments.length);\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == id){\n        //remove element\n        return _comments[i];\n      }\n    }\n  }\n\n\n\n\n  //call this when you know 'comments' has been changed\n  var notifyObservers = function(temp){\n    if (temp){\n      console.log(\"IN TEMP\");\n      angular.forEach(tempObserverCallbacks, function(callback){\n        callback();\n      });\n    } else {\n      console.log(\"IN REG\");\n      angular.forEach(observerCallbacks, function(callback){\n        callback();\n      });\n    }\n  };\n  \n  function registerObserverCallback(callback, temp){\n    //register an observer\n    if (temp){\n      tempObserverCallbacks.push(callback);\n    } else {\n      observerCallbacks.push(callback);\n    }\n  }\n  \n  function commentGetRequest(uri){\n    var queryStr;\n    if (_offset === 0){\n      queryStr = \"?limit=10&offset=\" + _offset;\n    } else {\n      queryStr = \"?offset=\" + _offset;\n    }\n    return  {\"rid\": \"comment\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(uri + queryStr)}\n  }\n  function commentPostRequest(uri){\n    return  {\"rid\": \"comment\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"POST\",\n      \"uri\": encodeURI(uri)}\n  }\n  function getCommentsRequest(commentId){\n    var uri = LIST_COMMENTS_URI+commentId;\n    return  commentGetRequest(uri);\n  }\n  \n  function getCommentByIdRequest(commentId){\n    var uri = SHOW_COMMENT_URI + commentId;\n    return  commentGetRequest(uri);\n  }\n\n  function postCommentRequest(topicId, commentData){\n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData}]},\n          \"topicId\": topicId,\n        };\n    return createCommentParams;\n  }\n  function postCommentRequestForMedia(topicId, commentData, mediaData){\n    var m = {\"media\":[mediaData]};\n    \n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData},{\"type\":\"media\"}]},\n          \n          \"topicId\": topicId,\n        };\n    createCommentParams.data.content.sections[1].media = m.media;\n    console.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n    return createCommentParams;\n  }\n\n  function postCommentRequestForShare(topicId, commentData, embedData){\n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData},{\"type\":\"embed\"}]},\n          \n          \"topicId\": topicId,\n        };\n    createCommentParams.data.content.sections[1].embed = embedData;\n    console.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n    return createCommentParams;\n  }\n\n  function likeCommentRequest(id){\n    return commentPostRequest(LIKE_COMMENT_URI + id);\n\n  }\n\n  function unlikeCommentRequest(id){\n    return commentPostRequest(UNLIKE_COMMENT_URI + id);\n  }\n  \n  function hideCommentRequest(id){\n    return commentPostRequest(HIDE_COMMENT_URI + id);\n\n  }\n\n  function unhideCommentRequest(id){\n    return commentPostRequest(UNHIDE_COMMENT_URI + id);\n  }\n  \n  function flagCommentRequest(id){\n    return commentPostRequest(FLAG_COMMENT_URI + id + \"?reason=spam\");\n\n  }\n\n  function unflagCommentRequest(id){\n    return commentPostRequest(UNFLAG_COMMENT_URI + id);\n  }\n  \n  function deleteCommentRequest(id){\n    return commentPostRequest(DELETE_COMMENT_URI + id);\n  }\n  \n  function isCommentLiked(id){\n    return FDSUtility.isLikedById(_comments,id);\n  }\n  \n  \n  function updateReplyCountById(id, value){\n    if(id != undefined ){\n    //var id = replyData.commentId;\n    var tempStructure = getCommentById(id);\n    if(tempStructure != undefined){\n      if(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.metrics.replies :\"+ tempStructure.metrics.replies);\n      if(value == -1){\n      tempStructure.metrics.replies == undefined ? tempStructure.metrics.replies = 0: tempStructure.metrics.replies = tempStructure.metrics.replies - 1;\n      }\n      else {\n        \n        tempStructure.metrics.replies == undefined ? tempStructure.metrics.replies = 1: tempStructure.metrics.replies = tempStructure.metrics.replies + 1;\n      }\n      updateLocalData(tempStructure); \n    notifyObservers();\n    }\n    }\n    \n  }\n\n  function updateCommentLocalData(uri,id){\n    if(uri == LIKE_COMMENT_URI+id){\n      console.log(\"calling update like \");\n      updateLikeCommentWithId(id, true)\n    }\n    else if(uri == UNLIKE_COMMENT_URI+id){\n      updateLikeCommentWithId(id, false)\n    }\n    else if(uri == DELETE_COMMENT_URI+id){\n      _comments = FDSUtility.deleteById(_comments,id);\n      notifyObservers();\n      return 0;\n    }\n    else if(uri == FLAG_COMMENT_URI+id){\n      _comments = FDSUtility.flagById(_comments, false);\n      }\n    else if(uri == UNFLAG_COMMENT_URI+id){\n      _comments = FDSUtility.flagById(_comments, false);\n    }\n    else if(uri == HIDE_COMMENT_URI+id){\n      _comments = FDSUtility.hideById(_comments, true);\n    }\n    else if(uri == UNHIDE_COMMENT_URI+id){\n      _comments = FDSUtility.hideById(_comments, false);\n    }\n  }\n\n\n  return {\n    comments: function(){\n      return _comments },\n\n      setComments:setComments,\n      updateComment:updateComment,\n      appendToComments:appendToComments,\n      updateLikeCommentWithId:updateLikeCommentWithId,\n      updateCommentLocalData:updateCommentLocalData,\n      updateReplyCountById:updateReplyCountById,\n      removeComment:removeComment,\n      postCommentRequest:postCommentRequest,\n      postCommentRequestForMedia:postCommentRequestForMedia,\n      postCommentRequestForShare:postCommentRequestForShare,\n      getLikeCommentRequest:likeCommentRequest,\n      getUnlikeCommentRequest:unlikeCommentRequest,\n      registerObserverCallback:registerObserverCallback,\n      getCommentsRequest:getCommentsRequest,\n      getCommentById:getCommentById,\n      getCommentByIdRequest:getCommentByIdRequest,\n      deleteCommentRequest:deleteCommentRequest,\n      flagCommentRequest:flagCommentRequest,\n      isCommentLiked:isCommentLiked,\n      getNumPinComments:function(){\n        return _pinnedComments;\n      },\n      loadedComments: function(){\n        return _loadedComments;\n      },\n      setLoadedComments: function(val){\n        _loadedComments = val;\n      }\n  };\n\n}]);","angular.module('NetworkModule')\n.service('DateUtilityService', function () {\n\n\tfunction timeSince(timeStamp) {\n\t\t// console.log(\"timeSatmp\", timeStamp);\n\t\tvar now = new Date();\n\t\tvar createdDate = new Date(timeStamp);\n\t\tsecondsPast = (now.getTime() - createdDate.getTime()) / 1000;\n\t\tif(secondsPast < 60){\n\t\t\treturn 'now';\n\t\t}\n\t\tif(secondsPast < 3600){\n\t\t\treturn parseInt(secondsPast/60) + 'm';\n\t\t}\n\t\tif(secondsPast < 86400){\n\t\t\treturn parseInt(secondsPast/3600) + 'h';\n\t\t}\n\t\tif(secondsPast < 2592000){\n\n\t\t\tvar daysPassed = secondsPast/86400;\n\t\t\treturn Math.floor(daysPassed) + 'd';\n\t\t}\n\t\tif(secondsPast > 2592000){\n\t\t\tday = createdDate.getDate();\n\t\t\tmonth = createdDate.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \",\"\");\n\t\t\tyear = createdDate.getFullYear() == now.getFullYear() ? \"\" :  \" \"+createdDate.getFullYear();\n\t\t\tconsole.log(\"DATE \"+ day + \" \" + month + year);\n\t\t\treturn day + \" \" + month + year;\n\t\t}\n\t}\n\t\n\tfunction gameScheduleTime(timeStamp){\n\t\tvar date_format = '12';\n\t\tvar createdDate = new Date(timeStamp);\n\t\tday = createdDate.getDate();\n\t\tmonth = createdDate.getMonth() + 1;\n\t\thour = createdDate.getHours();\n\t\tvar hour    = createdDate.getHours();  /* Returns the hour (from 0-23) */\n\t\tvar minutes     = createdDate.getMinutes();  /* Returns the minutes (from 0-59) */\n\t\tvar time  = hour;\n\t\tvar ext     = '';\n\t\tvar timeZone = createdDate.toLocaleString('en', {timeZoneName:'short'}).split(' ').pop();\n\n\t\tif(date_format == '12'){\n\t\t    if(hour > 12){\n\t\t        ext = 'PM';\n\t\t        hour = (hour - 12);\n\n\t\t        if(hour < 10){\n\t\t        \ttime = \"0\" + hour;\n\t\t        }else if(hour == 12){\n\t\t            hour = \"00\";\n\t\t            ext = 'AM';\n\t\t        }\n\t\t    }\n\t\t    else if(hour < 12){\n\t\t    \ttime = ((hour < 10) ? \"0\" + hour : hour);\n\t\t        ext = 'AM';\n\t\t    }else if(hour == 12){\n\t\t        ext = 'PM';\n\t\t    }\n\t\t}\n\n\t\tif(minutes < 10){\n\t\t    minutes = \"0\" + minutes; \n\t\t}\n\n\t\ttime = time + \":\" + minutes + ' ' + ext + ' '+timeZone; \n\t\tdate = month+ \"/\" +day;\n\t\tresult = {\"date\":date,\"time\":time};\n\n\t\tconsole.log(\"Scheduled date : \"+ result.date + \"  Scheduled time : \"+result.time);\n\t\t\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\treturn{\n\t\tgetTimeSince:timeSince,\n\t\tgetGameScheduledTime:gameScheduleTime\n\t};\t\n});","angular.module('NetworkModule')\n.factory('Bant', [\"DateUtilityService\",\n  function (DateUtilityService) {\n  var EXTRACT_MEDIA_TYPE_LENGTH = 5;\n  \n  function extractMediaObject (_bantObject, tempMedia){\n    //if Video update\n    _bantObject.mediaType = tempMedia.mediaType.substring(EXTRACT_MEDIA_TYPE_LENGTH,0);\n    if(_bantObject.mediaType ==\"video\"){\n      _bantObject.mediaThumbUrl = tempMedia.thumbUrl;\n    }\n    _bantObject.mediaUrl = tempMedia.url;\n    if(tempMedia.sizes != undefined){\n    _bantObject.mediaAspectFull = tempMedia.sizes[\"full\"];\n    _bantObject.mediaAspect16x9 = tempMedia.sizes[\"16:9\"];\n    _bantObject.mediaAspect1x1 = tempMedia.sizes[\"1:1\"];\n    _bantObject.mediaAspect2x1 = tempMedia.sizes[\"2:1\"];\n    }\n    if(_bantObject.mediaAspect16x9 != undefined){\n      _bantObject.mediaAspectRatio = 1.778;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect16x9;\n      if (_bantObject.mediaAspect16x9.w < _bantObject.mediaAspect16x9.h){\n        _bantObject.mediaOrientation = \"portrait\";\n      } else {\n        _bantObject.mediaOrientation = \"landscape\";\n      }\n    }\n    else if(_bantObject.mediaAspect1x1 != undefined){\n      _bantObject.mediaAspectRatio = 1;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect1x1;\n      _bantObject.mediaOrientation = \"square\";\n    }\n    else if(_bantObject.mediaAspect2x1 != undefined){\n      _bantObject.mediaAspectRatio = 2;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect2x1;\n      if (_bantObject.mediaAspect2x1.w < _bantObject.mediaAspect2x1.h){\n        _bantObject.mediaOrientation = \"portrait\";\n      } else {\n        _bantObject.mediaOrientation = \"landscape\";\n      }\n    }\n    if(_bantObject.mediaAspectFeed != undefined){\n      _bantObject.mediaAspectFeed.x == undefined ? 0 : _bantObject.mediaAspectFeed.x;\n      _bantObject.mediaAspectFeed.y == undefined ? 0 : _bantObject.mediaAspectFeed.y;\n      _bantObject.mediaAspectFeed.w == undefined ? 0 : _bantObject.mediaAspectFeed.w;\n      _bantObject.mediaAspectFeed.h == undefined ? 0 : _bantObject.mediaAspectFeed.h;\n    }\n    if(_bantObject.mediaAspectFull != undefined){\n      _bantObject.mediaAspectFull.x == undefined ? 0 : _bantObject.mediaAspectFull.x;\n      _bantObject.mediaAspectFull.y == undefined ? 0 : _bantObject.mediaAspectFull.y;\n      _bantObject.mediaAspectFull.w == undefined ? 0 : _bantObject.mediaAspectFull.w;\n      _bantObject.mediaAspectFull.h == undefined ? 0 : _bantObject.mediaAspectFull.h;\n    }\n    return _bantObject;\n  }\n  \n  function extractEmbedObject(_bantObject, embedObject){\n//    Type      string        `json:\"type,omitempty\"`      // Type: \"link\", \"media\" or \"html\".\n//    Title     string        `json:\"title,omitempty\"`     // Title.\n//    Text      string        `json:\"text,omitempty\"`      // Text.\n//    Media     []Media       `json:\"media,omitempty\"`     // List of images or videos.\n//    Url       string        `json:\"url,omitempty\"`       // URL.\n//    Playable  bool          `json:\"playable,omitempty\"`  // Link contains playable content such as video.\n//    Html      string        `json:\"html,omitempty\"`      // HTML code to embed.\n//    Mini      bool          `json:\"mini,omitempty\"`      // Use mini display format.\n//    Author    EmbedAuthor   `json:\"author,omitempty\"`    // Author info.\n//    Provider  EmbedProvider `json:\"provider,omitempty\"`  // Provider info.\n//    CreatedAt string        `json:\"createdAt,omitempty\"` // Publication time in RFC3339 format.\n    _bantObject.embedType = embedObject.type;\n    _bantObject.embedTitle = embedObject.title;\n    _bantObject.embedText = embedObject.text;\n    _bantObject.embedMedia = {};\n    if(embedObject.type === 'media' || embedObject.type === 'link'){\n      // console.log(\"*****!!embedObject.media\",embedObject.media,embedObject);\n      if (embedObject.media){\n        _bantObject.embedMedia = extractMediaObject(_bantObject.embedMedia, embedObject.media[0]);\n      }\n    }\n    _bantObject.embedUrl = embedObject.url;\n    _bantObject.embedPlayable = embedObject.playable;\n    _bantObject.embedHtml = embedObject.html;\n    _bantObject.embedMetrics = embedObject.metrics;\n    _bantObject.embedMini = embedObject.mini;\n    _bantObject.embedAuthor = embedObject.author;\n    _bantObject.embedProvider = embedObject.provider;\n    _bantObject.embedCreatedAt = DateUtilityService.getTimeSince(embedObject.createdAt);\n    _bantObject.embedCreatedAtFull = embedObject.createdAt;\n    \n    \n    return _bantObject;\n\n  }\n\n  function Bant(data){\n    var _bantObject = {};\n    _bantObject.id = data.id;\n    _bantObject.author = data.author;\n    _bantObject.owner = data.owner;\n    if(data.content.sections != undefined){\n      _bantObject.sectionsLength = data.content.sections.length;\n\n      for(j=0;j<_bantObject.sectionsLength;j++){\n        _bantObject.type = data.content.sections[j].type;\n        if(_bantObject.type == \"html\")\n          _bantObject.html = data.content.sections[j].html;\n\n        if(_bantObject.type == \"media\"){\n          _bantObject.media = data.content.sections[j].media;\n          _bantObject = extractMediaObject(_bantObject, _bantObject.media[0]);\n        }\n        if(_bantObject.type == \"embed\" || _bantObject.type == \"tweet\"){\n          if (data.content.sections[j].embed !== null){\n            // console.log(\"!!!!!Fiding ID:\",data.content.sections[j]);\n            _bantObject = extractEmbedObject(_bantObject,data.content.sections[j].embed);\n            _bantObject.embed = data.content.sections[j].embed;\n          }\n        }\n        _bantObject.tweet = data.content.sections[j].tweet;\n        _bantObject.ogp = data.content.sections[j].ogp;\n        _bantObject.link = data.content.sections[j].link;\n      }\n    }\n    _bantObject.signal = data.signal;\n    if(_bantObject.signal == undefined){\n      var likeObject = {like:false};\n      _bantObject.signal = likeObject;\n    }\n    else if(_bantObject.signal.like == undefined)\n      _bantObject.signal.like = false;\n    _bantObject.metrics = data.metrics;\n    _bantObject.createdAtFull = data.createdAt;\n    _bantObject.createdAt = DateUtilityService.getTimeSince(data.createdAt);\n    _bantObject.pin = data.pin;\n    _bantObject.commentId = data.commentId;\n    _bantObject.topicId = data.topicId;\n    \n    return _bantObject;\n\n  }\n  \n  \n  \n  function updateBantLiked(data, liked){\n    //if same state, dont do anything\n    if(data.signal.like == liked){\n      if(NETWORK_DEBUG)\n        console.log(\"no need to change   data.signal.like:\"+ data.signal.like);\n      return data;\n    }\n    if(liked){\n      //update like status\n      data.signal.like = true;\n      //increment like count.\n      (data.metrics.likes == undefined) ? data.metrics.likes = 1: data.metrics.likes = (data.metrics.likes + 1);\n    }\n    else{\n      //update like status\n      data.signal.like = false;\n      //decrement like count.\n      if(data.metrics.likes != undefined) \n      data.metrics.likes = (data.metrics.likes - 1);\n    }\n    if(NETWORK_DEBUG)\n      console.log(\"data.metrics.likes :\"+ data.metrics.likes);\n    return data;\n  }\n\n  return {\n    bant: Bant,\n    updateBantLiked : updateBantLiked\n  };\n\n}]);","angular.module('NetworkModule')\n.factory('UserInfoService', [\"ForumStorage\",\"URIHelper\",\n\tfunction (ForumStorage, URIHelper) {\n\t//OLD Creds userId=1, sessionId=dac24379, accessToken=7uFF3QGh-84=\n\t//NEW Creds userId=193, sessionId=53d7b518, accessToken=dsKGKXyZgGs=\n\tvar _userInfo = {};\n\tvar userInfoTemp = {\n\t\t\t\"userId\":\"193\",\n\t\t\t\"accessToken\":\"dsKGKXyZgGs=\",\n\t\t\t\"sessionId\":\"53d7b518\"\n\t};\n\tvar _isUserLoggedIn = false;\n\tvar _userType = \"\";\n\n//\tvar userInfoTemp = {\n//\t\"userId\":\"204\",\n//\t\"accessToken\":\"_uO41ylA_xs=\",\n//\t\"sessionId\":\"b7427f4a\"\n//\t};\n\n\tfunction getUserCredentials(){\n\t\tif(_userInfo == undefined){\n\t\t\tconsole.log(\"UserInfoService : UserId is not defined , using static user, TODO : Remove this for release build\");\n\t\t\t_userInfo = userInfoTemp;\n\t\t\treturn userInfoTemp;\n\t\t}\n\n\t\treturn _userInfo;\n\t}\n\n\tfunction isCurrentUser(id){\n\t\t//console.log(\"Current user id  && id :\"+_userInfo.userId + \" :   \"+ id);\n\t\tif(id == _userInfo.userId)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tfunction setUserCredentials(userId, accessToken, sessionId, userType){\n\t\tconsole.log(\"setUserCredentials: \", userId, accessToken, sessionId, userType);\n\t\t// _userInfo = {};\n\t\t_userInfo.userId = userId;\n\t\t_userInfo.accessToken = accessToken;\n\t\t_userInfo.sessionId = sessionId;\n\t\t_isUserLoggedIn = true;\n\t\t_userInfo.userType = userType;\n\t\t// ForumStorage.clearStorage();\n\t\tForumStorage.setToLocalStorage(\"forumIsLoggedIn\",_isUserLoggedIn);\n\t\tForumStorage.setToLocalStorage(\"forumUserId\",userId);\n\t\tForumStorage.setToLocalStorage(\"forumAccessToken\",accessToken);\n\t\tForumStorage.setToLocalStorage(\"forumSessionId\",sessionId);\n\t\tForumStorage.setToLocalStorage(\"forumUserType\",userType);\n\n\t\t// console.log(\"this.userInfo.userId :\"+ _userInfo.userId);\n\t}\n\n\tfunction hasUserVisited() {\n\t\treturn ForumStorage.getFromLocalStorage(\"hasUserVisited\") ? true : false;\n\t}\n\n\treturn{\n\t\tgetUserCredentials:getUserCredentials,\n\t\tsetUserCredentials:setUserCredentials,\n\t\tisCurrentUser:isCurrentUser,\n\t\thasUserVisited: hasUserVisited,\n\t\tisUserLoggedIn:function(){\n\n\t\t\t//console.log(\"cached : is user logged in : \"+_isUserLoggedIn);\n\t\t\tif(_isUserLoggedIn)\n\t\t\t\treturn true;\n\t\t\telse{\n//\t\t\t\tvar islogged = ForumStorage.getFromLocalStorage(\"forumIsLoggedIn\");\n//\t\t\t\tconsole.log(\"storage : is user logged in : \"+islogged);\n\t\t\t\tif(ForumStorage.getFromLocalStorage(\"forumIsLoggedIn\"))\n\t\t\t\t{\n\t\t\t\t\t_userInfo = {};\n\t\t\t\t\t_userInfo.userId = ForumStorage.getFromLocalStorage(\"forumUserId\");\n\t\t\t\t\t_userInfo.accessToken = ForumStorage.getFromLocalStorage(\"forumAccessToken\");\n\t\t\t\t\t_userInfo.sessionId = ForumStorage.getFromLocalStorage(\"forumSessionId\");\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tisPeelUser:function(){\n\t\t\tURIHelper.isPeelUser();\n\t\t\tconsole.log(\"ForumStorage.getFromLocalStorage: \"+ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(_userInfo.userType === \"peel\")\n\t\t\t\treturn true;\n\t\t\tif(ForumStorage.getFromLocalStorage(\"forumUserType\") === \"peel\")\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t},\n\t\tisSmartStadiumUser:function(){\n\t\t\tvar ssUser = URIHelper.isSmartStadiumUser();\n\t\t\tconsole.log(\"ForumStorage.getFromLocalStorage: \", ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(ssUser){\n\t\t\t\t_userInfo.userType = 'email';\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(_userInfo.userType === \"email\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (ForumStorage.getFromLocalStorage(\"forumUserType\") === \"email\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tisMI16User:function(){\n\t\t\tvar MI16User = URIHelper.isTechMUser();\n\t\t\tconsole.log(\"ForumStorage.getFromLocalStorage: \", ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(MI16User){\n\t\t\t\t_userInfo.userType = 'MI16';\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(_userInfo.userType === \"MI16\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (ForumStorage.getFromLocalStorage(\"forumUserType\") === \"MI16\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetUserType:function(){\n\t\t\tconsole.log(\"UIS _userType - - - \", _userInfo.userType);\n\t\t\treturn _userInfo.userType;\n\t\t},\n\t\tisGuestUser:function(){\n\t\t\tconsole.log(\"UIS _userType - - - \", _userInfo.userType);\n\t\t\tif(_userInfo.userType === \"guest\" || ForumStorage.getFromLocalStorage(\"forumUserType\") === \"guest\")\n\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\n\t};\n\n}]);","angular.module('AuthModule')\n.factory(\"AuthService\", [\"$http\",\"$window\",\"$location\",\"UserInfoService\", \"TopicService\", \"ReplyService\", \"networkService\", \"ForumDeviceInfo\", \"ChannelService\", \"URIHelper\", \n  function ($http, $window, $location, UserInfoService, TopicService, ReplyService, networkService, ForumDeviceInfo, ChannelService, URIHelper) {\n\n  var userLoggedInToFacebook = false;\n\n  var loginAsGuest = function() {\n  console.log(\"Logging in as Guest\");\n    var userData = {};\n    userData.id = ForumDeviceInfo.getDeviceId();\n    userData.userName = \"GuestUser\";\n\n    var registerParams = setRegistrationParams(\"guest\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var loginToFacebook = function(callback) {\n    FB.login(function (response) {\n      if (response.status === 'connected') {\n        callback();\n        var registerParams = setRegistrationParams(\"facebook\", -25200, response.authResponse);\n        registerUser(registerParams);\n      }\n    });\n  };\n\n  var loginWithPeel = function() {\n    var userData = {};\n    userData.id = URIHelper.getPeelUserId();\n    userData.userName = URIHelper.getPeelUserName();\n\n    var registerParams = setRegistrationParams(\"peel\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var loginWithEmail = function() {\n    var userData = {\n      \"id\": URIHelper.getSSUserId(),\n      \"userName\": URIHelper.getSSUserName()\n    };\n\n    var registerParams = setRegistrationParams(\"email\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var techMLogin = function (name, email) {\n    var userData = {\n      \"id\": email,\n      \"userName\": name\n    };\n\n    console.log(\"techMLogin: \", userData);\n    var registerParams = setRegistrationParams(\"email\", -28800, userData);\n    registerUser(registerParams, true);\n  };\n\n  var setRegistrationParams = function (type, utcOffset, userData) {\n    var deviceId = ForumDeviceInfo.getDeviceId();\n    var registerParams = {\n      \"type\": type,\n      \"locale\": \"en_US\",\n      \"utcOffset\": utcOffset,\n      \"deviceType\": \"web\",\n      \"deviceId\": deviceId,\n      \"deviceModel\": \"browser\",\n      \"appKey\": \"testKey\",\n      \"appVersion\": \"1.0\"\n    };\n\n    if (type === 'facebook'){\n      registerParams.facebook = {\n        \"id\": userData.userID,\n        \"accessToken\": userData.accessToken\n      };\n    } else if (type === 'peel'){\n      registerParams.peel = {\n        \"id\": userData.id,\n        \"name\": userData.userName\n      }; \n    } else if (type === 'email'){\n      registerParams.email = {\n        \"id\": userData.id,\n        \"name\": userData.userName\n      }\n    }\n    return registerParams;\n  };\n\n  var registerUser = function(registerParams, isMI16) {\n    // Post request to our api to register/retrieve user\n    var userType = registerParams.type;\n    if (isMI16){\n      userType = 'MI16';\n    }\n    $http.post(REGISTER_SERVER_URI, JSON.stringify(registerParams))\n      .then(function (response) {\n        if (response.status === 200) {\n          console.log(\"Successfully Registered User of Type: \" + userType);\n          if (registerParams.type === 'facebook'){\n            userLoggedInToFacebook = true;\n          }\n\n          // Store user credentials in Local Storage\n          UserInfoService.setUserCredentials(\n            response.data.userId, \n            response.data.accessToken, \n            response.data.sessionId,\n            userType);\n        }\n      },\n      function (response) {\n        console.log('Registration Error: ', response);\n      }).then(function (response) {\n        initializeContent();\n      });\n  };\n\n  var initializeContent = function() {\n    console.log(\"Initializing Content\");\n    // Initialize Network Service and determine what type of resource is being accessed\n    networkService.init();\n\n    var initChannel = ChannelService.getChannel();\n    var initTopic = TopicService.getTopicId();\n\n    if (!!initChannel) {\n      console.log(\"found channel ID: \" + initChannel);\n      networkService.send(ChannelService.getLiveGameTopic(initChannel));\n    }\n    else if (!!initTopic) {\n      console.log(\"found Topic ID: \" + initTopic);\n      if (HTML5_LOC){\n        $location.path(\"/topic/\" + initTopic);\n      } else {\n        $window.location = \"#/topic/\" + initTopic;\n      }\n    }\n    else {\n      var initPost = ReplyService.getPostId();\n      if (!!initPost){\n        console.log(\"found post ID: \" + initPost);\n        if (HTML5_LOC){\n          $location.path(\"/post/\" + initPost);\n        } else {\n          $window.location = \"#/post/\" + initPost;\n        }\n      }\n    }\n  };\n\n  return {\n    loginAsGuest:loginAsGuest,\n    loginToFacebook: loginToFacebook,\n    loginWithPeel: loginWithPeel,\n    loginWithEmail: loginWithEmail,\n    techMLogin: techMLogin,\n    setRegistrationParams: setRegistrationParams,\n    registerUser: registerUser,\n    initializeContent: initializeContent,\n    userLoggedInToFacebook: userLoggedInToFacebook\n  };\n\n}]);\n","angular.module('NetworkModule')\n.service('StaticData', function () {\n\t//TODO: Static data used for Demo, remove this once the Development is complete\n\tvar postAuthors = [\n\t                   {\n\t                \t   \"photo\":\"ana.png\",\n\t                \t   \"name\":\"Ana\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"arod.png\",\n\t                \t   \"name\":\"A-Rod\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"cristiano.png\",\n\t                \t   \"name\":\"Cristiano\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"derek.png\",\n\t                \t   \"name\":\"Derek\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"dwayne.png\",\n\t                \t   \"name\":\"Dwayne\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"erin.png\",\n\t                \t   \"name\":\"Erin\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"jordan.png\",\n\t                \t   \"name\":\"Michael\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"lebron.png\",\n\t                \t   \"name\":\"Lebron\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"lionel.png\",\n\t                \t   \"name\":\"Lionel\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"maria.png\",\n\t                \t   \"name\":\"Maria\"\n\t                   }\n\t                   ];\n\n\tvar loremIpsum = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\";\n\tvar postTypes = [\"text\", \"text\", \"text\", \"photo\", \"video\"];\n\n\tfunction getPostsForTopicID()\n\t{\n\t\tvar staticPosts = [];\n\n\t\tvar fakePhotos = [\"fakePhoto1.jpg\", \"fakePhoto2.jpg\", \"fakePhoto3.jpg\", \"fakePhoto4.jpg\", \"fakePhoto5.jpg\", \"fakePhoto6.jpg\"];\n\t\tvar usedFakePhotos = 0;\n\n\t\tvar fakeVideos = [\"fakeVideo1.jpg\", \"fakeVideo2.jpg\", \"fakeVideo3.jpg\"];\n\t\tvar usedFakeVideos = 0;\n\n\t\tvar peelDemoData = [\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Will this be the year Kaep teaches Sherman a lesson or will Kaep get schooled again?\",\n\t\t                    \t\"postMedia\":\"fakePhoto1.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Remember Kyle Williams - for some reason, I am having recurring nightmares about him again - weird but true:(\",\n\t\t                    \t\"postMedia\":\"fakeVideo1.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Will Kaep be given a free reign to do whatever he wants? Please don't make him a pocket passer because HE IS NOT ONE\",\n\t\t                    \t\"postMedia\":\"fakePhoto2.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Running back of the 9ers this season truly scares the hell out of me - thoughts?\",\n\t\t                    \t\"postMedia\":\"fakeVideo2.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Will our defense save us again? We have seen that this offense needs lot of help:(\",\n\t\t                    \t\"postMedia\":\"fakeVideo3.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Can't wait for this game - gets me want to kick Seahawks every time we play them\",\n\t\t                    \t\"postMedia\":\"fakePhoto3.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Jimmy Graham is going to be such a formidable match-up for our secondary. Not sure if we have the personnel to cover him. Hate the fact that the saehawks offense just got whole lot better this year\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"From contenders to last in the league - reasons for our free fall down the ranks\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"One more drubbing - when are we going to be good again?\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"How do we always fuck up the second half? It is always the take of two halves with us this year. Sucks\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Are you fuckin kidding me - how did we miss that tackle? Why do we keep messing up defensively during 3rd and long? That is the 5th 3rd and long conversion for the Hawks.. Come on DDDDD\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Time to talk about the next season already? Sure nothing is going to change and we are going to suck again.. \",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"We miss Aldon Smith so much - we absolutely don't have an edge rusher.. what a jack-ass.. blew away so much second chances:(\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    }\n\t\t                    ]\n\n\t\tfor(var i = 0 ; i < peelDemoData.length ; i++)\n\t\t{\n\t\t\tvar peelPost = peelDemoData[i];\n\t\t\tvar fakePost = new Object();\n\t\t\tfakePost.postID = i;\n\t\t\tvar minimumCharacterCount = 20\n\t\t\tvar randomCharacterCount = minimumCharacterCount + Math.round(Math.random() * (loremIpsum.length - minimumCharacterCount));\n\t\t\t// console.log(\"random character count: \" + randomCharacterCount);\n\t\t\tvar loremIpsumSubstring = loremIpsum.substring(0, randomCharacterCount);\n\t\t\t// console.log(\"-> \" + loremIpsumSubstring);\n\t\t\tfakePost.postContent = peelPost.postContent;//loremIpsumSubstring\n\t\t\tvar postType = peelPost.type;//postTypes[Math.floor(Math.random() * postTypes.length)];\n\t\t\tfakePost.postType = postType;\n\t\t\tif(postType == \"photo\")\n\t\t\t{\n\t\t\t\tvar fakePhoto = fakePhotos[usedFakePhotos % fakePhotos.length];\n\t\t\t\tfakePost.photo = fakePhoto;\n\t\t\t\t// peelPost.photo = peelPost.postMedia\n\t\t\t\tusedFakePhotos++;\n\t\t\t}\n\t\t\telse if(postType == \"video\")\n\t\t\t{\n\t\t\t\tvar fakeVideo = fakeVideos[usedFakeVideos % fakeVideos.length];\n\t\t\t\tfakePost.video = fakeVideo;\n\t\t\t\t// peelPost.video = peelPost.postMedia\n\t\t\t\tusedFakeVideos++;\n\t\t\t}\n\n\t\t\tvar author = postAuthors[i % postAuthors.length];\n\t\t\tfakePost.postAuthorPhoto = author.photo;\n\t\t\tpeelPost.postAuthorPhoto = author.photo;\n\t\t\tfakePost.postAuthorName = author.name;\n\t\t\tpeelPost.postAuthorName = author.name;\n\n\t\t\tfakePost.likeCount = Math.floor(Math.random() * 100);\n\t\t\tpeelPost.likeCount = Math.floor(Math.random() * 100);\n\t\t\tfakePost.commentCount = Math.floor(Math.random() * 500);\n\t\t\tpeelPost.commentCount = Math.floor(Math.random() * 500);\n\n\t\t\t// console.log(\"fake post \" + i + \" :  \" + JSON.stringify(fakePost));\n\t\t\t// console.log(\"fake post \" + i + \" :  \" + JSON.stringify(peelPost));\n\n\t\t\t// staticPosts.push(fakePost);\n\t\t\tstaticPosts.push(peelPost);\n\t\t}\n\t\treturn staticPosts\n\t}\n\n\tfunction getRepliesForPostID()\n\t{\n\t\t/*\n\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"0\",\n\t\t\t\t\t\t\"replyContent\":\"reply A\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"1\",\n\t\t\t\t\t\t\"replyContent\":\"reply B\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"2\",\n\t\t\t\t\t\t\"replyContent\":\"reply C\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"3\",\n\t\t\t\t\t\t\"replyContent\":\"reply D\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"4\",\n\t\t\t\t\t\t\"replyContent\":\"reply E\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t */\n\n\t\tvar fakeReplies = [];\n\t\tfor(var i = 0 ; i < 10 ; i++)\n\t\t{\n\t\t\tvar fakeReply = new Object();\n\t\t\tfakeReply.postID = i;\n\t\t\tvar minimumCharacterCount = 20\n\t\t\tvar randomCharacterCount = minimumCharacterCount + Math.round(Math.random() * (loremIpsum.length - minimumCharacterCount));\n\t\t\t// console.log(\"random character count: \" + randomCharacterCount);\n\t\t\tvar loremIpsumSubstring = loremIpsum.substring(0, randomCharacterCount);\n\t\t\t// console.log(\"-> \" + loremIpsumSubstring);\n\t\t\tfakeReply.replyContent = loremIpsumSubstring\n\t\t\tfakeReply.replyType = \"text\";\n\n\t\t\tvar author = postAuthors[i % postAuthors.length];\n\t\t\tfakeReply.postAuthorPhoto = author.photo;\n\t\t\tfakeReply.postAuthorName = author.name;\n\n\t\t\tfakeReply.likeCount = Math.floor(Math.random() * 100);\n\t\t\tfakeReply.commentCount = Math.floor(Math.random() * 500);\n\n\t\t\t// staticPosts.push(fakePost);\n\t\t\tfakeReplies.push(fakeReply);\n\t\t}\n\n\t\treturn fakeReplies\n\t}\n\t\n\treturn{\n\tgetPostsForTopicID:getPostsForTopicID,\n\tgetRepliesForPostID:getRepliesForPostID\n\t}\n});","angular.module('NetworkModule')\n.factory('FDSUtility', function () {\n\t\n\tfunction getStructureById(array, id){\n\t\tif(NETWORK_DEBUG) console.log(\"structureLengths :\"+ array.length);\n\t\tfor(i=0;i<array.length;i++){\n\t\t\tif(array[i].id == id){\n\t\t\t\treturn array[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getIndexById(array, id){\n\t\tif(NETWORK_DEBUG) console.log(\"structureLengths :\"+ array.length);\n\t\tfor(i=0;i<array.length;i++){\n\t\t\tif(array[i].id == id){\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t\n\tfunction isLikedById(array, id){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.like :\"+ tempStructure.signal.like);\n\t\t\tif(tempStructure.signal.like == true){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction isFlaggedById(array, id){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.flag :\"+ tempStructure.signal.flag);\n\t\t\tif(tempStructure.signal.flag == true){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t}\n\t\treturn false;\n\t}\n\n\t\n\tfunction flagById(array, id, flag){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.flag :\"+ tempStructure.signal.flag);\n\t\t\ttempStructure.signal.flag = flag;\n\t\t\t}\n\t}\n\t\n\t\n\tfunction deleteById(array, id){\n\t\tvar index = getIndexById(array,id);\n\t\t\n\t\tif(index != -1){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element at:\"+index );\n\t\t\tarray.splice(index,1);\n\t\t\t}\n\t\treturn array;\n\t}\n\n\treturn {\n\t\tisLikedById:isLikedById,\n\t\tisFlaggedById:isFlaggedById,\n\t\tflagById:flagById,\n\t\tdeleteById:deleteById\n\t\t\n\t\t\n\t};\n\n});","angular.module('MediaModule', ['angularFileUpload', 'NetworkModule', 'TopicModule'])\n.factory('MUService',  function () {\n\tvar POST_COMMENT_URI=\"/v1.0/comment/create\";\n\tvar POST_REPLY_URI=\"/v1.0/reply/create\";\n\tvar isComment = true;\n\tvar commentText = \"\";\n\tvar topicId = \"\";\n\tvar commentId = \"\";\n\tvar replyId = \"\";\n\n\tfunction commentPostRequest(){\n\t\tvar createCommentParams = {\"rid\": \"comment\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(POST_COMMENT_URI)};\n\t\tcreateCommentParams.data =\n\t\t{\n\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\"topicId\": topicId,\n\t\t};\n\t\tif(!isComment){\n\t\t\tcreateCommentParams = {\"rid\": \"reply\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(POST_REPLY_URI)};\n\t\t\tcreateCommentParams.data =\n\t\t\t{\n\t\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\t\"topicId\": topicId,\n\t\t\t};\n\t\t\tcreateCommentParams.data.target = {\n\t\t\t\t\t\"type\": \"comment\", // Target type: “comment” or “reply”.\n\t\t\t\t\t\"id\": commentId,  // Target bant ID of comment or reply.\n\t\t\t};\n\n\t\t\tcreateCommentParams.data.commentId = commentId;\n\t\t}\n\t\treturn createCommentParams;\n\t}\n\n\tfunction setCommentParams(tId,text,isCom,comId,repId){\n\t\tif (text === undefined){\n\t\t\ttext = \"\";\n\t\t}\n\t\tconsole.log(\"Setting Comment Params: \", tId, text, isCom, comId, repId);\n\t\ttopicId = tId;\n\t\tcommentText = text;\n\t\tisComment = isCom;\n\t\t\n\t\tcommentId = comId;\n\t\treplyId = repId;\n\t}\n\n\tfunction postMediaRequest(mediaData){\n\t\tvar m = {\"media\":[mediaData]};\n\t\tvar sections = [];\n\t\tif(commentText !== undefined){\n\t\t\tsections.push({\"type\": \"html\",\"html\":commentText});\n\t\t}\n\t\tsections.push({\"type\": \"media\", \"media\" : m.media});\n\n\t\tvar createCommentParams = commentPostRequest();\n\t\t\n\t\tvar content =  {\"sections\": sections};\n\t\tcreateCommentParams.data.content = content;\n\t\tconsole.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n\t\treturn createCommentParams;\n\t}\n\treturn {\n\t\tpostMediaRequest:postMediaRequest,\n\t\tsetCommentParams:setCommentParams,\n\t\tresetCommentParams:function(){\n\t\t\ttopicId = \"\";\n\t\t\tcommentId = \"\";\n\t\t\tcommentText = \"\";\n\t\t}\n\t}\n});\n"],"sourceRoot":"/source/"}