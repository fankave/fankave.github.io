{"version":3,"sources":["PostController.js","SocialController.js","SmartStadiumController.js","SocialDirectives.js","ReplyService.js","SocialService.js","VideoService.js"],"names":["angular","module","controller","$scope","$sce","$timeout","$window","$location","$sanitize","$routeParams","networkService","ReplyService","TopicService","CommentService","UserInfoService","URIHelper","SplashService","MUService","FileUploader","ForumStorage","UserAgentService","updateScore","leftTeam","getTeamA","rightTeam","getTeamB","score","getScore","undefined","leftTeamScore","points","rightTeamScore","gameStatus","getGameStatus","topicTitle","getTitle","gamePeriod","getGamePeriod","gameClock","getGameClock","console","log","updateCommentInReply","selectedComment","postID","getPostId","getCommentById","NETWORK_DEBUG","tempComment","postAuthorName","author","name","postAuthorPhoto","photo","postTimestamp","createdAt","likeCount","metrics","likes","replyCount","replies","mediaAspectFeed","isLiked","signal","like","topicId","isMyComment","isCurrentUser","id","type","mediaUrl","mediaAspectFull","mediaAspectRatio","mediaOrientation","mediaThumbUrl","shared","embed","embedCreatedAt","embedCreatedAtFull","embedType","embedMedia","providerName","embedLogo","provider","logo","playable","embedHtml","comment","updateReplies","repliesData","len","length","i","tempReply","isMyReply","trustAsHtml","push","directComment","triggerRepliesKeyboard","justReplied","setTimeout","window","scrollTo","document","body","scrollHeight","isMobileUser","mobileBrowser","mobileUserAgent","getMobileUserAgent","getFromLocalStorage","initPage","pageClass","getTopicId","setPostId","backToTopicButtonTapped","HTML5_LOC","path","location","setPeelUI","userType","$","css","isPeelUser","hidePeelSplash","isSmartStadiumUser","isMI16User","requestReplies","send","getRepliesRequest","getCommentByIdRequest","peelClose","peelWatchOnTV","ga","showId","getPeelShowId","showNewRepliesIndicator","newRepliesIndicatorTapped","getElementById","focus","initReplyPage","paddingTop","height","style","paddingBottom","$watch","newValue","oldValue","replyDivs","getElementsByClassName","div","thisReply","thisDiv","onclick","e","target","is","this","setToLocalStorage","each","magnificPopup","isUserLoggedIn","isSocketConnected","init","updateLikeComment","isCommentLiked","getUnlikeCommentRequest","getLikeCommentRequest","updateLikeReply","isReplyLiked","unlikeReplyRequest","likeReplyRequest","deleteReply","deleteReplyRequest","reportReplyAsSpam","flagReplyRequest","deleteComment","deleteCommentRequest","reload","reportCommentAsSpam","flagCommentRequest","imageClick","imageURL","event","cancelBubble","stopPropagation","open","items","src","callbacks","bind","preventDefault","close","unbind","notifyNewReplies","registerObserverCallback","trustSrc","trustAsResourceUrl","addEventListener","xLinkActivated","$http","SocialService","VideoService","ChannelService","DateUtilityService","updateFeed","tab","feedData","existingLength","tabArray","socialArray","_this","videoArray","tempItem","itemExists","j","embedAuthor","postAuthorAlias","alias","tweetId","tweet","embedProvider","html","embedText","retweetCount","providerLogo","embedUrl","embedPlayable","mediaType","updateTimestamps","getTimeSince","createdAtFull","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","scrollAfterLoad","pos","scrollTop","initFeed","$parent","loadingSocial","switchTabs","resetSocialOffset","loadContent","resetVideoOffset","offset","channelID","getChannel","getChannelId","getSocialDataRequest","getVideoDataRequest","clientHeight","documentElement","innerHeight","watchContentScroll","currentScroll","activeTab","on","retweetPost","method","url","headers","Access-Control-Allow-Origin","shareTweetToChat","embedShareContent","showShareDialog","fullClient","top","submitSharedPost","commentData","embedData","topicID","postCommentRequestForShare","shareToFacebook","FB","ui","href","response","exitShare","highlightPost","unhighlightPost","viewScreen","ssActiveScreen","viewHighlights","viewRoster","viewStats","viewProfileStats","exitView","directive","restrict","scope","thisPost","trustSource","shareSubmit","highlight","unhighlight","templateUrl","factory","Bant","FDSUtility","setReplies","replyData","_replies","tempReplyData","data","results","_replyObject","bant","_topicIdFromReply","notifyObservers","appendToReplies","postReplyData","tempPostedReply","commentId","_currentCommentId","updateReply","replyObj","updateLocalData","newData","updateLikeReplyWithId","liked","tempObject","getReplyById","updateBantLiked","removeReply","splice","getCommentIdByReply","replyGetRequest","uri","varReplyParams","rid","timestamp","Date","getTime","encodeURI","replyPostRequest","varPostParams","LIST_REPLIES_URI","getPostReplyRequest","replyId","isReplyToReply","targetType","targetId","createReplyParams","POST_REPLY_URI","lang","content","sections","LIKE_REPLY_URI","UNLIKE_REPLY_URI","FLAG_REPLY_URI","DELETE_REPLY_URI","callback","callbackLength","observerCallbacks","pop","isLikedById","updateReplyLocalData","deleteById","flagById","UNFLAG_REPLY_URI","HIDE_REPLY_URI","hideById","UNHIDE_REPLY_URI","_postID","forEach","getTopicIdFromReply","postId","setSocialData","socialData","_socialArray","tempData","_socialObject","_offset","nextOffset","reqOffset","request","LIST_SOCIAL_URI","LIMIT","setVideoData","videoData","_videoArray","_videoObject"],"mappings":"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","file":"app-post.min.js","sourcesContent":["angular.module(\"PostModule\", [\"NetworkModule\", \"SplashModule\", \"MediaModule\", \"angularFileUpload\"])\n.controller(\"PostController\", [\"$scope\", \"$sce\", \"$timeout\", \"$window\", \"$location\",\"$sanitize\", \"$routeParams\", \"networkService\",\"ReplyService\", \"TopicService\",\"CommentService\", \"UserInfoService\",\"URIHelper\", \"SplashService\", \"MUService\", \"FileUploader\", \"ForumStorage\", \"UserAgentService\",\n\nfunction ($scope, $sce, $timeout, $window, $location, $sanitize, $routeParams, networkService, ReplyService, TopicService, CommentService, UserInfoService,URIHelper,SplashService,MUService,FileUploader,ForumStorage,UserAgentService)\n{\n\n  // Check For Mobile Browser\n  if (UserAgentService.isMobileUser()){\n    $scope.mobileBrowser = true;\n    $scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n    console.log(\"MOBILE USER AGENT: \", $scope.mobileUserAgent);\n  } else {\n    $scope.mobileBrowser = false;\n  }\n\n  // Retain & Handle State when Returning From External Links\n  if (ForumStorage.getFromLocalStorage('hasUserVisited') === true){\n    console.log(\"Checking For Existing Session\");\n    $scope.initPage();\n  }\n  var headerHeight;\n\n\t//ga('send', 'pageview', \"/comment/\"+$routeParams.postID);\n\t$scope.pageClass = 'page-post';\n\n\t$scope.postID = $routeParams.postID;\n\t$scope.topicId = TopicService.getTopicId();\n\t//$scope.replies = networkService.getRepliesForPostID();\n\t$scope.justReplied = false;\n\t\n\tReplyService.setPostId($routeParams.postID);\n\n\t$scope.backToTopicButtonTapped = function()\n\t{\n\t\tvar topicId = TopicService.getTopicId();\n\t\tif(topicId == undefined)\n\t\t\ttopicId = $scope.comment.topicId;\n    if (HTML5_LOC){\n\t\t  $location.path(\"/topic/\"+topicId);\n    } else {\n      $window.location = \"#/topic/\" + topicId;\n    }\n\t}\n\n\t$scope.setPeelUI = function(userType){\n\t\tconsole.log(\"Post User Type: \", userType);\n\t\tif (userType === 'peel') {\n\t\t\t$('#postSection').css('padding-top','54px');\n\t\t} else if (userType === 'email') {\n      $('#postSection').css('padding-top','54px');\n    } else if (userType === 'MI16') {\n      // $('#postSection').css('padding-top','54px');\n\t\t} else {\n      $('#postSection').css('padding-top','0px');\n    }\n\t}\n\n  if (UserInfoService.isPeelUser()){\n    $scope.isPeelUser = true;\n    SplashService.hidePeelSplash = true;\n    $scope.setPeelUI('peel');\n  }\n  else if (UserInfoService.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    $scope.setPeelUI('email');\n  }\n  else if (UserInfoService.isMI16User()){\n    $scope.isMI16User = true;\n  }\n\n\t$scope.requestReplies = function(){\n\t\t// console.log(\"PostController requestReplies Invoked\");\n\t\tnetworkService.send(ReplyService.getRepliesRequest($scope.postID));\n\t\tvar selectedComment = CommentService.getCommentById($scope.postID);\n\t\tif(selectedComment != undefined){\n\t\t\tupdateCommentInReply(selectedComment);\n\t\t}\n\t\telse{\n\t\t\tconsole.log(\"No data from comment service : TODO handle this with cookies\");\n\t\t\tnetworkService.send(CommentService.getCommentByIdRequest($scope.postID));\n\t\t}\n\t}\n\n\t$scope.peelClose = function()\n\t{\n\t\tconsole.log(\"peelClose()\");\n\t}\n\n\t$scope.peelWatchOnTV = function()\n\t{\n\t\tga('send', 'event', 'Peel', 'click', 'PeelWatchOnTV');\n\t\tconsole.log(\"peelWatchOnTV()\");\n\t\tvar showId = URIHelper.getPeelShowId();\n\t\tif(showId != undefined)\n\t\t\twindow.location = \"peel://tunein/\"+showId;\n\t\telse\n\t\t\twindow.location = \"peel://home\";\n\t}\n\n\t$scope.showNewRepliesIndicator = false;\n\t$scope.newRepliesIndicatorTapped = function()\n\t{\n\t\tconsole.log(\"newRepliesIndicatorTapped\");\n\t\t$scope.showNewRepliesIndicator = false;\n\t\tupdateReplies();\n\t\twindow.scrollTo(0,document.body.scrollHeight);\n\t}\n\n\t$scope.triggerRepliesKeyboard = function()\n\t{\n\t\tdocument.getElementById(\"postCommentField\").focus();\n\t}\n\t\n\t$scope.initReplyPage = function(){\n\t\t$scope.pageClass = 'page-post';\n\t\t$scope.paddingTop = \"20\";\n\t\t// $scope.pageStyle = {'padding-top': '10em'};\n\n\t\t$scope.requestReplies();\n    // $scope.loadingReply = true;\n\t\tvar replyPostHeader = $(\"#replyPost\").height();\n\t\t// console.log(\"height of repy header: \" + replyPostHeader);\n\t\tvar heightString = replyPostHeader + \"px\";\n\t\t// document.getElementById('postHeader').style.height = '3.5em';//heightString;\n\t\t// document.getElementById('postSection').style.paddingTop = '3.5em';\n\t  if ($scope.mobileBrowser === true){\n      document.getElementById('postSection').style.paddingBottom = \"42px\";\n    }\n\n\t\t$scope.$watch(\"replies\", function (newValue, oldValue)\n\t\t {\n  \t\t\t$timeout(function()\n  \t\t\t{\n  \t\t\t\t// setLinks();\n          var replyDivs = document.getElementsByClassName(\"postRow\");\n          for (div in replyDivs){\n            if (newValue != undefined){\n              var thisReply = newValue[div];\n              if (thisReply != undefined){\n                var thisDiv = replyDivs[div];\n                thisDiv.onclick = function(e) {\n                  if ($(e.target).is('a')){\n                    console.log(\"EXTERNAL LINK: \", e, this.id);\n                    ForumStorage.setToLocalStorage('replyBookmark', this.id);\n                    return;\n                  }\n                }\n              }\n            }\n          }\n    \t\t\t$('.commentsContainer').each(function()\n    \t\t\t{\n      \t\t\t\t$('.image-link').magnificPopup({\n        \t\t\t\ttype:'image'\n     \t\t\t\t});\n    \t\t\t});\n  \t\t\t});\n\t\t});\n\t}\n\n\tif(UserInfoService.isUserLoggedIn()){\n\t\tif(!networkService.isSocketConnected())\n\t\t\tnetworkService.init();\n\t\t$scope.initReplyPage();\n\t}\n\telse {\n\t\tif (HTML5_LOC){\n      $location.path(\"/login\");\n    } else {\n      $window.location = \"#/login\";\n    }\n\t}\n\n\t$scope.updateLikeComment = function(id) {\n\t\t// console.log(\"PostController updateLikeComment(\" + id + \")\");\n\t\tif(CommentService.isCommentLiked(id)){\n\t\t\tnetworkService.send(CommentService.getUnlikeCommentRequest(id));\n\t\t}\n\t\telse{\n\t\t\tnetworkService.send(CommentService.getLikeCommentRequest(id));\t\n\t\t}\n\t};\n\n\t$scope.updateLikeReply = function(id) {\n\t\t// console.log(\"PostController Like Reply\");\n\t\tif(ReplyService.isReplyLiked(id)){\n\t\t\tnetworkService.send(ReplyService.unlikeReplyRequest(id));\n\t\t}\n\t\telse{\n\t\t\tnetworkService.send(ReplyService.likeReplyRequest(id));\n\t\t}\n\t};\n\n\t$scope.deleteReply = function(id)\n\t{\n\t\tconsole.log(\"deleteReply(\" + id + \")\");\n\t\tnetworkService.send(ReplyService.deleteReplyRequest(id));\n\t}\n\n\t$scope.reportReplyAsSpam = function(id)\n\t{\n\t\tconsole.log(\"reportReplyAsSpam(\" + id + \")\");\n\t\tnetworkService.send(ReplyService.flagReplyRequest(id));\n\t}\n\n  $scope.deleteComment = function(id)\n  {\n    console.log(\"deleteComment(\" + id + \")\");\n    // $scope.innerButtonTapped = true;\n    networkService.send(CommentService.deleteCommentRequest(id));\n    if (HTML5_LOC){\n      $location.path(\"/topic/\" + $scope.topicId);\n    } else {\n      $window.location = \"#/topic/\" + $scope.topicId;\n    }\n    $window.location.reload();\n  }\n\n  $scope.reportCommentAsSpam = function(id)\n  {\n    console.log(\"reportCommentAsSpam(\" + id + \")\");\n    // $scope.innerButtonTapped = true;\n    networkService.send(CommentService.flagCommentRequest(id)); \n  }\n\n\t$scope.imageClick = function(imageURL)\n\t{\n\t\tevent.cancelBubble = true;\n\t   if(event.stopPropagation) event.stopPropagation();\n\n\t\t$.magnificPopup.open({\n                    items: {\n                    \ttype:'image',\n                    \tsrc: imageURL,\n                },\n                type: 'inline',\n                callbacks:\n                {\n\t\t\t\t    open: function()\n\t\t\t\t    {\n\t\t\t\t      console.log(\"popup opened\");\n\t\t\t\t      $('body').bind('touchmove', function(e){e.preventDefault()})\n\t\t\t\t    },\n\t\t\t\t    close: function()\n\t\t\t\t    {\n\t\t\t\t      console.log(\"popup closed\");\n\t\t\t\t      $('body').unbind('touchmove')\n\t\t\t\t    }\n\t\t\t\t    // e.t.c.\n\t\t\t\t}\n            });\n\t}\n\n\tfunction updateScore(){\n\t\t//Score update here\n\t\t$scope.leftTeam = TopicService.getTeamA();\n\t\t$scope.rightTeam = TopicService.getTeamB();\n\t\tvar score = TopicService.getScore();\n\t\tif(score != undefined){\n\t\t\t$scope.leftTeamScore = score.points[0];\n\t\t\t$scope.rightTeamScore = score.points[1];\n\t\t}\n\t\t$scope.gameStatus = TopicService.getGameStatus();\n\t\t$scope.topicTitle = TopicService.getTitle();\n\t\tif($scope.gameStatus == \"live\") {\n\t\t\t$scope.gamePeriod = TopicService.getGamePeriod();\n\t\t\t$scope.gameClock = TopicService.getGameClock();\n\t\t}\n\t\tconsole.log(\"Scores updated in replies\");\n\t}\n\n\t function updateCommentInReply(selectedComment){\n\t\tconsole.log(\"Already Had PostID: \", $scope.postID);\n    if (!$scope.postID){\n      $scope.postID = ReplyService.getPostId();\n      console.log(\"Regenerated PostID: \", $scope.postID);\n    }\n    if(selectedComment == undefined){\n\t\t\tselectedComment = CommentService.getCommentById($scope.postID);\n\t\t}\n\t\tif(selectedComment != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"Updated comment in reply triggered\" ); \n\t\t\tvar tempComment = {};\n\t\t\ttempComment = selectedComment;\n\t\t\ttempComment.postAuthorName = selectedComment.author.name;\n\t\t\ttempComment.postAuthorPhoto = selectedComment.author.photo;\n\n\t\t\ttempComment.postTimestamp = selectedComment.createdAt;\n\t\t\ttempComment.likeCount = selectedComment.metrics.likes;\n\t\t\ttempComment.replyCount = selectedComment.metrics.replies;\n\t\t\ttempComment.mediaAspectFeed = selectedComment.mediaAspectFeed;\n\t\t\ttempComment.isLiked = selectedComment.signal.like;\n\t\t\ttempComment.topicId = selectedComment.topicId;\n      tempComment.isMyComment = UserInfoService.isCurrentUser(selectedComment.author.id);\n\n      if (tempComment.type === 'media'){\n          tempComment.mediaUrl = selectedComment.mediaUrl;\n          // tempComment.trustedMediaUrl = $scope.trustSrc(tempComment.mediaUrl);\n          tempComment.mediaAspectFeed = selectedComment.mediaAspectFeed;\n          tempComment.mediaAspectFull = selectedComment.mediaAspectFull;\n          tempComment.mediaAspectRatio = selectedComment.mediaAspectRatio;\n          tempComment.mediaOrientation = selectedComment.mediaOrientation;\n          tempComment.mediaThumbUrl = selectedComment.mediaThumbUrl;\n        }\n\n      if (tempComment.type === 'embed'){\n        tempComment.shared = true;\n        tempComment.embed = selectedComment.embed;\n        tempComment.embed.embedCreatedAt = selectedComment.embedCreatedAt;\n        tempComment.embed.embedCreatedAtFull = selectedComment.embedCreatedAtFull;\n\n        if (tempComment.embedType === 'media'){\n          tempComment.mediaUrl = selectedComment.embedMedia.mediaUrl;\n          tempComment.mediaThumbUrl = selectedComment.embedMedia.mediaThumbUrl;\n          tempComment.mediaAspectFeed = selectedComment.embedMedia.mediaAspectFeed;\n          tempComment.mediaAspectFull = selectedComment.embedMedia.mediaAspectFull;\n          tempComment.mediaAspectRatio = selectedComment.embedMedia.mediaAspectRatio;\n          tempComment.mediaOrientation = selectedComment.embedMedia.mediaOrientation;\n        }\n\n        if (tempComment.providerName === \"Twitter\"){\n          tempComment.embed.embedLogo = \"img/twitterLogo@2x.png\";\n        } else {\n          tempComment.embed.embedLogo = selectedComment.embed.provider.logo;\n        }\n\n        if (selectedComment.embed.type === 'link' && selectedComment.embed.playable === true){\n          tempComment.embedHtml = selectedComment.embedHtml;\n        }\n      }\n\n\t\t\t$scope.comment = tempComment;\n\t\t}\n\t}\n\n  // $scope.hideLoading = function(){\n  //   console.log(\"HIDING LOAD\");\n  //   $scope.loadingReply = false;\n  // };\n\n\tfunction updateReplies(){\n\t\t//TODO: check with ahmed, these values could be individual scope var.\n\t\tvar repliesData = ReplyService.replies();\n\t\tvar len = repliesData.length;\n\n\t\t$scope.replies = [];\n\n\t\tfor(i=0;i<len;i++){\n\t\t\tvar tempReply = {};\n\t\t\ttempReply = repliesData[i];\n\t\t\ttempReply.postAuthorName = repliesData[i].author.name;\n\t\t\ttempReply.postAuthorPhoto = repliesData[i].author.photo;\n\t\t\ttempReply.isMyReply = UserInfoService.isCurrentUser(repliesData[i].author.id);\n\n\t\t\ttempReply.postTimestamp = repliesData[i].createdAt;\n\t\t\ttempReply.likeCount = repliesData[i].metrics.likes;\n\t\t\ttempReply.replyCount = repliesData[i].metrics.replies;\n\t\t\ttempReply.mediaAspectFeed = repliesData[i].mediaAspectFeed;\n\t\t\ttempReply.isLiked = repliesData[i].signal.like;\n\t\t\t\n      if (tempReply.type === 'media'){\n          tempReply.mediaUrl = repliesData[i].mediaUrl;\n          // tempReply.trustedMediaUrl = $scope.trustSrc(tempReply.mediaUrl);\n          tempReply.mediaAspectFeed = repliesData[i].mediaAspectFeed;\n          tempReply.mediaAspectFull = repliesData[i].mediaAspectFull;\n          tempReply.mediaAspectRatio = repliesData[i].mediaAspectRatio;\n          tempReply.mediaOrientation = repliesData[i].mediaOrientation;\n          tempReply.mediaThumbUrl = repliesData[i].mediaThumbUrl;\n        }\n      if (tempReply.type === 'embed'){\n        tempReply.shared = true;\n        tempReply.embed = repliesData[i].embed;\n        tempReply.embed.embedCreatedAt = repliesData[i].embedCreatedAt;\n        tempReply.embed.embedCreatedAtFull = repliesData[i].embedCreatedAtFull;\n\n        if (tempReply.providerName === \"Twitter\"){\n          tempReply.embed.embedLogo = \"img/twitterLogo@2x.png\";\n        } else {\n          tempReply.embed.embedLogo = repliesData[i].embed.provider.logo;\n        }\n\n        if (repliesData[i].embed.type === 'link' && repliesData[i].embed.playable === true){\n          tempReply.embed.embedHtml = $sce.trustAsHtml(repliesData[i].embedHtml);\n        }\n      }\n\n      $scope.replies.push(tempReply);\n\n\t\t\t// console.log(i +\" : updated replies html : \" +$scope.replies[i].html);\n\t\t\t// console.log(i +\" : updated replies author name: \" +$scope.replies[i].postAuthorName);\n\t\t\t// console.log(i +\" : updated replies author photo: \" +$scope.replies[i].postAuthorPhoto);\n\n\t\t\tif($scope.replies[i].type == \"media\"){\n\t\t\t\t// console.log(i +\" : updated replies media : \" +$scope.replies[i].mediaUrl);\n\t\t\t\t// console.log(i +\" : updated replies media : \" +$scope.replies[i].mediaAspectFeed);\n\t\t\t}\n\t\t\t//console.log(i +\" : updated replies likecount : \" +$scope.replies[i].likeCount);\n\n\t\t}\n\t\tif(TopicService.directComment === true)\n\t\t{\n\t\t\t$scope.triggerRepliesKeyboard();\n\t\t\tTopicService.directComment = false;\n\t\t}\n\n\t\tif($scope.justReplied == true)\n\t\t{\n\t\t\tsetTimeout(function()\n\t\t\t\t{ \n\t\t\t\t\tconsole.log(\"Scroll to last reply\");\n\t\t\t\t\twindow.scrollTo(0,document.body.scrollHeight);\n\t\t\t\t\t$scope.justReplied = false;\n\t\t\t\t}, 1000);\n\t\t}\n\t}\n\t \n\t var notifyNewReplies = function(){\n\n\t\t if($scope.replies == undefined)\n\t\t {\n\t\t\t updateReplies();\n\t\t }\n\t\t else {\n\t\t\t var repliesData = ReplyService.replies();\n\t\t\t var len = repliesData.length;\n\t\t\t if($scope.replies.length < len ){\n\t\t\t\t //console.log(\"newReplies triggered\");\n\t\t\t\t if(!UserInfoService.isCurrentUser(repliesData[len-1].author.id)){\n\t\t\t\t\t $scope.showNewRepliesIndicator = true;\n\t\t\t\t }\n\t\t\t\t else{\n\t\t\t\t\t updateReplies();\n\t\t\t\t }\n\t\t\t }\n\t\t\t else{\n\t\t\t\t updateReplies();\n\t\t\t }\n\n\t\t }\n\t }\n\t \n\tReplyService.registerObserverCallback(notifyNewReplies);\n\tTopicService.registerObserverCallback(updateScore);\n\tCommentService.registerObserverCallback(updateCommentInReply);\n\n\t$scope.trustSrc = function(src)\n\t{\n    \treturn $sce.trustAsResourceUrl(src);\n  \t}\n\n  $window.addEventListener(\"beforeunload\", function(){\n    console.log(\"Before Unload\");\n    ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n  });\n\n  $scope.xLinkActivated = false;\n\n\n}]);\n\n","angular.module(\"SocialModule\", [\"NetworkModule\",\"ChannelModule\",\"TopicModule\"])\n.controller(\"SocialController\", [\"$scope\",\"$sce\",\"$window\",\"$routeParams\",\"$http\",\"SocialService\",\"VideoService\",\"networkService\",\"ChannelService\",\"TopicService\",\"DateUtilityService\",\"CommentService\",\n  function ($scope,$sce,$window,$routeParams,$http,SocialService,VideoService,networkService,ChannelService,TopicService,DateUtilityService,CommentService){\n    console.log(\"Social Control\");\n\n    var _this = this;\n    this.initFeed = function(tab) {\n      // Show Loading UI Once On Each Tab\n      if (tab === 'social'){\n        if (!_this.socialArray){\n          $scope.$parent.loadingSocial = true;\n        }\n        if (!!_this.socialArray){\n          updateTimestamps('social');\n        }\n        $scope.$parent.switchTabs('social');\n        SocialService.resetSocialOffset();\n        _this.loadContent('social');\n      } else {\n        if (!_this.videoArray){\n          $scope.$parent.loadingSocial = true;\n        }\n        if (!!_this.videoArray){\n          updateTimestamps('video');\n        }\n        $scope.$parent.switchTabs('video');\n        VideoService.resetVideoOffset();\n        _this.loadContent('video');\n      }\n    };\n\n\n    this.loadContent = function(type, offset) {\n      var channelID = ChannelService.getChannel()||TopicService.getChannelId();\n      if (type === 'social'){\n        console.log(\"LOADING SOCIAL: \", channelID);\n        networkService.send(SocialService.getSocialDataRequest(channelID,offset));\n      } else {\n        console.log(\"LOADING VIDEO: \", channelID);\n        networkService.send(VideoService.getVideoDataRequest(channelID,offset));\n      }\n    };\n\n    function updateFeed(tab) {\n\n      // Get Appropriate Content\n      var feedData,\n          existingLength,\n          tabArray;\n      if (tab === 'social'){\n        feedData = SocialService.socialArray();\n        _this.socialArray = _this.socialArray || [];\n        existingLength = _this.socialArray.length;\n        tabArray = _this.socialArray;\n      } else {\n        feedData = VideoService.videoArray();\n        _this.videoArray = _this.videoArray || [];\n        existingLength = _this.videoArray.length;\n        tabArray = _this.videoArray;\n      }\n\n      var len = feedData.length;\n      if (!!feedData && len > 0){\n        console.log(\"Feed Data: \", feedData, \" Type: \", tab);\n\n        for (var i = 0; i < len; i++){\n          var tempItem = feedData[i];\n\n          // Check to See if Item Already Exists in Scope Array\n          var itemExists = false;\n          for (var j = 0; j < existingLength; j++){\n            if (tempItem.id === tabArray[j].id){\n              itemExists = true;\n            }\n          }\n          // If Exists, Skip To Next Item\n          if (itemExists){\n            continue;\n          }\n          \n          tempItem.postAuthorName = feedData[i].embedAuthor.name;\n          tempItem.postAuthorAlias = feedData[i].embedAuthor.alias;\n          tempItem.postAuthorPhoto = feedData[i].embedAuthor.photo;\n          tempItem.tweetId = feedData[i].tweet.id;\n          \n          tempItem.postTimestamp = feedData[i].createdAt;\n          tempItem.providerName = feedData[i].embedProvider.name;\n          tempItem.html = feedData[i].embedText;\n          tempItem.retweetCount = feedData[i].tweet.metrics.retweetCount;\n          tempItem.likeCount = feedData[i].tweet.metrics.likeCount;\n          tempItem.replyCount = feedData[i].tweet.metrics.replyCount;\n\n          // Embed Object for Sharing\n          tempItem.embed = feedData[i].embed;\n          tempItem.embed.embedCreatedAt = feedData[i].embedCreatedAt;\n          // tempItem.embed.embedCreatedAtFull = feedData[i].embedCreatedAtFull;\n\n          if (tempItem.providerName === \"Twitter\"){\n            tempItem.providerLogo = \"img/twitterLogo@2x.png\";\n            tempItem.embed.provider.logo = \"img/twitterLogo@2x.png\";\n          } else {\n            tempItem.providerLogo = feedData[i].embedProvider.logo;\n            tempItem.embed.provider.logo = feedData[i].embedProvider.logo;\n          }\n\n          tempItem.embedType = feedData[i].embedType;\n          tempItem.embedUrl = feedData[i].embedUrl;\n          if (feedData[i].embedType === \"link\" && feedData[i].embedPlayable === true){\n            tempItem.embedHtml = feedData[i].embedHtml;\n            tempItem.embedPlayable = true;\n          }\n          if (feedData[i].embedType === \"media\" || feedData[i].embedType === \"link\"){\n            tempItem.mediaType = feedData[i].embedMedia.mediaType;\n            tempItem.mediaUrl = feedData[i].embedMedia.mediaUrl;\n            tempItem.mediaThumbUrl = feedData[i].embedMedia.mediaThumbUrl;\n            tempItem.mediaAspectRatio = feedData[i].embedMedia.mediaAspectRatio;\n            tempItem.mediaAspectFeed = feedData[i].embedMedia.mediaAspectFeed;\n            tempItem.mediaAspectFull = feedData[i].embedMedia.mediaAspectFull;\n            tempItem.mediaOrientation = feedData[i].embedMedia.mediaOrientation;\n          }\n\n          if (tab === 'social'){\n            _this.socialArray.push(tempItem);\n          } else {\n            _this.videoArray.push(tempItem);\n          }\n        }\n      }\n    };\n\n    function trustSrc(src) {\n      return $sce.trustAsResourceUrl(src);\n    };\n\n    function updateTimestamps(tab){\n      if (tab === 'social'){\n        for (var i = 0; i < _this.socialArray.length; i++){\n          _this.socialArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.socialArray[i].createdAtFull);\n        }\n      } else {\n        for (var i = 0; i < _this.videoArray.length; i++){\n          _this.videoArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.videoArray[i].createdAtFull);\n        }\n      }\n    };\n\n    SocialService.registerObserverCallback(function(){updateFeed('social');});\n    VideoService.registerObserverCallback(function(){updateFeed('video');});\n    \n    // Limit Rate that Function Can be Called\n    function debounce(func, wait, immediate) {\n      var timeout;\n      return function() {\n        var context = this, args = arguments;\n        var later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    function scrollAfterLoad(pos) {\n      setTimeout(function(){\n        $(document).scrollTop(pos);\n      }, 250);\n    };\n\n\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    var watchContentScroll = debounce(function() {\n      var currentScroll = $(document).height() - clientHeight - 50;\n      if ($(document).scrollTop() > currentScroll && currentScroll > 500) {\n        if ($scope.activeTab === 'social'){\n          // We are Loading More Content -->\n          // Base offset on Current Length of Scope Array\n          _this.loadContent('social',_this.socialArray.length);\n          scrollAfterLoad(currentScroll + 90);\n        }\n        else if ($scope.activeTab === 'video'){\n          // We are Loading More Content -->\n          // Base offset on Current Length of Scope Array\n          _this.loadContent('video',_this.videoArray.length);\n          scrollAfterLoad(currentScroll + 90);\n        }\n      }\n    }, 100);\n\n    $(document).on('scroll', watchContentScroll);\n\n    this.retweetPost = function(id) {\n      $http({\n        method: 'GET',\n        url: 'https://twitter.com/intent/retweet?tweet_id=' + id,\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    };\n\n    this.shareTweetToChat = function (embed) {\n      _this.embedShareContent = embed;\n      _this.showShareDialog = true;\n      console.log(\"Embed Object: \", embed);\n      if ($scope.$parent.isPeelUser){\n        var fullClient = document.documentElement.clientHeight - 54;\n        console.log(\"fullClient Height: \", fullClient);\n        setTimeout(function(){\n          $('#sharePreviewContainer').css({top: '54px'}).height(fullClient);\n        },25);\n      }\n    };\n\n    this.submitSharedPost = function (commentData,embedData) {\n      var topicID = $scope.$parent.topicID;\n      console.log(\"topicID From Parent: \", topicID);\n      networkService.send(CommentService.postCommentRequestForShare(topicID,commentData,embedData));\n      _this.showShareDialog = false;\n      $scope.$parent.switchTabs('chat');\n    };\n\n    this.shareToFacebook = function (id,embedUrl) {\n      FB.ui({\n        method: 'share',\n        href: embedUrl\n      }, function (response){\n        // Keep Track of User Shares to Facebook?\n        console.log(\"FB Response Post-Share: \", response);\n      });\n    };\n\n    this.exitShare = function () {\n      _this.showShareDialog = false;\n    };\n\n    this.highlightPost = function(){\n      $('#postShareContent').css('color','rgb(22,189,231)');\n    };\n\n    this.unhighlightPost = function(){\n      $('#postShareContent').css('color','rgb(211,214,215)');\n    };\n\n\n}]);\n\n","angular.module(\"SmartStadiumModule\", [])\n.controller(\"SmartStadiumController\", [\"$scope\", function ($scope){\n  \n  var _this = this;\n  this.viewScreen = false;\n  this.ssActiveScreen;\n\n  this.viewHighlights = function() {\n    _this.ssActiveScreen = 'highlights';\n    _this.viewScreen = true;\n  };\n\n  this.viewRoster = function() {\n    _this.ssActiveScreen = 'roster';\n    _this.viewScreen = true;\n  };\n\n  this.viewStats = function() {\n    _this.ssActiveScreen = 'stats';\n    _this.viewScreen = true;\n  };\n\n  this.viewProfileStats = function() {\n    _this.ssActiveScreen = 'profileStats';\n    _this.viewScreen = true;\n  };\n\n  this.exitView = function() {\n    _this.viewScreen = false;\n  };\n\n}]);","angular.module('SocialModule')\n.directive('shareToChatDialog', function () {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=',\n      trustSource: '&',\n      shareSubmit: '&',\n      exitShare: '&',\n      highlight: '&',\n      unhighlight: '&'\n    },\n    templateUrl: 'partials/sharePreview.html'\n  };\n});","angular.module('NetworkModule')\n.factory('ReplyService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\", \n\tfunction (DateUtilityService,Bant,FDSUtility) {\n\tvar _postID;\n\tvar LIST_REPLIES_URI = \"/v1.0/comment/replies/list/\"\n\tvar POST_REPLY_URI=\"/v1.0/reply/create\";\n\t\n\tvar UPDATE_REPLY_URI = \"/v1.0/reply/content/update/\";\n\tvar DELETE_REPLY_URI = \"/v1.0/reply/delete/\";\n\t\t\n\tvar LIKE_REPLY_URI = \"/v1.0/reply/like/\";\n\tvar UNLIKE_REPLY_URI = \"/v1.0/reply/unlike/\";\n\t\n\tvar HIDE_REPLY_URI = \"/v1.0/reply/hide/\";\n\tvar UNHIDE_REPLY_URI = \"/v1.0/reply/unhide/\";\n\t\n\tvar FLAG_REPLY_URI = \"/v1.0/reply/flag/\";\n\tvar UNFLAG_REPLY_URI = \"/v1.0/reply/unflag/\";\n\t\n\tvar observerCallbacks = [];\n\tvar _replies = [];\n\tvar _topicIdFromReply;\n\tvar _currentCommentId;\n\n\tfunction setReplies(replyData) {\n\t\t_replies = [];\n\t\ttempReplyData = replyData.data.results;\n\t\tif(tempReplyData!= undefined && tempReplyData.length>0){\n\t\t\tvar len = tempReplyData.length;\n\t\t\t// console.log(\"replies #\"+ len);\n\t\t\tfor(i=0;i<len;i++){\n\t\t\t\tvar _replyObject = {};\n\t\t\t\t_replyObject = Bant.bant(tempReplyData[i])\n\t\t\t\tif(_replyObject.id != undefined )\n\t\t\t\t\t_replies.push(_replyObject);\n\t\t\t\t// console.log(\"Reply object\"+_replyObject);\n\t\t\t\t_topicIdFromReply = tempReplyData[i].topicId;;\n\t\t\t}\n\t\t\tnotifyObservers();\n\t\t}\n\t}\n\n\tfunction appendToReplies(postReplyData) {\n\t\tvar tempPostedReply = postReplyData.data;\n\t\tif(tempPostedReply!= undefined){\n\t\t\tconsole.log(\"appendToReplies :\"+tempPostedReply);\n\t\t\tconsole.log(\"Reply comment ID :\"+ tempPostedReply.commentId);\n\t\t\tconsole.log(\"Current comment ID :\"+ _currentCommentId);\n\t\t\tif(tempPostedReply.commentId == _currentCommentId){\n\t\t\tvar _replyObject = Bant.bant(tempPostedReply);\n\t\t\tif(_replyObject.id != undefined )\n\t\t\t\t_replies.push(_replyObject);\n\t\t\tnotifyObservers();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction updateReply(replyData){\n\t\t//if Replys ID exist, update it \n\t\t//else append to existing list\n\t\tvar replyObj = replyData.data;\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == replyObj.id){\n\t\t\t\t//update\n\t\t\t\t_replies[i] = Bant.bant(replyObj)\n\t\t\t\tconsole.log(\"Reply updated\");\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\tappendToReplies(replyData);\n\t\t// console.log(\"ReplyService update Reply\");\n\t\treturn 0;\n\t}\n\t\n\tfunction updateLocalData(newData){\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == newData.id){\n\t\t\t\t//update\n\t\t\t\t_replies[i] = newData;\n\t\t\t\tif(NETWORK_DEBUG)\n\t\t\t\t\tconsole.log(\"updated Data for id:\"+ _replies[i].id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction updateLikeReplyWithId(id, liked){\n\t\tif(NETWORK_DEBUG)\n\t\tconsole.log(\"updateLikeReplyWithId :\"+ id + \"   liked \"+ liked);\n\t\tif((id != undefined)){\n\t\t\tvar tempObject;\n\t\t\ttempObject = getReplyById(id);\n\t\t\ttempObject = Bant.updateBantLiked(tempObject, liked);\n\t\t\tupdateLocalData(tempObject);\n\n\t\t\tnotifyObservers();\n\t\t}\n\t\t\n\t}\n\n\tfunction removeReply(replyData){\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == replyData.id){\n\t\t\t\t//remove element\n\t\t\t\t_replies.splice(i,1);\n\t\t\t}\n\t\t}\n\n\t}\n\t\n\tfunction getReplyById(id){\n\t\tif(NETWORK_DEBUG) console.log(\"_replies :\"+ _replies.length);\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == id){\n\t\t\t\t//remove element\n\t\t\t\treturn _replies[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getCommentIdByReply(id){\n\t\tif(NETWORK_DEBUG) console.log(\"_replies :\"+ _replies.length);\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == id){\n\t\t\t\t//remove element\n\t\t\t\treturn _replies[i].commentId;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction replyGetRequest(uri){\n\t\treturn  varReplyParams = {\"rid\": \"reply\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"uri\": encodeURI(uri)};\n\t\t\n\t}\n\t\n\tfunction replyPostRequest(uri){\n\t\treturn varPostParams = {\n\t\t\t\t\"rid\": \"reply\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(uri)}\n\t\t\n\t}\n\t\n\tfunction getRepliesRequest(commentId){\n\t\t_currentCommentId = commentId;\n\t\tvar uri = LIST_REPLIES_URI + commentId;\n\t\treturn replyGetRequest (uri);\n\t\t\n\t}\n\n\tfunction getPostReplyRequest(topicId, commentId,replyData, replyId, isReplyToReply){\n\t\tvar targetType = \"comment\";\n\t\tvar targetId = commentId;\n\t\tif(isReplyToReply != undefined && isReplyToReply == true ){\n\t\t\ttargetType = \"reply\";\n\t\t\ttargetId = replyId;\n\t\t}\n\t\tconsole.log(\"Topicid : \"+topicId,\"commentid : \"+commentId,\"replydata : \"+replyData);\n\t\tvar createReplyParams = replyPostRequest(POST_REPLY_URI);\n\t\tcreateReplyParams.data = \t\n\t\t{\n\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\"content\": {\"sections\":[{\"type\":\"html\",\"html\":replyData}]},\n\t\t\t\t\"target\": {\n\t\t\t\t\t\"type\": targetType, // Target type: “comment” or “reply”.\n\t\t\t\t\t\"id\":targetId,  // Target bant ID of comment or reply.\n\t\t\t\t},\n\n\t\t\t\t\"topicId\": topicId,\n\t\t\t\t\"commentId\": commentId\n\t\t};\n\t\treturn createReplyParams;\n\t}\n\n\tfunction likeReplyRequest(id){\n\t\treturn  replyPostRequest(LIKE_REPLY_URI + id);\n\t}\n\n\tfunction unlikeReplyRequest(id){\n\t\treturn  replyPostRequest(UNLIKE_REPLY_URI + id);\n\t}\n\t\n\t\n\tfunction hideReplyRequest(id){\n\t\treturn  replyPostRequest(HIDE_REPLY_URI + id);\n\t}\n\n\tfunction unhideReplyRequest(id){\n\t\treturn  replyPostRequest(UNHIDE_REPLY_URI + id);\n\t}\n\t\n\tfunction flagReplyRequest(id){\n\t\treturn  replyPostRequest(FLAG_REPLY_URI + id +\"?reason=spam\");\n\t}\n\n\tfunction unflagReplyRequest(id){\n\t\treturn  replyPostRequest(UNFLAG_REPLY_URI + id);\n\t}\n\t\n\tfunction deleteReplyRequest(id){\n\t\treturn  replyPostRequest(DELETE_REPLY_URI + id);\n\t}\n\t\n\t//call this when you know '_replies' has been changed\n\tvar notifyObservers = function(){\n\t\tangular.forEach(observerCallbacks, function(callback){\n\t\t\tcallback();\n\t\t});\n\t};\n\t\n\tfunction registerObserverCallback(callback){\n\t\t//register an observer\n\t\t// console.log(\"reply callback registered\");\n\t\tvar callbackLength  = observerCallbacks.length;\n\t\twhile(callbackLength > 0){\n\t\t\tcallbackLength = observerCallbacks.length;\n\t\t\tobserverCallbacks.pop();\n\t\t}\n\t\tobserverCallbacks.push(callback);\n\t}\n\tfunction isReplyLiked(id){\n\t\treturn FDSUtility.isLikedById(_replies, id);\n\t}\n\t\n\tfunction updateReplyLocalData(uri,id){\n\t\tif(uri == LIKE_REPLY_URI+id){\n\t\t\tconsole.log(\"calling update like \");\n\t\t\tupdateLikeReplyWithId(id, true)\n\t\t}\n\t\telse if(uri == UNLIKE_REPLY_URI+id){\n\t\t\tupdateLikeReplyWithId(id, false)\n\t\t}\n\t\telse if(uri == DELETE_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.deleteById(_replies,id);\n\t\t\tnotifyObservers();\n\t\t\treturn 0;\n\t\t}\n\t\telse if(uri == FLAG_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.flagById(_replies, true);\n\t\t\t}\n\t\telse if(uri == UNFLAG_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.flagById(_replies, false);\n\t\t}\n\t\telse if(uri == HIDE_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.hideById(_replies, true);\n\t\t}\n\t\telse if(uri == UNHIDE_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.hideById(_replies, false);\n\t\t}\n\t}\n\n\t\n\treturn {\n\t\treplies: function(){return _replies },\n\t\tgetTopicIdFromReply: function(){return _topicIdFromReply; },\n\t\tgetPostId: function(){return _postID ;},\n\t\tsetPostId: function(postId){_postID = postId ;},\n\t\tsetReplies:setReplies,\n\t\tupdateReply:updateReply,\n\t\tappendToReplies:appendToReplies,\n\t\tupdateLikeReplyWithId:updateLikeReplyWithId,\n\t\tupdateReplyLocalData:updateReplyLocalData,\n\t\tremoveReply:removeReply,\n\t\tgetPostReplyRequest:getPostReplyRequest,\n\t\tlikeReplyRequest:likeReplyRequest,\n\t\tunlikeReplyRequest:unlikeReplyRequest,\n\t\tdeleteReplyRequest:deleteReplyRequest,\n\t\tflagReplyRequest:flagReplyRequest,\n\t\tregisterObserverCallback:registerObserverCallback,\n\t\tgetRepliesRequest:getRepliesRequest,\n\t\tisReplyLiked:isReplyLiked,\n\t\tgetCommentIdByReply:getCommentIdByReply\n\t};\n\n}]);","angular.module('SocialModule')\n.factory('SocialService', [\"Bant\", \n  function (Bant) {\n  var LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n  var observerCallbacks = [];\n  var _socialArray = [];\n  var _offset = 0;\n  var LIMIT = 20;\n\n\n  function setSocialData(socialData) {\n    _socialArray = [];\n    var tempData = socialData.data.results;\n    var len = tempData.length;\n\n    if (!!tempData && len > 0){\n      for (i = 0; i < len; i++){\n        var _socialObject = Bant.bant(tempData[i]);\n        if (!!_socialObject.id)\n          _socialArray.push(_socialObject);\n      }\n      _offset = socialData.data.nextOffset;\n      notifyObservers();\n    }\n  };\n\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n\n  function registerObserverCallback(callback){\n    // register an observer for provided feed\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  };\n\n  function getSocialDataRequest(id, offset){\n    var reqOffset = offset || _offset;\n    var request = {\n      \"rid\": \"social\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset)\n    };\n    console.log(\"Social Request: \", request);\n    return request;\n  };\n\n  return {\n    socialArray: function(){\n      return _socialArray;\n    },\n    resetSocialOffset: function(){\n      _offset = 0;\n    },\n    setSocialData: setSocialData,\n    getSocialDataRequest: getSocialDataRequest,\n    registerObserverCallback: registerObserverCallback\n  };\n\n}]);","angular.module('SocialModule')\n.factory('VideoService', [\"Bant\",\n\tfunction (Bant) {\n\tvar LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n\tvar observerCallbacks = [];\n\tvar _videoArray = [];\n\tvar _offset = 0;\n\tvar LIMIT = 10;\n\n\n\tfunction setVideoData(videoData) {\n\t\t_videoArray = [];\n\t\tvar tempData = videoData.data.results;\n\t\tvar len = tempData.length;\n\n\t\tif (!!tempData && len > 0){\n\t\t\tfor (i = 0; i < len; i++){\n\t\t\t\tvar _videoObject = Bant.bant(tempData[i]);\n\t\t\t\tif (!!_videoObject.id)\n\t\t\t\t\t_videoArray.push(_videoObject);\n\t\t\t}\n\t\t\t_offset = videoData.data.nextOffset;\n\t\t\tnotifyObservers();\n\t\t}\n\t}\n\n\n\t//call this when you know 'comments' has been changed\n\tvar notifyObservers = function(){\n\t\tangular.forEach(observerCallbacks, function(callback){\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tfunction registerObserverCallback(callback){\n\t\t//register an observer\n\t\tvar callbackLength  = observerCallbacks.length;\n\t\twhile(callbackLength > 0){\n\t\t\tcallbackLength = observerCallbacks.length;\n\t\t\tobserverCallbacks.pop();\n\t\t}\n\t\tobserverCallbacks.push(callback);\n\t}\n\n\tfunction getVideoDataRequest(id, offset){\n\t\tvar reqOffset = offset || _offset;\n\t\tvar request = {\n\t\t\t\"rid\": \"video\",\n\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\"method\": \"GET\",\n\t\t\t\"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset+\"&filter=video\")\n\t\t};\n\t\tconsole.log(\"Video Request: \", request);\n\t\treturn request;\n\t}\n\n\treturn {\n\t\tvideoArray: function(){\n\t\t\treturn _videoArray;\n\t\t},\n\t\tresetVideoOffset: function(){\n      _offset = 0;\n    },\n\t\tsetVideoData:setVideoData,\n\t\tgetVideoDataRequest:getVideoDataRequest,\n\t\tregisterObserverCallback:registerObserverCallback\n\t};\n\n}]);"],"sourceRoot":"/source/"}