{"version":3,"sources":["PostController.js","SocialController.js","SmartStadiumController.js","SocialDirectives.js","PostDirectives.js","ReplyService.js","SocialService.js","VideoService.js"],"names":["angular","module","controller","$scope","$sce","$timeout","$window","$location","$sanitize","$routeParams","networkService","ReplyService","TopicService","CommentService","UserInfoService","URIHelper","SplashService","MUService","FileUploader","ForumStorage","UserAgentService","updateScore","leftTeam","getTeamA","rightTeam","getTeamB","score","getScore","undefined","leftTeamScore","points","rightTeamScore","gameStatus","getGameStatus","topicTitle","getTitle","gamePeriod","getGamePeriod","gameClock","getGameClock","console","log","updateCommentInReply","selectedComment","postID","getPostId","getCommentById","NETWORK_DEBUG","tempComment","postAuthorName","author","name","postAuthorPhoto","photo","postTimestamp","createdAt","likeCount","metrics","likes","replyCount","replies","mediaAspectFeed","isLiked","signal","like","topicId","isMyComment","isCurrentUser","id","type","mediaUrl","mediaAspectFull","mediaAspectRatio","mediaOrientation","mediaThumbUrl","shared","embed","embedCreatedAt","embedCreatedAtFull","embedType","embedMedia","providerName","embedLogo","provider","logo","playable","embedHtml","comment","updateReplies","repliesData","len","length","i","tempReply","isMyReply","trustAsHtml","push","justReplied","setTimeout","window","scrollTo","document","body","scrollHeight","isMobileUser","mobileBrowser","mobileUserAgent","getMobileUserAgent","getFromLocalStorage","initPage","pageClass","getTopicId","setPostId","backToTopicButtonTapped","HTML5_LOC","path","location","setPeelUI","userType","$","css","isPeelUser","hidePeelSplash","isSmartStadiumUser","isMI16User","requestReplies","send","getRepliesRequest","getCommentByIdRequest","peelClose","peelWatchOnTV","ga","showId","getPeelShowId","showNewRepliesIndicator","newRepliesIndicatorTapped","checkDirectReply","directComment","focus","triggerRepliesKeyboard","secureLink","url","isGuestUser","initReplyPage","paddingTop","height","getElementById","style","paddingBottom","$watch","newValue","oldValue","replyDivs","getElementsByClassName","div","thisReply","thisDiv","onclick","e","target","is","this","setToLocalStorage","each","magnificPopup","isUserLoggedIn","isSocketConnected","init","updateLikeComment","isCommentLiked","getUnlikeCommentRequest","getLikeCommentRequest","updateLikeReply","isReplyLiked","unlikeReplyRequest","likeReplyRequest","deleteReply","deleteReplyRequest","reportReplyAsSpam","flagReplyRequest","deleteComment","deleteCommentRequest","reload","reportCommentAsSpam","flagCommentRequest","imageClick","imageURL","event","cancelBubble","stopPropagation","open","items","src","callbacks","bind","preventDefault","close","unbind","notifyNewReplies","registerObserverCallback","trustSrc","trustAsResourceUrl","addEventListener","xLinkActivated","$http","SocialService","VideoService","ChannelService","DateUtilityService","updateFeed","tab","feedData","existingLength","tabArray","socialArray","_this","videoArray","tempItem","itemExists","j","embedAuthor","postAuthorAlias","alias","tweetId","tweet","embedProvider","html","embedText","retweetCount","providerLogo","embedUrl","embedPlayable","mediaType","updateTimestamps","getTimeSince","createdAtFull","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","initFeed","$parent","loadingSocial","switchTabs","resetSocialOffset","loadContent","resetVideoOffset","offset","channelID","getChannel","getChannelId","getSocialDataRequest","getVideoDataRequest","clientHeight","documentElement","innerHeight","watchContentScroll","currentScroll","scrollTop","activeTab","on","retweetPost","method","headers","Access-Control-Allow-Origin","shareTweetToChat","embedShareContent","showShareDialog","fullClient","top","submitSharedPost","commentData","embedData","topicID","postCommentRequestForShare","FB","d","s","js","fjs","getElementsByTagName","createElement","parentNode","insertBefore","fbAsyncInit","appId","xfbml","version","shareToFacebook","ui","href","response","exitShare","highlightPost","unhighlightPost","viewScreen","ssActiveScreen","viewHighlights","viewRoster","viewStats","viewProfileStats","exitView","directive","restrict","scope","thisPost","trustSource","shareSubmit","highlight","unhighlight","templateUrl","priority","link","$element","$attributes","$eval","ngElementReady","factory","Bant","FDSUtility","setReplies","replyData","_replies","tempReplyData","data","results","_replyObject","bant","_topicIdFromReply","notifyObservers","appendToReplies","postReplyData","tempPostedReply","commentId","_currentCommentId","updateReply","replyObj","updateLocalData","newData","updateLikeReplyWithId","liked","tempObject","getReplyById","updateBantLiked","removeReply","splice","getCommentIdByReply","replyGetRequest","uri","varReplyParams","rid","timestamp","Date","getTime","encodeURI","replyPostRequest","varPostParams","LIST_REPLIES_URI","getPostReplyRequest","replyId","isReplyToReply","targetType","targetId","createReplyParams","POST_REPLY_URI","lang","content","sections","LIKE_REPLY_URI","UNLIKE_REPLY_URI","FLAG_REPLY_URI","DELETE_REPLY_URI","callback","callbackLength","observerCallbacks","pop","isLikedById","updateReplyLocalData","deleteById","flagById","UNFLAG_REPLY_URI","HIDE_REPLY_URI","hideById","UNHIDE_REPLY_URI","_postID","forEach","getTopicIdFromReply","postId","setSocialData","socialData","_socialArray","tempData","_socialObject","_offset","nextOffset","reqOffset","request","LIST_SOCIAL_URI","LIMIT","setVideoData","videoData","_videoArray","_videoObject"],"mappings":"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","file":"app-post.min.js","sourcesContent":["angular.module(\"PostModule\", [\"NetworkModule\", \"SplashModule\", \"MediaModule\", \"angularFileUpload\"])\n.controller(\"PostController\", [\"$scope\", \"$sce\", \"$timeout\", \"$window\", \"$location\",\"$sanitize\", \"$routeParams\", \"networkService\",\"ReplyService\", \"TopicService\",\"CommentService\", \"UserInfoService\",\"URIHelper\", \"SplashService\", \"MUService\", \"FileUploader\", \"ForumStorage\", \"UserAgentService\",\n\nfunction ($scope, $sce, $timeout, $window, $location, $sanitize, $routeParams, networkService, ReplyService, TopicService, CommentService, UserInfoService,URIHelper,SplashService,MUService,FileUploader,ForumStorage,UserAgentService)\n{\n\n  // Check For Mobile Browser\n  if (UserAgentService.isMobileUser()){\n    $scope.mobileBrowser = true;\n    $scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n    console.log(\"MOBILE USER AGENT: \", $scope.mobileUserAgent);\n  } else {\n    $scope.mobileBrowser = false;\n  }\n\n  // Retain & Handle State when Returning From External Links\n  if (ForumStorage.getFromLocalStorage('hasUserVisited') === true){\n    console.log(\"Checking For Existing Session\");\n    $scope.initPage();\n  }\n  var headerHeight;\n\n\t//ga('send', 'pageview', \"/comment/\"+$routeParams.postID);\n\t$scope.pageClass = 'page-post';\n\n\t$scope.postID = $routeParams.postID;\n\t$scope.topicId = TopicService.getTopicId();\n\t//$scope.replies = networkService.getRepliesForPostID();\n\t$scope.justReplied = false;\n\t\n\tReplyService.setPostId($routeParams.postID);\n\n\t$scope.backToTopicButtonTapped = function()\n\t{\n\t\tvar topicId = TopicService.getTopicId();\n\t\tif(topicId == undefined)\n\t\t\ttopicId = $scope.comment.topicId;\n    if (HTML5_LOC){\n\t\t  $location.path(\"/topic/\"+topicId);\n    } else {\n      $window.location = \"#/topic/\" + topicId;\n    }\n\t}\n\n\t$scope.setPeelUI = function(userType){\n\t\tconsole.log(\"Post User Type: \", userType);\n\t\tif (userType === 'peel') {\n\t\t\t$('#postSection').css('padding-top','54px');\n\t\t} else if (userType === 'email') {\n      $('#postSection').css('padding-top','54px');\n    } else if (userType === 'MI16') {\n      // $('#postSection').css('padding-top','54px');\n\t\t} else {\n      $('#postSection').css('padding-top','0px');\n    }\n\t}\n\n  if (UserInfoService.isPeelUser()){\n    $scope.isPeelUser = true;\n    SplashService.hidePeelSplash = true;\n    $scope.setPeelUI('peel');\n  }\n  else if (UserInfoService.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    $scope.setPeelUI('email');\n  }\n  else if (UserInfoService.isMI16User()){\n    $scope.isMI16User = true;\n  }\n\n\t$scope.requestReplies = function(){\n\t\t// console.log(\"PostController requestReplies Invoked\");\n\t\tnetworkService.send(ReplyService.getRepliesRequest($scope.postID));\n\t\tvar selectedComment = CommentService.getCommentById($scope.postID);\n\t\tif(selectedComment != undefined){\n\t\t\tupdateCommentInReply(selectedComment);\n\t\t}\n\t\telse{\n\t\t\tconsole.log(\"No data from comment service : TODO handle this with cookies\");\n\t\t\tnetworkService.send(CommentService.getCommentByIdRequest($scope.postID));\n\t\t}\n\t}\n\n\t$scope.peelClose = function()\n\t{\n\t\tconsole.log(\"peelClose()\");\n\t}\n\n\t$scope.peelWatchOnTV = function()\n\t{\n\t\tga('send', 'event', 'Peel', 'click', 'PeelWatchOnTV');\n\t\tconsole.log(\"peelWatchOnTV()\");\n\t\tvar showId = URIHelper.getPeelShowId();\n\t\tif(showId != undefined)\n\t\t\twindow.location = \"peel://tunein/\"+showId;\n\t\telse\n\t\t\twindow.location = \"peel://home\";\n\t}\n\n\t$scope.showNewRepliesIndicator = false;\n\t$scope.newRepliesIndicatorTapped = function()\n\t{\n\t\tconsole.log(\"newRepliesIndicatorTapped\");\n\t\t$scope.showNewRepliesIndicator = false;\n\t\tupdateReplies();\n\t\twindow.scrollTo(0,document.body.scrollHeight);\n\t}\n\n  $scope.checkDirectReply = function() {\n    if (TopicService.directComment){\n      $('#postCommentField').focus();\n      TopicService.directComment = false;\n    }\n  }\n\n\t$scope.triggerRepliesKeyboard = function() {\n    $('#postCommentField').focus();\n\t}\n\n  $scope.secureLink = function(url, id) {\n    if (UserInfoService.isGuestUser()){\n      return \"\";\n    } else {\n      return url + id;\n    }\n  };\n\t\n\t$scope.initReplyPage = function(){\n\t\t$scope.pageClass = 'page-post';\n\t\t$scope.paddingTop = \"20\";\n\t\t// $scope.pageStyle = {'padding-top': '10em'};\n\n\t\t$scope.requestReplies();\n    // $scope.loadingReply = true;\n\t\tvar replyPostHeader = $(\"#replyPost\").height();\n\t\t// console.log(\"height of repy header: \" + replyPostHeader);\n\t\tvar heightString = replyPostHeader + \"px\";\n\t\t// document.getElementById('postHeader').style.height = '3.5em';//heightString;\n\t\t// document.getElementById('postSection').style.paddingTop = '3.5em';\n\t  if ($scope.mobileBrowser === true){\n      document.getElementById('postSection').style.paddingBottom = \"42px\";\n    }\n\n\t\t$scope.$watch(\"replies\", function (newValue, oldValue)\n\t\t {\n  \t\t\t$timeout(function()\n  \t\t\t{\n  \t\t\t\t// setLinks();\n          var replyDivs = document.getElementsByClassName(\"postRow\");\n          for (div in replyDivs){\n            if (newValue != undefined){\n              var thisReply = newValue[div];\n              if (thisReply != undefined){\n                var thisDiv = replyDivs[div];\n                thisDiv.onclick = function(e) {\n                  if ($(e.target).is('a')){\n                    console.log(\"EXTERNAL LINK: \", e, this.id);\n                    ForumStorage.setToLocalStorage('replyBookmark', this.id);\n                    return;\n                  }\n                }\n              }\n            }\n          }\n    \t\t\t$('.commentsContainer').each(function()\n    \t\t\t{\n      \t\t\t\t$('.image-link').magnificPopup({\n        \t\t\t\ttype:'image'\n     \t\t\t\t});\n    \t\t\t});\n  \t\t\t});\n\t\t});\n\t}\n\n\tif(UserInfoService.isUserLoggedIn()){\n\t\tif(!networkService.isSocketConnected())\n\t\t\tnetworkService.init();\n\t\t$scope.initReplyPage();\n\t}\n\telse {\n\t\tif (HTML5_LOC){\n      $location.path(\"/login\");\n    } else {\n      $window.location = \"#/login\";\n    }\n\t}\n\n\t$scope.updateLikeComment = function(id) {\n\t\t// console.log(\"PostController updateLikeComment(\" + id + \")\");\n\t\tif(CommentService.isCommentLiked(id)){\n\t\t\tnetworkService.send(CommentService.getUnlikeCommentRequest(id));\n\t\t}\n\t\telse{\n\t\t\tnetworkService.send(CommentService.getLikeCommentRequest(id));\t\n\t\t}\n\t};\n\n\t$scope.updateLikeReply = function(id) {\n\t\t// console.log(\"PostController Like Reply\");\n\t\tif(ReplyService.isReplyLiked(id)){\n\t\t\tnetworkService.send(ReplyService.unlikeReplyRequest(id));\n\t\t}\n\t\telse{\n\t\t\tnetworkService.send(ReplyService.likeReplyRequest(id));\n\t\t}\n\t};\n\n\t$scope.deleteReply = function(id)\n\t{\n\t\tconsole.log(\"deleteReply(\" + id + \")\");\n\t\tnetworkService.send(ReplyService.deleteReplyRequest(id));\n\t}\n\n\t$scope.reportReplyAsSpam = function(id)\n\t{\n\t\tconsole.log(\"reportReplyAsSpam(\" + id + \")\");\n\t\tnetworkService.send(ReplyService.flagReplyRequest(id));\n\t}\n\n  $scope.deleteComment = function(id)\n  {\n    console.log(\"deleteComment(\" + id + \")\");\n    // $scope.innerButtonTapped = true;\n    networkService.send(CommentService.deleteCommentRequest(id));\n    if (HTML5_LOC){\n      $location.path(\"/topic/\" + $scope.topicId);\n    } else {\n      $window.location = \"#/topic/\" + $scope.topicId;\n    }\n    $window.location.reload();\n  }\n\n  $scope.reportCommentAsSpam = function(id)\n  {\n    console.log(\"reportCommentAsSpam(\" + id + \")\");\n    // $scope.innerButtonTapped = true;\n    networkService.send(CommentService.flagCommentRequest(id)); \n  }\n\n\t$scope.imageClick = function(imageURL)\n\t{\n\t\tevent.cancelBubble = true;\n\t   if(event.stopPropagation) event.stopPropagation();\n\n\t\t$.magnificPopup.open({\n                    items: {\n                    \ttype:'image',\n                    \tsrc: imageURL,\n                },\n                type: 'inline',\n                callbacks:\n                {\n\t\t\t\t    open: function()\n\t\t\t\t    {\n\t\t\t\t      console.log(\"popup opened\");\n\t\t\t\t      $('body').bind('touchmove', function(e){e.preventDefault()})\n\t\t\t\t    },\n\t\t\t\t    close: function()\n\t\t\t\t    {\n\t\t\t\t      console.log(\"popup closed\");\n\t\t\t\t      $('body').unbind('touchmove')\n\t\t\t\t    }\n\t\t\t\t    // e.t.c.\n\t\t\t\t}\n            });\n\t}\n\n\tfunction updateScore(){\n\t\t//Score update here\n\t\t$scope.leftTeam = TopicService.getTeamA();\n\t\t$scope.rightTeam = TopicService.getTeamB();\n\t\tvar score = TopicService.getScore();\n\t\tif(score != undefined){\n\t\t\t$scope.leftTeamScore = score.points[0];\n\t\t\t$scope.rightTeamScore = score.points[1];\n\t\t}\n\t\t$scope.gameStatus = TopicService.getGameStatus();\n\t\t$scope.topicTitle = TopicService.getTitle();\n\t\tif($scope.gameStatus == \"live\") {\n\t\t\t$scope.gamePeriod = TopicService.getGamePeriod();\n\t\t\t$scope.gameClock = TopicService.getGameClock();\n\t\t}\n\t\tconsole.log(\"Scores updated in replies\");\n\t}\n\n\t function updateCommentInReply(selectedComment){\n\t\tconsole.log(\"Already Had PostID: \", $scope.postID);\n    if (!$scope.postID){\n      $scope.postID = ReplyService.getPostId();\n      console.log(\"Regenerated PostID: \", $scope.postID);\n    }\n    if(selectedComment == undefined){\n\t\t\tselectedComment = CommentService.getCommentById($scope.postID);\n\t\t}\n\t\tif(selectedComment != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"Updated comment in reply triggered\" ); \n\t\t\tvar tempComment = {};\n\t\t\ttempComment = selectedComment;\n\t\t\ttempComment.postAuthorName = selectedComment.author.name;\n\t\t\ttempComment.postAuthorPhoto = selectedComment.author.photo;\n\n\t\t\ttempComment.postTimestamp = selectedComment.createdAt;\n\t\t\ttempComment.likeCount = selectedComment.metrics.likes;\n\t\t\ttempComment.replyCount = selectedComment.metrics.replies;\n\t\t\ttempComment.mediaAspectFeed = selectedComment.mediaAspectFeed;\n\t\t\ttempComment.isLiked = selectedComment.signal.like;\n\t\t\ttempComment.topicId = selectedComment.topicId;\n      tempComment.isMyComment = UserInfoService.isCurrentUser(selectedComment.author.id);\n\n      if (tempComment.type === 'media'){\n          tempComment.mediaUrl = selectedComment.mediaUrl;\n          // tempComment.trustedMediaUrl = $scope.trustSrc(tempComment.mediaUrl);\n          tempComment.mediaAspectFeed = selectedComment.mediaAspectFeed;\n          tempComment.mediaAspectFull = selectedComment.mediaAspectFull;\n          tempComment.mediaAspectRatio = selectedComment.mediaAspectRatio;\n          tempComment.mediaOrientation = selectedComment.mediaOrientation;\n          tempComment.mediaThumbUrl = selectedComment.mediaThumbUrl;\n        }\n\n      if (tempComment.type === 'embed'){\n        tempComment.shared = true;\n        tempComment.embed = selectedComment.embed;\n        tempComment.embed.embedCreatedAt = selectedComment.embedCreatedAt;\n        tempComment.embed.embedCreatedAtFull = selectedComment.embedCreatedAtFull;\n\n        if (tempComment.embedType === 'media'){\n          tempComment.mediaUrl = selectedComment.embedMedia.mediaUrl;\n          tempComment.mediaThumbUrl = selectedComment.embedMedia.mediaThumbUrl;\n          tempComment.mediaAspectFeed = selectedComment.embedMedia.mediaAspectFeed;\n          tempComment.mediaAspectFull = selectedComment.embedMedia.mediaAspectFull;\n          tempComment.mediaAspectRatio = selectedComment.embedMedia.mediaAspectRatio;\n          tempComment.mediaOrientation = selectedComment.embedMedia.mediaOrientation;\n        }\n\n        if (tempComment.providerName === \"Twitter\"){\n          tempComment.embed.embedLogo = \"img/twitterLogo@2x.png\";\n        } else {\n          tempComment.embed.embedLogo = selectedComment.embed.provider.logo;\n        }\n\n        if (selectedComment.embed.type === 'link' && selectedComment.embed.playable === true){\n          tempComment.embedHtml = selectedComment.embedHtml;\n        }\n      }\n\n\t\t\t$scope.comment = tempComment;\n\t\t}\n    // console.log(\"DIRECT COMMENT? \", TopicService.directComment);\n    // if(TopicService.directComment === true){\n    //   setTimeout(function(){$scope.triggerRepliesKeyboard();},1000);\n    //   TopicService.directComment = false;\n    // }\n\t}\n\n  // $scope.hideLoading = function(){\n  //   console.log(\"HIDING LOAD\");\n  //   $scope.loadingReply = false;\n  // };\n\n\tfunction updateReplies(){\n\t\t//TODO: check with ahmed, these values could be individual scope var.\n\t\tvar repliesData = ReplyService.replies();\n\t\tvar len = repliesData.length;\n\n\t\t$scope.replies = [];\n\n\t\tfor(i=0;i<len;i++){\n\t\t\tvar tempReply = {};\n\t\t\ttempReply = repliesData[i];\n\t\t\ttempReply.postAuthorName = repliesData[i].author.name;\n\t\t\ttempReply.postAuthorPhoto = repliesData[i].author.photo;\n\t\t\ttempReply.isMyReply = UserInfoService.isCurrentUser(repliesData[i].author.id);\n\n\t\t\ttempReply.postTimestamp = repliesData[i].createdAt;\n\t\t\ttempReply.likeCount = repliesData[i].metrics.likes;\n\t\t\ttempReply.replyCount = repliesData[i].metrics.replies;\n\t\t\ttempReply.mediaAspectFeed = repliesData[i].mediaAspectFeed;\n\t\t\ttempReply.isLiked = repliesData[i].signal.like;\n\t\t\t\n      if (tempReply.type === 'media'){\n          tempReply.mediaUrl = repliesData[i].mediaUrl;\n          // tempReply.trustedMediaUrl = $scope.trustSrc(tempReply.mediaUrl);\n          tempReply.mediaAspectFeed = repliesData[i].mediaAspectFeed;\n          tempReply.mediaAspectFull = repliesData[i].mediaAspectFull;\n          tempReply.mediaAspectRatio = repliesData[i].mediaAspectRatio;\n          tempReply.mediaOrientation = repliesData[i].mediaOrientation;\n          tempReply.mediaThumbUrl = repliesData[i].mediaThumbUrl;\n        }\n      if (tempReply.type === 'embed'){\n        tempReply.shared = true;\n        tempReply.embed = repliesData[i].embed;\n        tempReply.embed.embedCreatedAt = repliesData[i].embedCreatedAt;\n        tempReply.embed.embedCreatedAtFull = repliesData[i].embedCreatedAtFull;\n\n        if (tempReply.providerName === \"Twitter\"){\n          tempReply.embed.embedLogo = \"img/twitterLogo@2x.png\";\n        } else {\n          tempReply.embed.embedLogo = repliesData[i].embed.provider.logo;\n        }\n\n        if (repliesData[i].embed.type === 'link' && repliesData[i].embed.playable === true){\n          tempReply.embed.embedHtml = $sce.trustAsHtml(repliesData[i].embedHtml);\n        }\n      }\n\n      $scope.replies.push(tempReply);\n\n\t\t\t// console.log(i +\" : updated replies html : \" +$scope.replies[i].html);\n\t\t\t// console.log(i +\" : updated replies author name: \" +$scope.replies[i].postAuthorName);\n\t\t\t// console.log(i +\" : updated replies author photo: \" +$scope.replies[i].postAuthorPhoto);\n\n\t\t\tif($scope.replies[i].type == \"media\"){\n\t\t\t\t// console.log(i +\" : updated replies media : \" +$scope.replies[i].mediaUrl);\n\t\t\t\t// console.log(i +\" : updated replies media : \" +$scope.replies[i].mediaAspectFeed);\n\t\t\t}\n\t\t\t//console.log(i +\" : updated replies likecount : \" +$scope.replies[i].likeCount);\n\n\t\t}\n  //   console.log(\"DIRECT COMMENT? \", TopicService.directComment);\n\t\t// if(TopicService.directComment === true)\n\t\t// {\n\t\t// \t$scope.triggerRepliesKeyboard();\n\t\t// \tTopicService.directComment = false;\n\t\t// }\n\n\t\tif($scope.justReplied == true)\n\t\t{\n\t\t\tsetTimeout(function()\n\t\t\t\t{ \n\t\t\t\t\tconsole.log(\"Scroll to last reply\");\n\t\t\t\t\twindow.scrollTo(0,document.body.scrollHeight);\n\t\t\t\t\t$scope.justReplied = false;\n\t\t\t\t}, 1000);\n\t\t}\n\t}\n\t \n\t var notifyNewReplies = function(){\n\n\t\t if($scope.replies == undefined)\n\t\t {\n\t\t\t updateReplies();\n\t\t }\n\t\t else {\n\t\t\t var repliesData = ReplyService.replies();\n\t\t\t var len = repliesData.length;\n\t\t\t if($scope.replies.length < len ){\n\t\t\t\t //console.log(\"newReplies triggered\");\n\t\t\t\t if(!UserInfoService.isCurrentUser(repliesData[len-1].author.id)){\n\t\t\t\t\t $scope.showNewRepliesIndicator = true;\n\t\t\t\t }\n\t\t\t\t else{\n\t\t\t\t\t updateReplies();\n\t\t\t\t }\n\t\t\t }\n\t\t\t else{\n\t\t\t\t updateReplies();\n\t\t\t }\n\n\t\t }\n\t }\n\t \n\tReplyService.registerObserverCallback(notifyNewReplies);\n\tTopicService.registerObserverCallback(updateScore);\n\tCommentService.registerObserverCallback(updateCommentInReply);\n\n\t$scope.trustSrc = function(src)\n\t{\n    \treturn $sce.trustAsResourceUrl(src);\n  \t}\n\n  $window.addEventListener(\"beforeunload\", function(){\n    console.log(\"Before Unload\");\n    ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n  });\n\n  $scope.xLinkActivated = false;\n\n\n}]);\n\n","angular.module(\"SocialModule\", [\"NetworkModule\",\"ChannelModule\",\"TopicModule\"])\n.controller(\"SocialController\", [\"$scope\",\"$sce\",\"$window\",\"$routeParams\",\"$http\",\"SocialService\",\"VideoService\",\"networkService\",\"ChannelService\",\"TopicService\",\"DateUtilityService\",\"CommentService\",\n  function ($scope,$sce,$window,$routeParams,$http,SocialService,VideoService,networkService,ChannelService,TopicService,DateUtilityService,CommentService){\n    console.log(\"Social Control\");\n\n    var _this = this;\n    this.initFeed = function(tab) {\n      // Show Loading UI Once On Each Tab\n      if (tab === 'social'){\n        if (!_this.socialArray){\n          $scope.$parent.loadingSocial = true;\n        }\n        if (!!_this.socialArray){\n          updateTimestamps('social');\n        }\n        $scope.$parent.switchTabs('social');\n        SocialService.resetSocialOffset();\n        _this.loadContent('social');\n      } else {\n        if (!_this.videoArray){\n          $scope.$parent.loadingSocial = true;\n        }\n        if (!!_this.videoArray){\n          updateTimestamps('video');\n        }\n        $scope.$parent.switchTabs('video');\n        VideoService.resetVideoOffset();\n        _this.loadContent('video');\n      }\n    };\n\n\n    this.loadContent = function(type, offset) {\n      var channelID = ChannelService.getChannel()||TopicService.getChannelId();\n      if (type === 'social'){\n        console.log(\"LOADING SOCIAL: \", channelID);\n        networkService.send(SocialService.getSocialDataRequest(channelID,offset));\n      } else {\n        console.log(\"LOADING VIDEO: \", channelID);\n        networkService.send(VideoService.getVideoDataRequest(channelID,offset));\n      }\n    };\n\n    function updateFeed(tab) {\n\n      // Get Appropriate Content\n      var feedData,\n          existingLength,\n          tabArray;\n      if (tab === 'social'){\n        feedData = SocialService.socialArray();\n        _this.socialArray = _this.socialArray || [];\n        existingLength = _this.socialArray.length;\n        tabArray = _this.socialArray;\n      } else {\n        feedData = VideoService.videoArray();\n        _this.videoArray = _this.videoArray || [];\n        existingLength = _this.videoArray.length;\n        tabArray = _this.videoArray;\n      }\n\n      var len = feedData.length;\n      if (!!feedData && len > 0){\n        // console.log(\"Feed Data: \", feedData, \" Type: \", tab);\n\n        for (var i = 0; i < len; i++){\n          var tempItem = feedData[i];\n\n          // Check to See if Item Already Exists in Scope Array\n          var itemExists = false;\n          for (var j = 0; j < existingLength; j++){\n            if (tempItem.id === tabArray[j].id){\n              itemExists = true;\n            }\n          }\n          // If Exists, Skip To Next Item\n          if (itemExists){\n            continue;\n          }\n          \n          tempItem.postAuthorName = feedData[i].embedAuthor.name;\n          tempItem.postAuthorAlias = feedData[i].embedAuthor.alias;\n          tempItem.postAuthorPhoto = feedData[i].embedAuthor.photo;\n          tempItem.tweetId = feedData[i].tweet.id;\n          \n          tempItem.postTimestamp = feedData[i].createdAt;\n          tempItem.providerName = feedData[i].embedProvider.name;\n          tempItem.html = feedData[i].embedText;\n          tempItem.retweetCount = feedData[i].tweet.metrics.retweetCount;\n          tempItem.likeCount = feedData[i].tweet.metrics.likeCount;\n          tempItem.replyCount = feedData[i].tweet.metrics.replyCount;\n\n          // Embed Object for Sharing\n          tempItem.embed = feedData[i].embed;\n          tempItem.embed.embedCreatedAt = feedData[i].embedCreatedAt;\n          // tempItem.embed.embedCreatedAtFull = feedData[i].embedCreatedAtFull;\n\n          if (tempItem.providerName === \"Twitter\"){\n            tempItem.providerLogo = \"img/twitterLogo@2x.png\";\n            tempItem.embed.provider.logo = \"img/twitterLogo@2x.png\";\n          } else {\n            tempItem.providerLogo = feedData[i].embedProvider.logo;\n            tempItem.embed.provider.logo = feedData[i].embedProvider.logo;\n          }\n\n          tempItem.embedType = feedData[i].embedType;\n          tempItem.embedUrl = feedData[i].embedUrl;\n          if (feedData[i].embedType === \"link\" && feedData[i].embedPlayable === true){\n            tempItem.embedHtml = feedData[i].embedHtml;\n            tempItem.embedPlayable = true;\n          }\n          if (feedData[i].embedType === \"media\" || feedData[i].embedType === \"link\"){\n            tempItem.mediaType = feedData[i].embedMedia.mediaType;\n            tempItem.mediaUrl = feedData[i].embedMedia.mediaUrl;\n            tempItem.mediaThumbUrl = feedData[i].embedMedia.mediaThumbUrl;\n            tempItem.mediaAspectRatio = feedData[i].embedMedia.mediaAspectRatio;\n            tempItem.mediaAspectFeed = feedData[i].embedMedia.mediaAspectFeed;\n            tempItem.mediaAspectFull = feedData[i].embedMedia.mediaAspectFull;\n            tempItem.mediaOrientation = feedData[i].embedMedia.mediaOrientation;\n          }\n\n          if (tab === 'social'){\n            _this.socialArray.push(tempItem);\n          } else {\n            _this.videoArray.push(tempItem);\n          }\n          if (NETWORK_DEBUG && i === len - 1){\n            if (tab === 'social'){\n              console.log(\"Social Array: \", _this.socialArray);\n            } else {\n              console.log(\"Video Array: \", _this.videoArray);\n            }\n          }\n        }\n      }\n    };\n\n    function trustSrc(src) {\n      return $sce.trustAsResourceUrl(src);\n    };\n\n    function updateTimestamps(tab){\n      if (tab === 'social'){\n        for (var i = 0; i < _this.socialArray.length; i++){\n          _this.socialArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.socialArray[i].createdAtFull);\n        }\n      } else {\n        for (var i = 0; i < _this.videoArray.length; i++){\n          _this.videoArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.videoArray[i].createdAtFull);\n        }\n      }\n    };\n\n    SocialService.registerObserverCallback(function(){updateFeed('social');});\n    VideoService.registerObserverCallback(function(){updateFeed('video');});\n    \n    // Limit Rate that Function Can be Called\n    function debounce(func, wait, immediate) {\n      var timeout;\n      return function() {\n        var context = this, args = arguments;\n        var later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    function scrollAfterLoad(pos) {\n      setTimeout(function(){\n        $(document).scrollTop(pos);\n      }, 250);\n    };\n\n\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    var watchContentScroll = debounce(function() {\n      var currentScroll = $(document).height() - clientHeight - 50;\n      if ($(document).scrollTop() > currentScroll && currentScroll > 500) {\n        if ($scope.activeTab === 'social'){\n          // We are Loading More Content -->\n          // Base offset on Current Length of Scope Array\n          _this.loadContent('social',_this.socialArray.length);\n          // scrollAfterLoad(currentScroll + 90);\n        }\n        else if ($scope.activeTab === 'video'){\n          // We are Loading More Content -->\n          // Base offset on Current Length of Scope Array\n          _this.loadContent('video',_this.videoArray.length);\n          // scrollAfterLoad(currentScroll + 90);\n        }\n      }\n    }, 100);\n\n    $(document).on('scroll', watchContentScroll);\n\n    this.retweetPost = function(id) {\n      $http({\n        method: 'GET',\n        url: 'https://twitter.com/intent/retweet?tweet_id=' + id,\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    };\n\n    this.shareTweetToChat = function (embed) {\n      _this.embedShareContent = embed;\n      _this.showShareDialog = true;\n      console.log(\"Embed Object: \", embed);\n      if ($scope.$parent.isPeelUser){\n        var fullClient = document.documentElement.clientHeight - 54;\n        console.log(\"fullClient Height: \", fullClient);\n        setTimeout(function(){\n          $('#sharePreviewContainer').css({top: '54px'}).height(fullClient);\n        },25);\n      }\n    };\n\n    this.submitSharedPost = function (commentData,embedData) {\n      var topicID = $scope.$parent.topicID;\n      console.log(\"topicID From Parent: \", topicID);\n      networkService.send(CommentService.postCommentRequestForShare(topicID,commentData,embedData));\n      _this.showShareDialog = false;\n      $scope.$parent.switchTabs('chat');\n    };\n\n    if (!FB){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n    }\n    \n    window.fbAsyncInit = function() {\n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n    };\n\n    this.shareToFacebook = function (id,embedUrl) {\n      FB.ui({\n        method: 'share',\n        href: embedUrl\n      }, function (response){\n        // Keep Track of User Shares to Facebook?\n        console.log(\"FB Response Post-Share: \", response);\n      });\n    };\n\n    this.exitShare = function () {\n      _this.showShareDialog = false;\n    };\n\n    this.highlightPost = function(){\n      $('#postShareContent').css('color','rgb(22,189,231)');\n    };\n\n    this.unhighlightPost = function(){\n      $('#postShareContent').css('color','rgb(211,214,215)');\n    };\n\n\n}]);\n\n","angular.module(\"SmartStadiumModule\", [])\n.controller(\"SmartStadiumController\", [\"$scope\", function ($scope){\n  \n  var _this = this;\n  this.viewScreen = false;\n  this.ssActiveScreen;\n\n  this.viewHighlights = function() {\n    _this.ssActiveScreen = 'highlights';\n    _this.viewScreen = true;\n  };\n\n  this.viewRoster = function() {\n    _this.ssActiveScreen = 'roster';\n    _this.viewScreen = true;\n  };\n\n  this.viewStats = function() {\n    _this.ssActiveScreen = 'stats';\n    _this.viewScreen = true;\n  };\n\n  this.viewProfileStats = function() {\n    _this.ssActiveScreen = 'profileStats';\n    _this.viewScreen = true;\n  };\n\n  this.exitView = function() {\n    _this.viewScreen = false;\n  };\n\n}]);","angular.module('SocialModule')\n.directive('shareToChatDialog', function () {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=',\n      trustSource: '&',\n      shareSubmit: '&',\n      exitShare: '&',\n      highlight: '&',\n      unhighlight: '&'\n    },\n    templateUrl: 'partials/sharePreview.html'\n  };\n});","angular.module('PostModule')\n.directive('ngElementReady', [function() {\n  return {\n    priority: -1000,\n    restrict: \"A\",\n    link: function($scope, $element, $attributes) {\n        $scope.$eval($attributes.ngElementReady); // execute expression from attribute\n    }\n  };\n}]);","angular.module('NetworkModule')\n.factory('ReplyService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\", \n\tfunction (DateUtilityService,Bant,FDSUtility) {\n\tvar _postID;\n\tvar LIST_REPLIES_URI = \"/v1.0/comment/replies/list/\"\n\tvar POST_REPLY_URI=\"/v1.0/reply/create\";\n\t\n\tvar UPDATE_REPLY_URI = \"/v1.0/reply/content/update/\";\n\tvar DELETE_REPLY_URI = \"/v1.0/reply/delete/\";\n\t\t\n\tvar LIKE_REPLY_URI = \"/v1.0/reply/like/\";\n\tvar UNLIKE_REPLY_URI = \"/v1.0/reply/unlike/\";\n\t\n\tvar HIDE_REPLY_URI = \"/v1.0/reply/hide/\";\n\tvar UNHIDE_REPLY_URI = \"/v1.0/reply/unhide/\";\n\t\n\tvar FLAG_REPLY_URI = \"/v1.0/reply/flag/\";\n\tvar UNFLAG_REPLY_URI = \"/v1.0/reply/unflag/\";\n\t\n\tvar observerCallbacks = [];\n\tvar _replies = [];\n\tvar _topicIdFromReply;\n\tvar _currentCommentId;\n\n\tfunction setReplies(replyData) {\n\t\t_replies = [];\n\t\ttempReplyData = replyData.data.results;\n\t\tif(tempReplyData!= undefined && tempReplyData.length>0){\n\t\t\tvar len = tempReplyData.length;\n\t\t\t// console.log(\"replies #\"+ len);\n\t\t\tfor(i=0;i<len;i++){\n\t\t\t\tvar _replyObject = {};\n\t\t\t\t_replyObject = Bant.bant(tempReplyData[i])\n\t\t\t\tif(_replyObject.id != undefined )\n\t\t\t\t\t_replies.push(_replyObject);\n\t\t\t\t// console.log(\"Reply object\"+_replyObject);\n\t\t\t\t_topicIdFromReply = tempReplyData[i].topicId;;\n\t\t\t}\n\t\t\tnotifyObservers();\n\t\t}\n\t}\n\n\tfunction appendToReplies(postReplyData) {\n\t\tvar tempPostedReply = postReplyData.data;\n\t\tif(tempPostedReply!= undefined){\n\t\t\tconsole.log(\"appendToReplies :\"+tempPostedReply);\n\t\t\tconsole.log(\"Reply comment ID :\"+ tempPostedReply.commentId);\n\t\t\tconsole.log(\"Current comment ID :\"+ _currentCommentId);\n\t\t\tif(tempPostedReply.commentId == _currentCommentId){\n\t\t\tvar _replyObject = Bant.bant(tempPostedReply);\n\t\t\tif(_replyObject.id != undefined )\n\t\t\t\t_replies.push(_replyObject);\n\t\t\tnotifyObservers();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction updateReply(replyData){\n\t\t//if Replys ID exist, update it \n\t\t//else append to existing list\n\t\tvar replyObj = replyData.data;\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == replyObj.id){\n\t\t\t\t//update\n\t\t\t\t_replies[i] = Bant.bant(replyObj)\n\t\t\t\tconsole.log(\"Reply updated\");\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\tappendToReplies(replyData);\n\t\t// console.log(\"ReplyService update Reply\");\n\t\treturn 0;\n\t}\n\t\n\tfunction updateLocalData(newData){\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == newData.id){\n\t\t\t\t//update\n\t\t\t\t_replies[i] = newData;\n\t\t\t\tif(NETWORK_DEBUG)\n\t\t\t\t\tconsole.log(\"updated Data for id:\"+ _replies[i].id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction updateLikeReplyWithId(id, liked){\n\t\tif(NETWORK_DEBUG)\n\t\tconsole.log(\"updateLikeReplyWithId :\"+ id + \"   liked \"+ liked);\n\t\tif((id != undefined)){\n\t\t\tvar tempObject;\n\t\t\ttempObject = getReplyById(id);\n\t\t\ttempObject = Bant.updateBantLiked(tempObject, liked);\n\t\t\tupdateLocalData(tempObject);\n\n\t\t\tnotifyObservers();\n\t\t}\n\t\t\n\t}\n\n\tfunction removeReply(replyData){\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == replyData.id){\n\t\t\t\t//remove element\n\t\t\t\t_replies.splice(i,1);\n\t\t\t}\n\t\t}\n\n\t}\n\t\n\tfunction getReplyById(id){\n\t\tif(NETWORK_DEBUG) console.log(\"_replies :\"+ _replies.length);\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == id){\n\t\t\t\t//remove element\n\t\t\t\treturn _replies[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getCommentIdByReply(id){\n\t\tif(NETWORK_DEBUG) console.log(\"_replies :\"+ _replies.length);\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == id){\n\t\t\t\t//remove element\n\t\t\t\treturn _replies[i].commentId;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction replyGetRequest(uri){\n\t\treturn  varReplyParams = {\"rid\": \"reply\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"uri\": encodeURI(uri)};\n\t\t\n\t}\n\t\n\tfunction replyPostRequest(uri){\n\t\treturn varPostParams = {\n\t\t\t\t\"rid\": \"reply\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(uri)}\n\t\t\n\t}\n\t\n\tfunction getRepliesRequest(commentId){\n\t\t_currentCommentId = commentId;\n\t\tvar uri = LIST_REPLIES_URI + commentId;\n\t\treturn replyGetRequest (uri);\n\t\t\n\t}\n\n\tfunction getPostReplyRequest(topicId, commentId,replyData, replyId, isReplyToReply){\n\t\tvar targetType = \"comment\";\n\t\tvar targetId = commentId;\n\t\tif(isReplyToReply != undefined && isReplyToReply == true ){\n\t\t\ttargetType = \"reply\";\n\t\t\ttargetId = replyId;\n\t\t}\n\t\tconsole.log(\"Topicid : \"+topicId,\"commentid : \"+commentId,\"replydata : \"+replyData);\n\t\tvar createReplyParams = replyPostRequest(POST_REPLY_URI);\n\t\tcreateReplyParams.data = \t\n\t\t{\n\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\"content\": {\"sections\":[{\"type\":\"html\",\"html\":replyData}]},\n\t\t\t\t\"target\": {\n\t\t\t\t\t\"type\": targetType, // Target type: “comment” or “reply”.\n\t\t\t\t\t\"id\":targetId,  // Target bant ID of comment or reply.\n\t\t\t\t},\n\n\t\t\t\t\"topicId\": topicId,\n\t\t\t\t\"commentId\": commentId\n\t\t};\n\t\treturn createReplyParams;\n\t}\n\n\tfunction likeReplyRequest(id){\n\t\treturn  replyPostRequest(LIKE_REPLY_URI + id);\n\t}\n\n\tfunction unlikeReplyRequest(id){\n\t\treturn  replyPostRequest(UNLIKE_REPLY_URI + id);\n\t}\n\t\n\t\n\tfunction hideReplyRequest(id){\n\t\treturn  replyPostRequest(HIDE_REPLY_URI + id);\n\t}\n\n\tfunction unhideReplyRequest(id){\n\t\treturn  replyPostRequest(UNHIDE_REPLY_URI + id);\n\t}\n\t\n\tfunction flagReplyRequest(id){\n\t\treturn  replyPostRequest(FLAG_REPLY_URI + id +\"?reason=spam\");\n\t}\n\n\tfunction unflagReplyRequest(id){\n\t\treturn  replyPostRequest(UNFLAG_REPLY_URI + id);\n\t}\n\t\n\tfunction deleteReplyRequest(id){\n\t\treturn  replyPostRequest(DELETE_REPLY_URI + id);\n\t}\n\t\n\t//call this when you know '_replies' has been changed\n\tvar notifyObservers = function(){\n\t\tangular.forEach(observerCallbacks, function(callback){\n\t\t\tcallback();\n\t\t});\n\t};\n\t\n\tfunction registerObserverCallback(callback){\n\t\t//register an observer\n\t\t// console.log(\"reply callback registered\");\n\t\tvar callbackLength  = observerCallbacks.length;\n\t\twhile(callbackLength > 0){\n\t\t\tcallbackLength = observerCallbacks.length;\n\t\t\tobserverCallbacks.pop();\n\t\t}\n\t\tobserverCallbacks.push(callback);\n\t}\n\tfunction isReplyLiked(id){\n\t\treturn FDSUtility.isLikedById(_replies, id);\n\t}\n\t\n\tfunction updateReplyLocalData(uri,id){\n\t\tif(uri == LIKE_REPLY_URI+id){\n\t\t\tconsole.log(\"calling update like \");\n\t\t\tupdateLikeReplyWithId(id, true)\n\t\t}\n\t\telse if(uri == UNLIKE_REPLY_URI+id){\n\t\t\tupdateLikeReplyWithId(id, false)\n\t\t}\n\t\telse if(uri == DELETE_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.deleteById(_replies,id);\n\t\t\tnotifyObservers();\n\t\t\treturn 0;\n\t\t}\n\t\telse if(uri == FLAG_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.flagById(_replies, true);\n\t\t\t}\n\t\telse if(uri == UNFLAG_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.flagById(_replies, false);\n\t\t}\n\t\telse if(uri == HIDE_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.hideById(_replies, true);\n\t\t}\n\t\telse if(uri == UNHIDE_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.hideById(_replies, false);\n\t\t}\n\t}\n\n\t\n\treturn {\n\t\treplies: function(){return _replies },\n\t\tgetTopicIdFromReply: function(){return _topicIdFromReply; },\n\t\tgetPostId: function(){return _postID ;},\n\t\tsetPostId: function(postId){_postID = postId ;},\n\t\tsetReplies:setReplies,\n\t\tupdateReply:updateReply,\n\t\tappendToReplies:appendToReplies,\n\t\tupdateLikeReplyWithId:updateLikeReplyWithId,\n\t\tupdateReplyLocalData:updateReplyLocalData,\n\t\tremoveReply:removeReply,\n\t\tgetPostReplyRequest:getPostReplyRequest,\n\t\tlikeReplyRequest:likeReplyRequest,\n\t\tunlikeReplyRequest:unlikeReplyRequest,\n\t\tdeleteReplyRequest:deleteReplyRequest,\n\t\tflagReplyRequest:flagReplyRequest,\n\t\tregisterObserverCallback:registerObserverCallback,\n\t\tgetRepliesRequest:getRepliesRequest,\n\t\tisReplyLiked:isReplyLiked,\n\t\tgetCommentIdByReply:getCommentIdByReply\n\t};\n\n}]);","angular.module('SocialModule')\n.factory('SocialService', [\"Bant\", \n  function (Bant) {\n  var LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n  var observerCallbacks = [];\n  var _socialArray = [];\n  var _offset = 0;\n  var LIMIT = 20;\n\n\n  function setSocialData(socialData) {\n    _socialArray = [];\n    var tempData = socialData.data.results;\n    var len = tempData.length;\n\n    if (!!tempData && len > 0){\n      for (i = 0; i < len; i++){\n        var _socialObject = Bant.bant(tempData[i]);\n        if (!!_socialObject.id)\n          _socialArray.push(_socialObject);\n      }\n      _offset = socialData.data.nextOffset;\n      notifyObservers();\n    }\n  };\n\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n\n  function registerObserverCallback(callback){\n    // register an observer for provided feed\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  };\n\n  function getSocialDataRequest(id, offset){\n    var reqOffset = offset || _offset;\n    var request = {\n      \"rid\": \"social\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset)\n    };\n    console.log(\"Social Request: \", request);\n    return request;\n  };\n\n  return {\n    socialArray: function(){\n      return _socialArray;\n    },\n    resetSocialOffset: function(){\n      _offset = 0;\n    },\n    setSocialData: setSocialData,\n    getSocialDataRequest: getSocialDataRequest,\n    registerObserverCallback: registerObserverCallback\n  };\n\n}]);","angular.module('SocialModule')\n.factory('VideoService', [\"Bant\",\n\tfunction (Bant) {\n\tvar LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n\tvar observerCallbacks = [];\n\tvar _videoArray = [];\n\tvar _offset = 0;\n\tvar LIMIT = 10;\n\n\n\tfunction setVideoData(videoData) {\n\t\t_videoArray = [];\n\t\tvar tempData = videoData.data.results;\n\t\tvar len = tempData.length;\n\n\t\tif (!!tempData && len > 0){\n\t\t\tfor (i = 0; i < len; i++){\n\t\t\t\tvar _videoObject = Bant.bant(tempData[i]);\n\t\t\t\tif (!!_videoObject.id)\n\t\t\t\t\t_videoArray.push(_videoObject);\n\t\t\t}\n\t\t\t_offset = videoData.data.nextOffset;\n\t\t\tnotifyObservers();\n\t\t}\n\t}\n\n\n\t//call this when you know 'comments' has been changed\n\tvar notifyObservers = function(){\n\t\tangular.forEach(observerCallbacks, function(callback){\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tfunction registerObserverCallback(callback){\n\t\t//register an observer\n\t\tvar callbackLength  = observerCallbacks.length;\n\t\twhile(callbackLength > 0){\n\t\t\tcallbackLength = observerCallbacks.length;\n\t\t\tobserverCallbacks.pop();\n\t\t}\n\t\tobserverCallbacks.push(callback);\n\t}\n\n\tfunction getVideoDataRequest(id, offset){\n\t\tvar reqOffset = offset || _offset;\n\t\tvar request = {\n\t\t\t\"rid\": \"video\",\n\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\"method\": \"GET\",\n\t\t\t\"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset+\"&filter=video\")\n\t\t};\n\t\tconsole.log(\"Video Request: \", request);\n\t\treturn request;\n\t}\n\n\treturn {\n\t\tvideoArray: function(){\n\t\t\treturn _videoArray;\n\t\t},\n\t\tresetVideoOffset: function(){\n      _offset = 0;\n    },\n\t\tsetVideoData:setVideoData,\n\t\tgetVideoDataRequest:getVideoDataRequest,\n\t\tregisterObserverCallback:registerObserverCallback\n\t};\n\n}]);"],"sourceRoot":"/source/"}