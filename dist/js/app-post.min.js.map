{"version":3,"sources":["SocialController.js","PostController.js","SmartStadiumController.js","SocialDirectives.js","PostDirectives.js","SocialService.js","ReplyService.js"],"names":["angular","module","controller","$scope","$sce","$window","$stateParams","$http","SocialService","VideoService","networkService","ChannelService","TopicService","DateUtilityService","CommentService","updateFeed","tab","feedData","existingLength","tabArray","socialArray","_this","length","videoArray","len","i","tempItem","itemExists","j","id","postAuthorName","embedAuthor","name","postAuthorAlias","alias","postAuthorPhoto","photo","tweetId","tweet","postTimestamp","createdAt","providerName","embedProvider","html","embedText","retweetCount","metrics","likeCount","replyCount","embed","embedCreatedAt","providerLogo","provider","logo","embedType","embedUrl","embedPlayable","embedHtml","mediaType","embedMedia","mediaUrl","mediaThumbUrl","mediaAspectRatio","mediaAspectFeed","mediaAspectFull","mediaOrientation","push","NETWORK_DEBUG","console","log","updateTimestamps","getTimeSince","createdAtFull","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","initFeed","$parent","loadingSocial","switchTabs","resetSocialOffset","loadContent","resetVideoOffset","type","offset","channelID","getChannel","getChannelId","send","getSocialDataRequest","getVideoDataRequest","registerObserverCallback","clientHeight","document","documentElement","window","innerHeight","watchContentScroll","currentScroll","$","height","scrollTop","activeTab","on","retweetPost","method","url","headers","Access-Control-Allow-Origin","shareTweetToChat","embedShareContent","showShareDialog","isPeelUser","fullClient","css","top","submitSharedPost","commentData","embedData","topicID","postCommentRequestForShare","FB","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","fbAsyncInit","init","appId","xfbml","version","shareToFacebook","ui","href","response","exitShare","highlightPost","unhighlightPost","$timeout","$location","$sanitize","ReplyService","UserInfoService","URIHelper","SplashService","MUService","FileUploader","ForumStorage","UserAgentService","updateScore","leftTeam","getTeamA","rightTeam","getTeamB","score","getScore","undefined","leftTeamScore","points","rightTeamScore","gameStatus","getGameStatus","topicTitle","getTitle","gamePeriod","getGamePeriod","gameClock","getGameClock","updateCommentInReply","selectedComment","postID","getPostId","getCommentById","tempComment","author","likes","replies","isLiked","signal","like","topicId","isMyComment","isCurrentUser","shared","embedCreatedAtFull","embedLogo","playable","comment","updateReplies","repliesData","tempReply","isMyReply","trustAsHtml","justReplied","scrollTo","body","scrollHeight","isMobileUser","mobileBrowser","mobileUserAgent","getMobileUserAgent","getFromLocalStorage","initPage","pageClass","getTopicId","setPostId","backToTopicButtonTapped","HTML5_LOC","path","location","setPeelUI","userType","hidePeelSplash","isSmartStadiumUser","isMI16User","requestReplies","getRepliesRequest","getCommentByIdRequest","peelClose","peelWatchOnTV","ga","showId","getPeelShowId","showNewRepliesIndicator","newRepliesIndicatorTapped","checkDirectReply","directComment","focus","triggerRepliesKeyboard","secureLink","isGuestUser","initReplyPage","paddingTop","style","paddingBottom","$watch","newValue","oldValue","replyDivs","getElementsByClassName","div","thisReply","thisDiv","onclick","e","target","is","setToLocalStorage","each","magnificPopup","isUserLoggedIn","isSocketConnected","updateLikeComment","isCommentLiked","getUnlikeCommentRequest","getLikeCommentRequest","updateLikeReply","isReplyLiked","unlikeReplyRequest","likeReplyRequest","deleteReply","deleteReplyRequest","reportReplyAsSpam","flagReplyRequest","deleteComment","deleteCommentRequest","reload","reportCommentAsSpam","flagCommentRequest","imageClick","imageURL","event","cancelBubble","stopPropagation","open","items","callbacks","bind","preventDefault","close","unbind","notifyNewReplies","trustSrc","trustAsResourceUrl","addEventListener","xLinkActivated","viewScreen","ssActiveScreen","viewHighlights","viewRoster","viewStats","viewProfileStats","exitView","directive","restrict","scope","thisPost","trustSource","shareSubmit","highlight","unhighlight","templateUrl","priority","link","$element","$attributes","$eval","ngElementReady","factory","Bant","setSocialData","socialData","_socialArray","tempData","data","results","_socialObject","bant","_offset","nextOffset","notifyObservers","callback","callbackLength","observerCallbacks","pop","reqOffset","request","rid","timestamp","Date","getTime","uri","encodeURI","LIST_SOCIAL_URI","LIMIT","forEach","FDSUtility","setReplies","replyData","_replies","tempReplyData","_replyObject","_topicIdFromReply","appendToReplies","postReplyData","tempPostedReply","commentId","_currentCommentId","updateReply","replyObj","updateLocalData","newData","updateLikeReplyWithId","liked","tempObject","getReplyById","updateBantLiked","removeReply","splice","getCommentIdByReply","replyGetRequest","varReplyParams","replyPostRequest","varPostParams","LIST_REPLIES_URI","getPostReplyRequest","replyId","isReplyToReply","targetType","targetId","createReplyParams","POST_REPLY_URI","lang","content","sections","LIKE_REPLY_URI","UNLIKE_REPLY_URI","FLAG_REPLY_URI","DELETE_REPLY_URI","isLikedById","updateReplyLocalData","deleteById","flagById","UNFLAG_REPLY_URI","HIDE_REPLY_URI","hideById","UNHIDE_REPLY_URI","_postID","getTopicIdFromReply","postId"],"mappings":"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","file":"app-post.min.js","sourcesContent":["angular.module(\"SocialModule\", [\"NetworkModule\",\"ChannelModule\",\"TopicModule\"])\n.controller(\"SocialController\", [\"$scope\",\"$sce\",\"$window\",\"$stateParams\",\"$http\",\"SocialService\",\"VideoService\",\"networkService\",\"ChannelService\",\"TopicService\",\"DateUtilityService\",\"CommentService\",\n  function ($scope,$sce,$window,$stateParams,$http,SocialService,VideoService,networkService,ChannelService,TopicService,DateUtilityService,CommentService){\n    console.log(\"Social Control\");\n\n    var _this = this;\n    this.initFeed = function(tab) {\n      // Show Loading UI Once On Each Tab\n      if (tab === 'social'){\n        if (!_this.socialArray){\n          $scope.$parent.loadingSocial = true;\n        }\n        if (!!_this.socialArray){\n          updateTimestamps('social');\n        }\n        $scope.$parent.switchTabs('social');\n        SocialService.resetSocialOffset();\n        _this.loadContent('social');\n      } else {\n        if (!_this.videoArray){\n          $scope.$parent.loadingSocial = true;\n        }\n        if (!!_this.videoArray){\n          updateTimestamps('video');\n        }\n        $scope.$parent.switchTabs('video');\n        VideoService.resetVideoOffset();\n        _this.loadContent('video');\n      }\n    };\n\n\n    this.loadContent = function(type, offset) {\n      var channelID = ChannelService.getChannel()||TopicService.getChannelId();\n      if (type === 'social'){\n        console.log(\"LOADING SOCIAL: \", channelID);\n        networkService.send(SocialService.getSocialDataRequest(channelID,offset));\n      } else {\n        console.log(\"LOADING VIDEO: \", channelID);\n        networkService.send(VideoService.getVideoDataRequest(channelID,offset));\n      }\n    };\n\n    function updateFeed(tab) {\n\n      // Get Appropriate Content\n      var feedData,\n          existingLength,\n          tabArray;\n      if (tab === 'social'){\n        feedData = SocialService.socialArray();\n        _this.socialArray = _this.socialArray || [];\n        existingLength = _this.socialArray.length;\n        tabArray = _this.socialArray;\n      } else {\n        feedData = VideoService.videoArray();\n        _this.videoArray = _this.videoArray || [];\n        existingLength = _this.videoArray.length;\n        tabArray = _this.videoArray;\n      }\n\n      var len = feedData.length;\n      if (!!feedData && len > 0){\n        // console.log(\"Feed Data: \", feedData, \" Type: \", tab);\n\n        for (var i = 0; i < len; i++){\n          var tempItem = feedData[i];\n\n          // Check to See if Item Already Exists in Scope Array\n          var itemExists = false;\n          for (var j = 0; j < existingLength; j++){\n            if (tempItem.id === tabArray[j].id){\n              itemExists = true;\n            }\n          }\n          // If Exists, Skip To Next Item\n          if (itemExists){\n            continue;\n          }\n          \n          tempItem.postAuthorName = feedData[i].embedAuthor.name;\n          tempItem.postAuthorAlias = feedData[i].embedAuthor.alias;\n          tempItem.postAuthorPhoto = feedData[i].embedAuthor.photo;\n          tempItem.tweetId = feedData[i].tweet.id;\n          \n          tempItem.postTimestamp = feedData[i].createdAt;\n          tempItem.providerName = feedData[i].embedProvider.name;\n          tempItem.html = feedData[i].embedText;\n          tempItem.retweetCount = feedData[i].tweet.metrics.retweetCount;\n          tempItem.likeCount = feedData[i].tweet.metrics.likeCount;\n          tempItem.replyCount = feedData[i].tweet.metrics.replyCount;\n\n          // Embed Object for Sharing\n          tempItem.embed = feedData[i].embed;\n          tempItem.embed.embedCreatedAt = feedData[i].embedCreatedAt;\n          // tempItem.embed.embedCreatedAtFull = feedData[i].embedCreatedAtFull;\n\n          if (tempItem.providerName === \"Twitter\"){\n            tempItem.providerLogo = \"img/twitterLogo@2x.png\";\n            tempItem.embed.provider.logo = \"img/twitterLogo@2x.png\";\n          } else {\n            tempItem.providerLogo = feedData[i].embedProvider.logo;\n            tempItem.embed.provider.logo = feedData[i].embedProvider.logo;\n          }\n\n          tempItem.embedType = feedData[i].embedType;\n          tempItem.embedUrl = feedData[i].embedUrl;\n          if (feedData[i].embedType === \"link\" && feedData[i].embedPlayable === true){\n            tempItem.embedHtml = feedData[i].embedHtml;\n            tempItem.embedPlayable = true;\n          }\n          if (feedData[i].embedType === \"media\" || feedData[i].embedType === \"link\"){\n            tempItem.mediaType = feedData[i].embedMedia.mediaType;\n            tempItem.mediaUrl = feedData[i].embedMedia.mediaUrl;\n            tempItem.mediaThumbUrl = feedData[i].embedMedia.mediaThumbUrl;\n            tempItem.mediaAspectRatio = feedData[i].embedMedia.mediaAspectRatio;\n            tempItem.mediaAspectFeed = feedData[i].embedMedia.mediaAspectFeed;\n            tempItem.mediaAspectFull = feedData[i].embedMedia.mediaAspectFull;\n            tempItem.mediaOrientation = feedData[i].embedMedia.mediaOrientation;\n          }\n\n          if (tab === 'social'){\n            _this.socialArray.push(tempItem);\n          } else {\n            _this.videoArray.push(tempItem);\n          }\n          if (NETWORK_DEBUG && i === len - 1){\n            if (tab === 'social'){\n              console.log(\"Social Array: \", _this.socialArray);\n            } else {\n              console.log(\"Video Array: \", _this.videoArray);\n            }\n          }\n        }\n      }\n    };\n\n    function trustSrc(src) {\n      return $sce.trustAsResourceUrl(src);\n    };\n\n    function updateTimestamps(tab){\n      if (tab === 'social'){\n        for (var i = 0; i < _this.socialArray.length; i++){\n          _this.socialArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.socialArray[i].createdAtFull);\n        }\n      } else {\n        for (var i = 0; i < _this.videoArray.length; i++){\n          _this.videoArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.videoArray[i].createdAtFull);\n        }\n      }\n    };\n\n    SocialService.registerObserverCallback(function(){updateFeed('social');});\n    VideoService.registerObserverCallback(function(){updateFeed('video');});\n    \n    // Limit Rate that Function Can be Called\n    function debounce(func, wait, immediate) {\n      var timeout;\n      return function() {\n        var context = this, args = arguments;\n        var later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    function scrollAfterLoad(pos) {\n      setTimeout(function(){\n        $(document).scrollTop(pos);\n      }, 250);\n    };\n\n\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    var watchContentScroll = debounce(function() {\n      var currentScroll = $(document).height() - clientHeight - 50;\n      if ($(document).scrollTop() > currentScroll && currentScroll > 500) {\n        if ($scope.activeTab === 'social'){\n          // We are Loading More Content -->\n          // Base offset on Current Length of Scope Array\n          _this.loadContent('social',_this.socialArray.length);\n          // scrollAfterLoad(currentScroll + 90);\n        }\n        else if ($scope.activeTab === 'video'){\n          // We are Loading More Content -->\n          // Base offset on Current Length of Scope Array\n          _this.loadContent('video',_this.videoArray.length);\n          // scrollAfterLoad(currentScroll + 90);\n        }\n      }\n    }, 100);\n\n    $(document).on('scroll', watchContentScroll);\n\n    this.retweetPost = function(id) {\n      $http({\n        method: 'GET',\n        url: 'https://twitter.com/intent/retweet?tweet_id=' + id,\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    };\n\n    this.shareTweetToChat = function (embed) {\n      _this.embedShareContent = embed;\n      _this.showShareDialog = true;\n      console.log(\"Embed Object: \", embed);\n      if ($scope.$parent.isPeelUser){\n        var fullClient = document.documentElement.clientHeight - 54;\n        console.log(\"fullClient Height: \", fullClient);\n        setTimeout(function(){\n          $('#sharePreviewContainer').css({top: '54px'}).height(fullClient);\n        },25);\n      }\n    };\n\n    this.submitSharedPost = function (commentData,embedData) {\n      var topicID = $scope.$parent.topicID;\n      console.log(\"topicID From Parent: \", topicID);\n      networkService.send(CommentService.postCommentRequestForShare(topicID,commentData,embedData));\n      _this.showShareDialog = false;\n      $scope.$parent.switchTabs('chat');\n    };\n\n    console.log(\"WAY BEFOREEEE\");\n    if (!window.FB){\n      (function(d, s, id) {\n        console.log('loading FB SDK...');\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n    }\n\n    window.fbAsyncInit = function() {\n      console.log(\"BEFOREEEE\");\n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n      console.log(\"AFTERRRRR\");\n    };\n\n    this.shareToFacebook = function (id,embedUrl) {\n      FB.ui({\n        method: 'share',\n        href: embedUrl\n      }, function (response){\n        // Keep Track of User Shares to Facebook?\n        console.log(\"FB Response Post-Share: \", response);\n      });\n    };\n\n    this.exitShare = function () {\n      _this.showShareDialog = false;\n    };\n\n    this.highlightPost = function(){\n      $('#postShareContent').css('color','rgb(22,189,231)');\n    };\n\n    this.unhighlightPost = function(){\n      $('#postShareContent').css('color','rgb(211,214,215)');\n    };\n\n\n}]);\n\n","angular.module(\"PostModule\", [\"NetworkModule\", \"SplashModule\", \"MediaModule\", \"angularFileUpload\"])\n.controller(\"PostController\", [\"$scope\", \"$sce\", \"$timeout\", \"$window\", \"$location\",\"$sanitize\", \"$stateParams\", \"networkService\",\"ReplyService\", \"TopicService\",\"CommentService\", \"UserInfoService\",\"URIHelper\", \"SplashService\", \"MUService\", \"FileUploader\", \"ForumStorage\", \"UserAgentService\",\n\nfunction ($scope, $sce, $timeout, $window, $location, $sanitize, $stateParams, networkService, ReplyService, TopicService, CommentService, UserInfoService,URIHelper,SplashService,MUService,FileUploader,ForumStorage,UserAgentService)\n{\n\n  // Check For Mobile Browser\n  if (UserAgentService.isMobileUser()){\n    $scope.mobileBrowser = true;\n    $scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n    console.log(\"MOBILE USER AGENT: \", $scope.mobileUserAgent);\n  } else {\n    $scope.mobileBrowser = false;\n  }\n\n  // Retain & Handle State when Returning From External Links\n  if (ForumStorage.getFromLocalStorage('hasUserVisited') === true){\n    console.log(\"Checking For Existing Session\");\n    $scope.initPage();\n  }\n  var headerHeight;\n\n\t//ga('send', 'pageview', \"/comment/\"+$stateParams.postID);\n\t$scope.pageClass = 'page-post';\n\n\t$scope.postID = $stateParams.postID;\n\t$scope.topicId = TopicService.getTopicId();\n\t//$scope.replies = networkService.getRepliesForPostID();\n\t$scope.justReplied = false;\n\t\n\tReplyService.setPostId($stateParams.postID);\n\n\t$scope.backToTopicButtonTapped = function()\n\t{\n\t\tvar topicId = TopicService.getTopicId();\n\t\tif(topicId == undefined)\n\t\t\ttopicId = $scope.comment.topicId;\n    if (HTML5_LOC){\n\t\t  $location.path(\"/topic/\"+topicId);\n    } else {\n      $window.location = \"#/topic/\" + topicId;\n    }\n\t}\n\n\t$scope.setPeelUI = function(userType){\n\t\tconsole.log(\"Post User Type: \", userType);\n\t\tif (userType === 'peel') {\n\t\t\t$('#postSection').css('padding-top','54px');\n\t\t} else if (userType === 'email') {\n      $('#postSection').css('padding-top','54px');\n    } else if (userType === 'MI16') {\n      // $('#postSection').css('padding-top','54px');\n\t\t} else {\n      $('#postSection').css('padding-top','0px');\n    }\n\t}\n\n  if (UserInfoService.isPeelUser()){\n    $scope.isPeelUser = true;\n    SplashService.hidePeelSplash = true;\n    $scope.setPeelUI('peel');\n  }\n  else if (UserInfoService.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    $scope.setPeelUI('email');\n  }\n  else if (UserInfoService.isMI16User()){\n    $scope.isMI16User = true;\n  }\n\n\t$scope.requestReplies = function(){\n\t\t// console.log(\"PostController requestReplies Invoked\");\n\t\tnetworkService.send(ReplyService.getRepliesRequest($scope.postID));\n\t\tvar selectedComment = CommentService.getCommentById($scope.postID);\n\t\tif(selectedComment != undefined){\n\t\t\tupdateCommentInReply(selectedComment);\n\t\t}\n\t\telse{\n\t\t\tconsole.log(\"No data from comment service : TODO handle this with cookies\");\n\t\t\tnetworkService.send(CommentService.getCommentByIdRequest($scope.postID));\n\t\t}\n\t}\n\n\t$scope.peelClose = function()\n\t{\n\t\tconsole.log(\"peelClose()\");\n\t}\n\n\t$scope.peelWatchOnTV = function()\n\t{\n\t\tga('send', 'event', 'Peel', 'click', 'PeelWatchOnTV');\n\t\tconsole.log(\"peelWatchOnTV()\");\n\t\tvar showId = URIHelper.getPeelShowId();\n\t\tif(showId != undefined)\n\t\t\twindow.location = \"peel://tunein/\"+showId;\n\t\telse\n\t\t\twindow.location = \"peel://home\";\n\t}\n\n\t$scope.showNewRepliesIndicator = false;\n\t$scope.newRepliesIndicatorTapped = function()\n\t{\n\t\tconsole.log(\"newRepliesIndicatorTapped\");\n\t\t$scope.showNewRepliesIndicator = false;\n\t\tupdateReplies();\n\t\twindow.scrollTo(0,document.body.scrollHeight);\n\t}\n\n  $scope.checkDirectReply = function() {\n    if (TopicService.directComment){\n      $('#postCommentField').focus();\n      TopicService.directComment = false;\n    }\n  }\n\n\t$scope.triggerRepliesKeyboard = function() {\n    $('#postCommentField').focus();\n\t}\n\n  $scope.secureLink = function(url, id) {\n    if (UserInfoService.isGuestUser()){\n      return \"\";\n    } else {\n      return url + id;\n    }\n  };\n\t\n\t$scope.initReplyPage = function(){\n\t\t$scope.pageClass = 'page-post';\n\t\t$scope.paddingTop = \"20\";\n\t\t// $scope.pageStyle = {'padding-top': '10em'};\n\n\t\t$scope.requestReplies();\n    // $scope.loadingReply = true;\n\t\tvar replyPostHeader = $(\"#replyPost\").height();\n\t\t// console.log(\"height of repy header: \" + replyPostHeader);\n\t\tvar heightString = replyPostHeader + \"px\";\n\t\t// document.getElementById('postHeader').style.height = '3.5em';//heightString;\n\t\t// document.getElementById('postSection').style.paddingTop = '3.5em';\n\t  if ($scope.mobileBrowser === true){\n      document.getElementById('postSection').style.paddingBottom = \"42px\";\n    }\n\n\t\t$scope.$watch(\"replies\", function (newValue, oldValue)\n\t\t {\n  \t\t\t$timeout(function()\n  \t\t\t{\n  \t\t\t\t// setLinks();\n          var replyDivs = document.getElementsByClassName(\"postRow\");\n          for (div in replyDivs){\n            if (newValue != undefined){\n              var thisReply = newValue[div];\n              if (thisReply != undefined){\n                var thisDiv = replyDivs[div];\n                thisDiv.onclick = function(e) {\n                  if ($(e.target).is('a')){\n                    console.log(\"EXTERNAL LINK: \", e, this.id);\n                    ForumStorage.setToLocalStorage('replyBookmark', this.id);\n                    return;\n                  }\n                }\n              }\n            }\n          }\n    \t\t\t$('.commentsContainer').each(function()\n    \t\t\t{\n      \t\t\t\t$('.image-link').magnificPopup({\n        \t\t\t\ttype:'image'\n     \t\t\t\t});\n    \t\t\t});\n  \t\t\t});\n\t\t});\n\t}\n\n\tif(UserInfoService.isUserLoggedIn()){\n\t\tif(!networkService.isSocketConnected())\n\t\t\tnetworkService.init();\n\t\t$scope.initReplyPage();\n\t}\n\telse {\n\t\tif (HTML5_LOC){\n      $location.path(\"/login\");\n    } else {\n      $window.location = \"#/login\";\n    }\n\t}\n\n\t$scope.updateLikeComment = function(id) {\n\t\t// console.log(\"PostController updateLikeComment(\" + id + \")\");\n\t\tif(CommentService.isCommentLiked(id)){\n\t\t\tnetworkService.send(CommentService.getUnlikeCommentRequest(id));\n\t\t}\n\t\telse{\n\t\t\tnetworkService.send(CommentService.getLikeCommentRequest(id));\t\n\t\t}\n\t};\n\n\t$scope.updateLikeReply = function(id) {\n\t\t// console.log(\"PostController Like Reply\");\n\t\tif(ReplyService.isReplyLiked(id)){\n\t\t\tnetworkService.send(ReplyService.unlikeReplyRequest(id));\n\t\t}\n\t\telse{\n\t\t\tnetworkService.send(ReplyService.likeReplyRequest(id));\n\t\t}\n\t};\n\n\t$scope.deleteReply = function(id)\n\t{\n\t\tconsole.log(\"deleteReply(\" + id + \")\");\n\t\tnetworkService.send(ReplyService.deleteReplyRequest(id));\n\t}\n\n\t$scope.reportReplyAsSpam = function(id)\n\t{\n\t\tconsole.log(\"reportReplyAsSpam(\" + id + \")\");\n\t\tnetworkService.send(ReplyService.flagReplyRequest(id));\n\t}\n\n  $scope.deleteComment = function(id)\n  {\n    console.log(\"deleteComment(\" + id + \")\");\n    // $scope.innerButtonTapped = true;\n    networkService.send(CommentService.deleteCommentRequest(id));\n    if (HTML5_LOC){\n      $location.path(\"/topic/\" + $scope.topicId);\n    } else {\n      $window.location = \"#/topic/\" + $scope.topicId;\n    }\n    $window.location.reload();\n  }\n\n  $scope.reportCommentAsSpam = function(id)\n  {\n    console.log(\"reportCommentAsSpam(\" + id + \")\");\n    // $scope.innerButtonTapped = true;\n    networkService.send(CommentService.flagCommentRequest(id)); \n  }\n\n\t$scope.imageClick = function(imageURL)\n\t{\n\t\tevent.cancelBubble = true;\n\t   if(event.stopPropagation) event.stopPropagation();\n\n\t\t$.magnificPopup.open({\n                    items: {\n                    \ttype:'image',\n                    \tsrc: imageURL,\n                },\n                type: 'inline',\n                callbacks:\n                {\n\t\t\t\t    open: function()\n\t\t\t\t    {\n\t\t\t\t      console.log(\"popup opened\");\n\t\t\t\t      $('body').bind('touchmove', function(e){e.preventDefault()})\n\t\t\t\t    },\n\t\t\t\t    close: function()\n\t\t\t\t    {\n\t\t\t\t      console.log(\"popup closed\");\n\t\t\t\t      $('body').unbind('touchmove')\n\t\t\t\t    }\n\t\t\t\t    // e.t.c.\n\t\t\t\t}\n            });\n\t}\n\n\tfunction updateScore(){\n\t\t//Score update here\n\t\t$scope.leftTeam = TopicService.getTeamA();\n\t\t$scope.rightTeam = TopicService.getTeamB();\n\t\tvar score = TopicService.getScore();\n\t\tif(score != undefined){\n\t\t\t$scope.leftTeamScore = score.points[0];\n\t\t\t$scope.rightTeamScore = score.points[1];\n\t\t}\n\t\t$scope.gameStatus = TopicService.getGameStatus();\n\t\t$scope.topicTitle = TopicService.getTitle();\n\t\tif($scope.gameStatus == \"live\") {\n\t\t\t$scope.gamePeriod = TopicService.getGamePeriod();\n\t\t\t$scope.gameClock = TopicService.getGameClock();\n\t\t}\n\t\tconsole.log(\"Scores updated in replies\");\n\t}\n\n\t function updateCommentInReply(selectedComment){\n\t\tconsole.log(\"Already Had PostID: \", $scope.postID);\n    if (!$scope.postID){\n      $scope.postID = ReplyService.getPostId();\n      console.log(\"Regenerated PostID: \", $scope.postID);\n    }\n    if(selectedComment == undefined){\n\t\t\tselectedComment = CommentService.getCommentById($scope.postID);\n\t\t}\n\t\tif(selectedComment != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"Updated comment in reply triggered\" ); \n\t\t\tvar tempComment = {};\n\t\t\ttempComment = selectedComment;\n\t\t\ttempComment.postAuthorName = selectedComment.author.name;\n\t\t\ttempComment.postAuthorPhoto = selectedComment.author.photo;\n\n\t\t\ttempComment.postTimestamp = selectedComment.createdAt;\n\t\t\ttempComment.likeCount = selectedComment.metrics.likes;\n\t\t\ttempComment.replyCount = selectedComment.metrics.replies;\n\t\t\ttempComment.mediaAspectFeed = selectedComment.mediaAspectFeed;\n\t\t\ttempComment.isLiked = selectedComment.signal.like;\n\t\t\ttempComment.topicId = selectedComment.topicId;\n      tempComment.isMyComment = UserInfoService.isCurrentUser(selectedComment.author.id);\n\n      if (tempComment.type === 'media'){\n          tempComment.mediaUrl = selectedComment.mediaUrl;\n          // tempComment.trustedMediaUrl = $scope.trustSrc(tempComment.mediaUrl);\n          tempComment.mediaAspectFeed = selectedComment.mediaAspectFeed;\n          tempComment.mediaAspectFull = selectedComment.mediaAspectFull;\n          tempComment.mediaAspectRatio = selectedComment.mediaAspectRatio;\n          tempComment.mediaOrientation = selectedComment.mediaOrientation;\n          tempComment.mediaThumbUrl = selectedComment.mediaThumbUrl;\n        }\n\n      if (tempComment.type === 'embed'){\n        tempComment.shared = true;\n        tempComment.embed = selectedComment.embed;\n        tempComment.embed.embedCreatedAt = selectedComment.embedCreatedAt;\n        tempComment.embed.embedCreatedAtFull = selectedComment.embedCreatedAtFull;\n\n        if (tempComment.embedType === 'media'){\n          tempComment.mediaUrl = selectedComment.embedMedia.mediaUrl;\n          tempComment.mediaThumbUrl = selectedComment.embedMedia.mediaThumbUrl;\n          tempComment.mediaAspectFeed = selectedComment.embedMedia.mediaAspectFeed;\n          tempComment.mediaAspectFull = selectedComment.embedMedia.mediaAspectFull;\n          tempComment.mediaAspectRatio = selectedComment.embedMedia.mediaAspectRatio;\n          tempComment.mediaOrientation = selectedComment.embedMedia.mediaOrientation;\n        }\n\n        if (tempComment.providerName === \"Twitter\"){\n          tempComment.embed.embedLogo = \"img/twitterLogo@2x.png\";\n        } else {\n          tempComment.embed.embedLogo = selectedComment.embed.provider.logo;\n        }\n\n        if (selectedComment.embed.type === 'link' && selectedComment.embed.playable === true){\n          tempComment.embedHtml = selectedComment.embedHtml;\n        }\n      }\n\n\t\t\t$scope.comment = tempComment;\n\t\t}\n    // console.log(\"DIRECT COMMENT? \", TopicService.directComment);\n    // if(TopicService.directComment === true){\n    //   setTimeout(function(){$scope.triggerRepliesKeyboard();},1000);\n    //   TopicService.directComment = false;\n    // }\n\t}\n\n  // $scope.hideLoading = function(){\n  //   console.log(\"HIDING LOAD\");\n  //   $scope.loadingReply = false;\n  // };\n\n\tfunction updateReplies(){\n\t\t//TODO: check with ahmed, these values could be individual scope var.\n\t\tvar repliesData = ReplyService.replies();\n\t\tvar len = repliesData.length;\n\n\t\t$scope.replies = [];\n\n\t\tfor(i=0;i<len;i++){\n\t\t\tvar tempReply = {};\n\t\t\ttempReply = repliesData[i];\n\t\t\ttempReply.postAuthorName = repliesData[i].author.name;\n\t\t\ttempReply.postAuthorPhoto = repliesData[i].author.photo;\n\t\t\ttempReply.isMyReply = UserInfoService.isCurrentUser(repliesData[i].author.id);\n\n\t\t\ttempReply.postTimestamp = repliesData[i].createdAt;\n\t\t\ttempReply.likeCount = repliesData[i].metrics.likes;\n\t\t\ttempReply.replyCount = repliesData[i].metrics.replies;\n\t\t\ttempReply.mediaAspectFeed = repliesData[i].mediaAspectFeed;\n\t\t\ttempReply.isLiked = repliesData[i].signal.like;\n\t\t\t\n      if (tempReply.type === 'media'){\n          tempReply.mediaUrl = repliesData[i].mediaUrl;\n          // tempReply.trustedMediaUrl = $scope.trustSrc(tempReply.mediaUrl);\n          tempReply.mediaAspectFeed = repliesData[i].mediaAspectFeed;\n          tempReply.mediaAspectFull = repliesData[i].mediaAspectFull;\n          tempReply.mediaAspectRatio = repliesData[i].mediaAspectRatio;\n          tempReply.mediaOrientation = repliesData[i].mediaOrientation;\n          tempReply.mediaThumbUrl = repliesData[i].mediaThumbUrl;\n        }\n      if (tempReply.type === 'embed'){\n        tempReply.shared = true;\n        tempReply.embed = repliesData[i].embed;\n        tempReply.embed.embedCreatedAt = repliesData[i].embedCreatedAt;\n        tempReply.embed.embedCreatedAtFull = repliesData[i].embedCreatedAtFull;\n\n        if (tempReply.providerName === \"Twitter\"){\n          tempReply.embed.embedLogo = \"img/twitterLogo@2x.png\";\n        } else {\n          tempReply.embed.embedLogo = repliesData[i].embed.provider.logo;\n        }\n\n        if (repliesData[i].embed.type === 'link' && repliesData[i].embed.playable === true){\n          tempReply.embed.embedHtml = $sce.trustAsHtml(repliesData[i].embedHtml);\n        }\n      }\n\n      $scope.replies.push(tempReply);\n\n\t\t\t// console.log(i +\" : updated replies html : \" +$scope.replies[i].html);\n\t\t\t// console.log(i +\" : updated replies author name: \" +$scope.replies[i].postAuthorName);\n\t\t\t// console.log(i +\" : updated replies author photo: \" +$scope.replies[i].postAuthorPhoto);\n\n\t\t\tif($scope.replies[i].type == \"media\"){\n\t\t\t\t// console.log(i +\" : updated replies media : \" +$scope.replies[i].mediaUrl);\n\t\t\t\t// console.log(i +\" : updated replies media : \" +$scope.replies[i].mediaAspectFeed);\n\t\t\t}\n\t\t\t//console.log(i +\" : updated replies likecount : \" +$scope.replies[i].likeCount);\n\n\t\t}\n  //   console.log(\"DIRECT COMMENT? \", TopicService.directComment);\n\t\t// if(TopicService.directComment === true)\n\t\t// {\n\t\t// \t$scope.triggerRepliesKeyboard();\n\t\t// \tTopicService.directComment = false;\n\t\t// }\n\n\t\tif($scope.justReplied == true)\n\t\t{\n\t\t\tsetTimeout(function()\n\t\t\t\t{ \n\t\t\t\t\tconsole.log(\"Scroll to last reply\");\n\t\t\t\t\twindow.scrollTo(0,document.body.scrollHeight);\n\t\t\t\t\t$scope.justReplied = false;\n\t\t\t\t}, 1000);\n\t\t}\n\t}\n\t \n\t var notifyNewReplies = function(){\n\n\t\t if($scope.replies == undefined)\n\t\t {\n\t\t\t updateReplies();\n\t\t }\n\t\t else {\n\t\t\t var repliesData = ReplyService.replies();\n\t\t\t var len = repliesData.length;\n\t\t\t if($scope.replies.length < len ){\n\t\t\t\t //console.log(\"newReplies triggered\");\n\t\t\t\t if(!UserInfoService.isCurrentUser(repliesData[len-1].author.id)){\n\t\t\t\t\t $scope.showNewRepliesIndicator = true;\n\t\t\t\t }\n\t\t\t\t else{\n\t\t\t\t\t updateReplies();\n\t\t\t\t }\n\t\t\t }\n\t\t\t else{\n\t\t\t\t updateReplies();\n\t\t\t }\n\n\t\t }\n\t }\n\t \n\tReplyService.registerObserverCallback(notifyNewReplies);\n\tTopicService.registerObserverCallback(updateScore);\n\tCommentService.registerObserverCallback(updateCommentInReply);\n\n\t$scope.trustSrc = function(src)\n\t{\n    \treturn $sce.trustAsResourceUrl(src);\n  \t}\n\n  $window.addEventListener(\"beforeunload\", function(){\n    console.log(\"Before Unload\");\n    ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n  });\n\n  $scope.xLinkActivated = false;\n\n\n}]);\n\n","angular.module(\"SmartStadiumModule\", [])\n.controller(\"SmartStadiumController\", [\"$scope\", function ($scope){\n  \n  var _this = this;\n  this.viewScreen = false;\n  this.ssActiveScreen;\n\n  this.viewHighlights = function() {\n    _this.ssActiveScreen = 'highlights';\n    _this.viewScreen = true;\n  };\n\n  this.viewRoster = function() {\n    _this.ssActiveScreen = 'roster';\n    _this.viewScreen = true;\n  };\n\n  this.viewStats = function() {\n    _this.ssActiveScreen = 'stats';\n    _this.viewScreen = true;\n  };\n\n  this.viewProfileStats = function() {\n    _this.ssActiveScreen = 'profileStats';\n    _this.viewScreen = true;\n  };\n\n  this.exitView = function() {\n    _this.viewScreen = false;\n  };\n\n}]);","angular.module('SocialModule')\n.directive('shareToChatDialog', function () {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=',\n      trustSource: '&',\n      shareSubmit: '&',\n      exitShare: '&',\n      highlight: '&',\n      unhighlight: '&'\n    },\n    templateUrl: 'partials/sharePreview.html'\n  };\n});","angular.module('PostModule')\n.directive('ngElementReady', [function() {\n  return {\n    priority: -1000,\n    restrict: \"A\",\n    link: function($scope, $element, $attributes) {\n        $scope.$eval($attributes.ngElementReady); // execute expression from attribute\n    }\n  };\n}]);","angular.module('SocialModule')\n.factory('SocialService', [\"Bant\", \n  function (Bant) {\n  var LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n  var observerCallbacks = [];\n  var _socialArray = [];\n  var _offset = 0;\n  var LIMIT = 20;\n\n\n  function setSocialData(socialData) {\n    _socialArray = [];\n    var tempData = socialData.data.results;\n    var len = tempData.length;\n\n    if (!!tempData && len > 0){\n      for (i = 0; i < len; i++){\n        var _socialObject = Bant.bant(tempData[i]);\n        if (!!_socialObject.id)\n          _socialArray.push(_socialObject);\n      }\n      _offset = socialData.data.nextOffset;\n      notifyObservers();\n    }\n  };\n\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n\n  function registerObserverCallback(callback){\n    // register an observer for provided feed\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  };\n\n  function getSocialDataRequest(id, offset){\n    var reqOffset = offset || _offset;\n    var request = {\n      \"rid\": \"social\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset)\n    };\n    console.log(\"Social Request: \", request);\n    return request;\n  };\n\n  return {\n    socialArray: function(){\n      return _socialArray;\n    },\n    resetSocialOffset: function(){\n      _offset = 0;\n    },\n    setSocialData: setSocialData,\n    getSocialDataRequest: getSocialDataRequest,\n    registerObserverCallback: registerObserverCallback\n  };\n\n}]);","angular.module('NetworkModule')\n.factory('ReplyService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\", \n\tfunction (DateUtilityService,Bant,FDSUtility) {\n\tvar _postID;\n\tvar LIST_REPLIES_URI = \"/v1.0/comment/replies/list/\"\n\tvar POST_REPLY_URI=\"/v1.0/reply/create\";\n\t\n\tvar UPDATE_REPLY_URI = \"/v1.0/reply/content/update/\";\n\tvar DELETE_REPLY_URI = \"/v1.0/reply/delete/\";\n\t\t\n\tvar LIKE_REPLY_URI = \"/v1.0/reply/like/\";\n\tvar UNLIKE_REPLY_URI = \"/v1.0/reply/unlike/\";\n\t\n\tvar HIDE_REPLY_URI = \"/v1.0/reply/hide/\";\n\tvar UNHIDE_REPLY_URI = \"/v1.0/reply/unhide/\";\n\t\n\tvar FLAG_REPLY_URI = \"/v1.0/reply/flag/\";\n\tvar UNFLAG_REPLY_URI = \"/v1.0/reply/unflag/\";\n\t\n\tvar observerCallbacks = [];\n\tvar _replies = [];\n\tvar _topicIdFromReply;\n\tvar _currentCommentId;\n\n\tfunction setReplies(replyData) {\n\t\t_replies = [];\n\t\ttempReplyData = replyData.data.results;\n\t\tif(tempReplyData!= undefined && tempReplyData.length>0){\n\t\t\tvar len = tempReplyData.length;\n\t\t\t// console.log(\"replies #\"+ len);\n\t\t\tfor(i=0;i<len;i++){\n\t\t\t\tvar _replyObject = {};\n\t\t\t\t_replyObject = Bant.bant(tempReplyData[i])\n\t\t\t\tif(_replyObject.id != undefined )\n\t\t\t\t\t_replies.push(_replyObject);\n\t\t\t\t// console.log(\"Reply object\"+_replyObject);\n\t\t\t\t_topicIdFromReply = tempReplyData[i].topicId;;\n\t\t\t}\n\t\t\tnotifyObservers();\n\t\t}\n\t}\n\n\tfunction appendToReplies(postReplyData) {\n\t\tvar tempPostedReply = postReplyData.data;\n\t\tif(tempPostedReply!= undefined){\n\t\t\tconsole.log(\"appendToReplies :\"+tempPostedReply);\n\t\t\tconsole.log(\"Reply comment ID :\"+ tempPostedReply.commentId);\n\t\t\tconsole.log(\"Current comment ID :\"+ _currentCommentId);\n\t\t\tif(tempPostedReply.commentId == _currentCommentId){\n\t\t\tvar _replyObject = Bant.bant(tempPostedReply);\n\t\t\tif(_replyObject.id != undefined )\n\t\t\t\t_replies.push(_replyObject);\n\t\t\tnotifyObservers();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction updateReply(replyData){\n\t\t//if Replys ID exist, update it \n\t\t//else append to existing list\n\t\tvar replyObj = replyData.data;\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == replyObj.id){\n\t\t\t\t//update\n\t\t\t\t_replies[i] = Bant.bant(replyObj)\n\t\t\t\tconsole.log(\"Reply updated\");\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\tappendToReplies(replyData);\n\t\t// console.log(\"ReplyService update Reply\");\n\t\treturn 0;\n\t}\n\t\n\tfunction updateLocalData(newData){\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == newData.id){\n\t\t\t\t//update\n\t\t\t\t_replies[i] = newData;\n\t\t\t\tif(NETWORK_DEBUG)\n\t\t\t\t\tconsole.log(\"updated Data for id:\"+ _replies[i].id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction updateLikeReplyWithId(id, liked){\n\t\tif(NETWORK_DEBUG)\n\t\tconsole.log(\"updateLikeReplyWithId :\"+ id + \"   liked \"+ liked);\n\t\tif((id != undefined)){\n\t\t\tvar tempObject;\n\t\t\ttempObject = getReplyById(id);\n\t\t\ttempObject = Bant.updateBantLiked(tempObject, liked);\n\t\t\tupdateLocalData(tempObject);\n\n\t\t\tnotifyObservers();\n\t\t}\n\t\t\n\t}\n\n\tfunction removeReply(replyData){\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == replyData.id){\n\t\t\t\t//remove element\n\t\t\t\t_replies.splice(i,1);\n\t\t\t}\n\t\t}\n\n\t}\n\t\n\tfunction getReplyById(id){\n\t\tif(NETWORK_DEBUG) console.log(\"_replies :\"+ _replies.length);\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == id){\n\t\t\t\t//remove element\n\t\t\t\treturn _replies[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getCommentIdByReply(id){\n\t\tif(NETWORK_DEBUG) console.log(\"_replies :\"+ _replies.length);\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == id){\n\t\t\t\t//remove element\n\t\t\t\treturn _replies[i].commentId;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction replyGetRequest(uri){\n\t\treturn  varReplyParams = {\"rid\": \"reply\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"uri\": encodeURI(uri)};\n\t\t\n\t}\n\t\n\tfunction replyPostRequest(uri){\n\t\treturn varPostParams = {\n\t\t\t\t\"rid\": \"reply\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(uri)}\n\t\t\n\t}\n\t\n\tfunction getRepliesRequest(commentId){\n\t\t_currentCommentId = commentId;\n\t\tvar uri = LIST_REPLIES_URI + commentId;\n\t\treturn replyGetRequest (uri);\n\t\t\n\t}\n\n\tfunction getPostReplyRequest(topicId, commentId,replyData, replyId, isReplyToReply){\n\t\tvar targetType = \"comment\";\n\t\tvar targetId = commentId;\n\t\tif(isReplyToReply != undefined && isReplyToReply == true ){\n\t\t\ttargetType = \"reply\";\n\t\t\ttargetId = replyId;\n\t\t}\n\t\tconsole.log(\"Topicid : \"+topicId,\"commentid : \"+commentId,\"replydata : \"+replyData);\n\t\tvar createReplyParams = replyPostRequest(POST_REPLY_URI);\n\t\tcreateReplyParams.data = \t\n\t\t{\n\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\"content\": {\"sections\":[{\"type\":\"html\",\"html\":replyData}]},\n\t\t\t\t\"target\": {\n\t\t\t\t\t\"type\": targetType, // Target type: “comment” or “reply”.\n\t\t\t\t\t\"id\":targetId,  // Target bant ID of comment or reply.\n\t\t\t\t},\n\n\t\t\t\t\"topicId\": topicId,\n\t\t\t\t\"commentId\": commentId\n\t\t};\n\t\treturn createReplyParams;\n\t}\n\n\tfunction likeReplyRequest(id){\n\t\treturn  replyPostRequest(LIKE_REPLY_URI + id);\n\t}\n\n\tfunction unlikeReplyRequest(id){\n\t\treturn  replyPostRequest(UNLIKE_REPLY_URI + id);\n\t}\n\t\n\t\n\tfunction hideReplyRequest(id){\n\t\treturn  replyPostRequest(HIDE_REPLY_URI + id);\n\t}\n\n\tfunction unhideReplyRequest(id){\n\t\treturn  replyPostRequest(UNHIDE_REPLY_URI + id);\n\t}\n\t\n\tfunction flagReplyRequest(id){\n\t\treturn  replyPostRequest(FLAG_REPLY_URI + id +\"?reason=spam\");\n\t}\n\n\tfunction unflagReplyRequest(id){\n\t\treturn  replyPostRequest(UNFLAG_REPLY_URI + id);\n\t}\n\t\n\tfunction deleteReplyRequest(id){\n\t\treturn  replyPostRequest(DELETE_REPLY_URI + id);\n\t}\n\t\n\t//call this when you know '_replies' has been changed\n\tvar notifyObservers = function(){\n\t\tangular.forEach(observerCallbacks, function(callback){\n\t\t\tcallback();\n\t\t});\n\t};\n\t\n\tfunction registerObserverCallback(callback){\n\t\t//register an observer\n\t\t// console.log(\"reply callback registered\");\n\t\tvar callbackLength  = observerCallbacks.length;\n\t\twhile(callbackLength > 0){\n\t\t\tcallbackLength = observerCallbacks.length;\n\t\t\tobserverCallbacks.pop();\n\t\t}\n\t\tobserverCallbacks.push(callback);\n\t}\n\tfunction isReplyLiked(id){\n\t\treturn FDSUtility.isLikedById(_replies, id);\n\t}\n\t\n\tfunction updateReplyLocalData(uri,id){\n\t\tif(uri == LIKE_REPLY_URI+id){\n\t\t\tconsole.log(\"calling update like \");\n\t\t\tupdateLikeReplyWithId(id, true)\n\t\t}\n\t\telse if(uri == UNLIKE_REPLY_URI+id){\n\t\t\tupdateLikeReplyWithId(id, false)\n\t\t}\n\t\telse if(uri == DELETE_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.deleteById(_replies,id);\n\t\t\tnotifyObservers();\n\t\t\treturn 0;\n\t\t}\n\t\telse if(uri == FLAG_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.flagById(_replies, true);\n\t\t\t}\n\t\telse if(uri == UNFLAG_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.flagById(_replies, false);\n\t\t}\n\t\telse if(uri == HIDE_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.hideById(_replies, true);\n\t\t}\n\t\telse if(uri == UNHIDE_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.hideById(_replies, false);\n\t\t}\n\t}\n\n\t\n\treturn {\n\t\treplies: function(){return _replies },\n\t\tgetTopicIdFromReply: function(){return _topicIdFromReply; },\n\t\tgetPostId: function(){return _postID ;},\n\t\tsetPostId: function(postId){_postID = postId ;},\n\t\tsetReplies:setReplies,\n\t\tupdateReply:updateReply,\n\t\tappendToReplies:appendToReplies,\n\t\tupdateLikeReplyWithId:updateLikeReplyWithId,\n\t\tupdateReplyLocalData:updateReplyLocalData,\n\t\tremoveReply:removeReply,\n\t\tgetPostReplyRequest:getPostReplyRequest,\n\t\tlikeReplyRequest:likeReplyRequest,\n\t\tunlikeReplyRequest:unlikeReplyRequest,\n\t\tdeleteReplyRequest:deleteReplyRequest,\n\t\tflagReplyRequest:flagReplyRequest,\n\t\tregisterObserverCallback:registerObserverCallback,\n\t\tgetRepliesRequest:getRepliesRequest,\n\t\tisReplyLiked:isReplyLiked,\n\t\tgetCommentIdByReply:getCommentIdByReply\n\t};\n\n}]);"],"sourceRoot":"/source/"}