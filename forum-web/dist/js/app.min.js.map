{"version":3,"sources":["Forum.js","ChannelController.js","AuthController.js","TopicController.js","SocialController.js","UserInputController.js","UserAgentService.js","NetworkService.js","ForumStorage.js","ForumDeviceInfo.js","URIHelper.js","ChannelService.js","TopicDirectives.js","EmbedPlayer.js","ImageControl.js","DataService.js","TopicService.js","SplashService.js","CommentService.js","VideoService.js","DateUtilityService.js","Bant.js","UserInfoService.js","AuthService.js","StaticData.js","ForumDSUtility.js","MediaUploadService.js"],"names":["angular","module","config","$routeProvider","$locationProvider","when","templateUrl","controller","otherwise","redirectTo","window","history","pushState","HTML5_LOC","html5Mode","enabled","filter","$filter","$sce","text","target","replacedText","targetAttr","isDefined","replacePattern1","replace","replacePattern2","trustAsHtml","directive","priority","restrict","link","$scope","$element","$attributes","$eval","ngElementReady","$window","$location","$routeParams","networkService","ChannelService","TopicService","URIHelper","AuthService","UserInfoService","setChannel","channelID","location","href","indexOf","urlQueryStr","slice","GEN_DEBUG","console","log","init","send","getLiveGameTopic","updateTopic","id","getLiveTopicId","undefined","ga","path","search","registerObserverCallback","isUserLoggedIn","NETWORK_DEBUG","isSmartStadiumUser","loginWithEmail","isTechMUser","isPeelUser","loginWithPeel","loginAsGuest","$http","ReplyService","ForumDeviceInfo","showSpinner","showFacebookButton","techMIUser","facebookUser","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","loginToFacebook","techMLogin","name","email","isValid","submitted","fbAsyncInit","FB","appId","xfbml","version","getLoginStatus","response","status","registerParams","setRegistrationParams","authResponse","registerUser","$sanitize","$timeout","CommentService","SplashService","MUService","ForumStorage","FileUploader","SocialService","UserAgentService","getTopic","topicType","getTopicType","isWatchingTopic","getFollowChannelRequest","watchTopicRequest","topicID","setScoreCardUI","getTeamA","leftTeam","rightTeam","getTeamB","score","getScore","leftTeamScore","points","rightTeamScore","gameStatus","getGameStatus","gamePeriod","getGamePeriod","gameClock","getGameClock","gameScheduledTime","getGameTime","allScoresTitle","getScoresTitle","allScoresURL","getScoresLink","left","$","right","css","pColor","topicTitle","getTitle","thisTopic","topicDescHtml","html","type","topicMediaUrl","mediaUrl","topicMediaAspectFeed","mediaAspectFull","createdAt","getTimeCreatedAt","liked","getLiked","metrics","getMetrics","likesCount","likes","commentsCount","comments","loadingChat","tab","getActiveTab","$broadcast","switchTabs","updateComments","commentsdata","length","lastComment","len","commentsArray","i","tempComment","postAuthorName","author","postAuthorPhoto","photo","isMyComment","isCurrentUser","likeCount","replyCount","replies","postTimestamp","mediaAspectFeed","mediaAspectRatio","mediaOrientation","mediaThumbUrl","isLiked","signal","like","shared","embed","embedCreatedAt","embedCreatedAtFull","embedType","embedMedia","providerName","embedLogo","provider","logo","playable","embedHtml","push","sessionTime","time","isMobileUser","mobileBrowser","mobileUserAgent","getMobileUserAgent","getChannel","setTopicId","innerButtonTapped","hideSSSplash","setToLocalStorage","continueToExperience","isMI16User","hasUserVisited","isSuperBowl","SBSplash","hidePeelSplash","env","setPeelSplash","setSSSplash","t","activeTab","addClass","removeClass","scrollTop","loadRemainingComments","loadedComments","getCommentsRequest","setLoadedComments","loadedAllComments","loadRemainingCommentsTimeout","getTopicRequest","setPeelUI","hideLoading","loadingSocial","initPage","pageClass","showNewCommentsIndicator","style","paddingBottom","setLinksOnComments","postDivs","getElementsByClassName","div","thisDiv","onclick","e","is","thisPost","this","$$phase","$apply","isSocketConnected","peelClose","peelWatchOnTV","showId","getPeelShowId","newCommentsIndicatorTapped","imageClick","imageURL","event","cancelBubble","stopPropagation","magnificPopup","open","items","callbacks","bind","preventDefault","close","unbind","moreButtonTapped","updateLikeTopic","getUnlikeTopicRequest","getLikeTopicRequest","commentOnTopic","focus","updateLikeComment","isCommentLiked","getUnlikeCommentRequest","getLikeCommentRequest","deleteComment","deleteCommentRequest","reportCommentAsSpam","flagCommentRequest","goToRepliesWithKeyboardTriggered","directComment","secureLink","url","isGuestUser","notifyNewComments","pinIndex","getNumPinComments","trustSrc","trustAsResourceUrl","addEventListener","xLinkActivated","_channelId","tabs","tabContainer","tabsTop","tabsHeight","inputHeight","clientHeight","docHeight","headerHeight","docVarsSet","setDocVars","offset","top","height","documentElement","fixed","watchScroll","off","on","VideoService","DateUtilityService","updateFeed","feedData","existingLength","tabArray","socialArray","_this","videoArray","tempItem","itemExists","j","embedAuthor","postAuthorAlias","alias","tweetId","tweet","embedProvider","embedText","retweetCount","providerLogo","embedUrl","embedPlayable","mediaType","updateTimestamps","getTimeSince","createdAtFull","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","initFeed","$parent","resetSocialOffset","loadContent","resetVideoOffset","$on","getChannelId","getSocialDataRequest","getVideoDataRequest","innerHeight","watchContentScroll","currentScroll","retweetPost","method","headers","Access-Control-Allow-Origin","shareTweetToChat","embedShareContent","showShareDialog","fullClient","submitSharedPost","commentData","embedData","postCommentRequestForShare","shareToFacebook","ui","exitShare","highlightPost","unhighlightPost","generateImagePreview","evt","f","files","match","previewSrc","reader","FileReader","onload","theFile","span","innerHTML","result","join","dontAdd","readAsDataURL","MUS_SERVER_URI","DEV_BUILD","UPLOAD_URL","uploader","autoUpload","removeAfterUpload","queueLimit","isHTML5","filters","fn","item","options","itemType","queue","size","removeMedia","clearQueue","wrap","closest","get","reset","unwrap","fileMaxExceeded","onWhenAddingFileFailed","info","HTML5warning","onAfterAddingFile","fileItem","onAfterAddingAll","addedFileItems","onBeforeUploadItem","user","getUserCredentials","X-UserId","userId","X-SessionId","sessionId","X-AccessToken","accessToken","formData","_file","file","onProgressItem","progress","onProgressAll","onSuccessItem","postMediaRequest","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","resetCommentParams","postComment","commentText","isComment","setCommentParams","topicId","postID","postCommentRequest","getPostReplyRequest","uploadAll","blur","scrollTo","body","scrollHeight","mobileHighlightPost","mobileUnhighlightPost","factory","agent","test","navigator","userAgent","MSStream","_userAgent","check","a","substr","vendor","opera","isUserAgent","$websocket","$route","DataService","initSocket","getWebsocketUri","socketUri","WEBSOCKET_BASE_URI","ws","setWatchTopic","onOpen","onClose","data","onMessage","responseJson","JSON","parse","rid","setTopic","setComments","setReplies","setSocial","setVideo","onError","disconnectSocket","reconnectSocket","reload","readyState","OPEN","message","stringify","key","value","localStorage","localStorageAvailable","setItem","getFromLocalStorage","getItem","clearStorage","clear","_p8","p","Math","random","toString","generateUUID","uuid","getDeviceId","getUrlVars","hash","vars","hashes","split","peelUserName","peelUserId","peelShowId","ssUserName","ssUserId","_MI16","getPeelUserId","getPeelUserName","getPeelParams","substring","getSSUserId","getSSUserName","Bant","FDSUtility","setTopicData","topicData","_liveTopicId","notifyObservers","channelId","reqChannelId","uri","topicParams","timestamp","Date","getTime","callback","callbackLength","observerCallbacks","pop","forEach","$elem","$attrs","element","secureClick","secureFocus","scope","attrs","$last","imageZoom","trustSource","preventNav","elem","attr","vidIndex","setYOffset","video","y","setXOffset","x","firstElementChild","childNodes","loadingSpinner","className","zIndex","canPlay","videoLengthPlayed","round","currentTime","togglePlayPause","thesePlayerNodes","thisVideo","thisThumbnail","thisPlayBtn","thisLoading","paused","ended","play","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","pause","setAspectRatio","aspectRatio","orientation","classStrings","setDimensions","thisWidth","width","styleObj","trustSrcHtml","iframePlayer","setOffsets","image","direction","ref","offsetScale","h","scaledY","w","scaledX","thisImage","service","delegateSetComments","commentsData","error","updateComment","updateCommentCount","commentId","DATA_BANT_ID_LENGTH","appendToComments","updateCommentLocalData","delegateSetTopic","removeTopic","delegateSetReplies","replyData","updateReply","updateReplyCountById","appendToReplies","getCommentIdByReply","updateReplyLocalData","delegateSetChannel","delegateSetSocial","setSocialData","delegateSetVideo","setVideoData","watched","content","_title","title","_topicType","_id","_game","game","_scheduledAt","getGameScheduledTime","scheduledAt","_score","live","_status","_gameStats","_topic","bant","WATCH_TOPIC_URI","_isTopicWatched","LIKE_TOPIC_URI","updateBantLiked","UNLIKE_TOPIC_URI","updateTopicData","scoreData","setScoreData","TOPIC_BASE_URI","varTopicParams","encodeURI","owner","likeTopicRequest","varLikeParams","unlikeTopicRequest","getTopicId","getGame","teams","links","getHtml","watch","_hidePeelSplash","_hideSSSplash","val","_comments","tempCommentsData","results","_commentObject","prevOffset","_offset","nextOffset","SHOW_COMMENT_URI","postCommentData","pin","_pinnedComments","splice","unshift","commentObj","updateLocalData","newData","updateLikeCommentWithId","tempObject","getCommentById","removeComment","temp","tempObserverCallbacks","commentGetRequest","queryStr","commentPostRequest","LIST_COMMENTS_URI","getCommentByIdRequest","createCommentParams","POST_COMMENT_URI","lang","sections","postCommentRequestForMedia","mediaData","m","media","likeCommentRequest","LIKE_COMMENT_URI","unlikeCommentRequest","UNLIKE_COMMENT_URI","FLAG_COMMENT_URI","DELETE_COMMENT_URI","isLikedById","tempStructure","deleteById","flagById","UNFLAG_COMMENT_URI","HIDE_COMMENT_URI","hideById","UNHIDE_COMMENT_URI","_loadedComments","videoData","_videoArray","tempData","_videoObject","isNewObject","reqOffset","request","LIST_SOCIAL_URI","LIMIT","timeSince","timeStamp","now","createdDate","secondsPast","parseInt","daysPassed","floor","day","getDate","month","toDateString","year","getFullYear","gameScheduleTime","date_format","getMonth","hour","getHours","minutes","getMinutes","ext","timeZone","toLocaleString","timeZoneName","date","extractMediaObject","_bantObject","tempMedia","EXTRACT_MEDIA_TYPE_LENGTH","thumbUrl","sizes","mediaAspect16x9","mediaAspect1x1","mediaAspect2x1","extractEmbedObject","embedObject","embedTitle","embedMetrics","embedMini","mini","sectionsLength","ogp","likeObject","_userInfo","userInfoTemp","setUserCredentials","userType","_isUserLoggedIn","ssUser","MI16User","getUserType","userLoggedInToFacebook","userData","userName","login","utcOffset","deviceId","locale","deviceType","deviceModel","appKey","appVersion","facebook","userID","peel","isMI16","post","REGISTER_SERVER_URI","then","initializeContent","initChannel","initTopic","initPost","getPostId","getPostsForTopicID","staticPosts","fakePhotos","usedFakePhotos","fakeVideos","usedFakeVideos","peelDemoData","postContent","postMedia","peelPost","fakePost","Object","minimumCharacterCount","randomCharacterCount","loremIpsum","postType","fakePhoto","fakeVideo","postAuthors","commentCount","getRepliesForPostID","fakeReplies","fakeReply","loremIpsumSubstring","replyContent","replyType","getStructureById","array","getIndexById","isFlaggedById","flag","index","POST_REPLY_URI","tId","isCom","comId","repId","replyId"],"mappings":"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","file":"app.min.js","sourcesContent":["angular.module(\"Forum\", [\"ngRoute\",\"ngSanitize\",\"AuthModule\",\"ChannelModule\",\"TopicModule\",\"PostModule\",\"NetworkModule\",\"MediaModule\",\"SocialModule\",\"UserInput\",\"SmartStadiumModule\"])\n.config([\"$routeProvider\", \"$locationProvider\",\n\nfunction ($routeProvider, $locationProvider) {\n  $routeProvider\n  .when('/login', {\n    templateUrl:'partials/facebookLogin.html',\n    controller:'AuthController'\n  })\n  .when('/channel/:channelID', {\n    templateUrl:'partials/login.html',\n    controller:'ChannelController'\n  })\n  .when('/topic/:topicID', {\n    templateUrl:'partials/topic.html',\n    controller:'TopicController'\n  })\n  .when('/post/:postID', {\n    templateUrl:'partials/post.html',\n    controller:'PostController'\n  })\n  .when('/invalidTopic', {\n    templateUrl:'partials/invalidTopic.html'\n  })\n  .otherwise({\n    redirectTo:'/invalidTopic'\n  });\n\n  if (window.history && window.history.pushState && HTML5_LOC){\n    $locationProvider.html5Mode({\n      enabled:true\n    });\n  }\n}])\n\n.filter('hashtags',['$filter', '$sce',\n  function ($filter, $sce) {\n    return function(text, target) {\n      if (!text) return text;\n\n      var replacedText = $filter('linky')(text, target);\n      var targetAttr = \"\";\n      if (angular.isDefined(target)) {\n          targetAttr = ' target=\"' + target + '\"';\n      }\n      // replace #hashtags and send them to twitter\n      var replacePattern1 = /(^|\\s)#(\\w*[a-zA-Z_]+\\w*)/gim;\n      replacedText = text.replace(replacePattern1, '$1<a href=\"https://twitter.com/search?q=%23$2\"' + targetAttr + '>#$2</a>');\n      // replace @mentions but keep them to our site\n      var replacePattern2 = /(^|\\s)\\@(\\w*[a-zA-Z_]+\\w*)/gim;\n      replacedText = replacedText.replace(replacePattern2, '$1<a href=\"https://twitter.com/$2\"' + targetAttr + '>@$2</a>');\n\n      $sce.trustAsHtml(replacedText);\n      return replacedText;\n  };\n}]);\n\nangular.module('Forum')\n.directive('ngElementReady', [function() {\n  return {\n    priority: -1000,\n    restrict: \"A\",\n    link: function($scope, $element, $attributes) {\n        $scope.$eval($attributes.ngElementReady); // execute expression from attribute\n    }\n  };\n}]);\n","angular.module(\"ChannelModule\", [\"NetworkModule\", \"AuthModule\"])\n.controller(\"ChannelController\", [\"$scope\",\"$window\",\"$location\",\"$sce\",\"$routeParams\",\"networkService\", \"ChannelService\",\"TopicService\",\"URIHelper\",\"AuthService\",\"UserInfoService\",\n\nfunction ($scope,$window,$location,$sce,$routeParams,networkService,ChannelService,TopicService, URIHelper, AuthService, UserInfoService)\n{\n  ChannelService.setChannel($routeParams.channelID);\n  if (window.location.href.indexOf('?') !== -1){\n    $scope.urlQueryStr = window.location.href.slice(window.location.href.indexOf('?')+1);\n    if (GEN_DEBUG)\n    console.log(\" $scope.urlQueryStr: \" + $scope.urlQueryStr);\n  }\n  \n  $scope.init = function() {\n    networkService.init();\n    networkService.send(ChannelService.getLiveGameTopic());\n  };\n\n  \n  var updateTopic = function(){\n    var id = ChannelService.getLiveTopicId();\n    if(id !== undefined){\n    \tga('send', 'pageview', \"/topic/\"+id);\n      if (GEN_DEBUG){\n  \t  console.log('Sent Pageview from /channel/' + id);\n      console.log(\"Got Topic id from Channel : \" +\"/topic/\" + id + $scope.urlQueryStr);\n      }\n      if (HTML5_LOC){\n        if(!!$scope.urlQueryStr)\n          $location.path(\"/topic/\" + id).search($scope.urlQueryStr);\n        else\n          $location.path(\"/topic/\" + id);\n      } else {\n        if(!!$scope.urlQueryStr)\n          $window.location = \"#/topic/\" + id + \"?\" + $scope.urlQueryStr;\n        else\n          $window.location = \"#/topic/\" + id;\n      }\n    }\n\n  };\n  \n  \n\n  ChannelService.registerObserverCallback(updateTopic);\n  \n  if(UserInfoService.isUserLoggedIn()){\n    if(NETWORK_DEBUG)\n      console.log(\"User is logged in, checking for connection\");\n    $scope.init();\n  }\n  else if (URIHelper.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    AuthService.loginWithEmail();\n  }\n  else if (URIHelper.isTechMUser()){\n    if (GEN_DEBUG)\n    console.log(\"MI16 User Detected\");\n    $window.location = \"#/login?MI16=true\";\n  }\n  else {\n    if(URIHelper.isPeelUser()){\n      $scope.isPeelUser = true;\n      AuthService.loginWithPeel();\n    }\n    else{\n      AuthService.loginAsGuest();\n    }\n  }\n  \n\n}]);\n","angular.module(\"AuthModule\", [\"NetworkModule\", \"TopicModule\"])\n.controller(\"AuthController\", [\"$scope\", \"$routeParams\", \"$http\", \"AuthService\", \"UserInfoService\", \"TopicService\", \"ReplyService\", \"networkService\",\"ForumDeviceInfo\", \"ChannelService\", \"URIHelper\",\n  function ($scope, $routeParams, $http, AuthService, UserInfoService, TopicService, ReplyService, networkService, ForumDeviceInfo, ChannelService, URIHelper) {\n\n    if (window.location.href.indexOf('?') !== -1){\n      var urlQueryStr = window.location.href.slice(window.location.href.indexOf('?')+1);\n      if (GEN_DEBUG)\n      console.log(\"urlQueryStr: \", urlQueryStr);\n      if (urlQueryStr === 'MI16=true'){\n        $scope.techMIUser = true;\n        $scope.facebookUser = false;\n      }\n    } else {\n      $scope.techMIUser = false;\n      $scope.facebookUser = true;\n    }\n\n    if ($scope.facebookUser){\n      (function(d, s, id) {\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n      ga('send', 'pageview', 'Facebook Landing');\n    }\n    else {\n      ga('send', 'pageview', 'Tech MI16 Landing');\n    }\n    // FACEBOOK AUTH SECTION\n    $scope.showFacebookButton = true;\n\n    function showSpinner() {\n      $scope.showFacebookButton = false;\n    }\n\n    $scope.loginToFacebook = function() {\n      AuthService.loginToFacebook(showSpinner);\n    };\n\n    $scope.techMLogin = function(name, email, isValid) {\n      if (isValid){\n        AuthService.techMLogin(name, email);\n      }\n      $scope.submitted = true;\n    };\n\n    // load Facebook SDK and initialize\n    // TBD: may want to move this initialization to the run cycle instead of in controller\n    window.fbAsyncInit = function() {\n      \n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n\n      FB.getLoginStatus(function (response) {\n\n        // User is logged in to Facebook and authenticated our app\n        // response.authResponse contains user auth information\n        if (response.status === 'connected') {\n          $scope.showFacebookButton = false;\n          var registerParams = AuthService.setRegistrationParams(\"facebook\", -25200, response.authResponse);\n          AuthService.registerUser(registerParams);\n        }\n        // User is logged in to Facebook but hasn't authenticated our app\n        else if (response.status === 'not_authorized') {\n          // FB.login();\n          $scope.showFacebookButton = false;\n          $scope.loginToFacebook();\n        }\n        // User not logged in to Facebook\n        else {\n          $scope.showFacebookButton = true;\n        }\n\n      });\n\n    };\n\n\n    \n}]);","angular.module(\"TopicModule\", [\"NetworkModule\", \"SplashModule\", \"AuthModule\", \"MediaModule\", \"angularFileUpload\",\"SocialModule\"])\n.controller(\"TopicController\", [\"$scope\", \"$sce\", \"$window\", \"$location\",\"$sanitize\", \"$timeout\", \"$routeParams\",\"networkService\", \"TopicService\",\"CommentService\", \"UserInfoService\",\"URIHelper\",\"AuthService\",\"SplashService\",\"MUService\",\"ForumStorage\",\"FileUploader\",\"SocialService\",\"ChannelService\",\"UserAgentService\",\n\nfunction ($scope, $sce, $window, $location, $sanitize, $timeout, $routeParams,networkService,TopicService, CommentService, UserInfoService, URIHelper, AuthService, SplashService,MUService,ForumStorage,FileUploader,SocialService, ChannelService, UserAgentService)\n{\n  var sessionTime = window.time;\n  var lastComment = false;\n  // Check For Mobile Browser\n  if (UserAgentService.isMobileUser()){\n    $scope.mobileBrowser = true;\n    $scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n    if (GEN_DEBUG)\n    console.log(\"MOBILE USER AGENT: \", $scope.mobileUserAgent);\n  } else {\n    $scope.mobileBrowser = false;\n  }\n\n  if (!$scope.commentsArray){\n    $scope.loadingChat = true;\n  }\n\n  //Google Analytics code\n  if((ChannelService.getChannel() == undefined ) && (TopicService.getChannel() == undefined)){\n     ga('send', 'pageview', \"/topic/\"+$routeParams.topicID);\n     if (GEN_DEBUG)\n     console.log('Sent Pageview from /topic/' + $routeParams.topicID);\n  }\n  \n  TopicService.setTopicId($routeParams.topicID);\n  $scope.topicType = \"livegame\";\n  $scope.innerButtonTapped = false;\n  if (UserInfoService.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    // if (!UserInfoService.hasUserVisited()){\n      if (GEN_DEBUG)\n      console.log('SS USER HASNT VISITED');\n      $scope.hideSSSplash = false;\n      ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n      $timeout(function() {$scope.continueToExperience('smartS'); }, 7000);\n    // }\n  }\n  else if (UserInfoService.isMI16User()){\n    $scope.isMI16User = true;\n  }\n  else if(UserInfoService.isPeelUser()){\n    $scope.isPeelUser = true;\n    if (!UserInfoService.hasUserVisited()){\n      if (GEN_DEBUG)\n      console.log('PEEL USER HASNT VISITED');\n      if (URIHelper.isSuperBowl()){\n        $scope.SBSplash = true;\n      }\n      $scope.hidePeelSplash = false;\n      ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n      $timeout(function() {$scope.continueToExperience('peel'); }, 5000);\n    }\n  }\n  else {\n    $scope.isPeelUser = false;  \n    $scope.hidePeelSplash = true;\n    $scope.hideSSSplash = true;\n  }\n//  var tempJasonNFL = {};\n//  \n//  \n//  console.log(\"Team Names\");\n//  for(i=0;i<tempJasonNFL.results.length;i++){\n//    console.log( \"http://was.fankave.com/forum/#/channel/\"+tempJasonNFL.results[i].channelId);\n//  }\n  //Samyukta test\n//  $(window).scroll(function(){\n//      $(\"#textInputFieldTopic\").css(\"top\", Math.max(160, 250 - $(this).scrollTop()));\n//  });\n  // $scope.hidePeelSplash = true;\n\n  $scope.continueToExperience = function(env) {\n    if (GEN_DEBUG)\n    console.log(\"CONTINUE XP CLICKED\");\n    if (env === 'peel'){\n      SplashService.setPeelSplash(true);\n      $scope.hidePeelSplash = true;\n    } else if (env === 'smartS'){\n      SplashService.setSSSplash(true);\n      $scope.hideSSSplash = true;\n    }\n  };\n  $scope.setScoreCardUI = function() {\n    if ($scope.topicType === 'livegame'){\n      if ($scope.isPeelUser){\n        $('#topicSection').css('padding-top','54px');\n      } else if ($scope.isSmartStadiumUser){\n        $('#topicSection').css('padding-top','54px');\n      } else if ($scope.isMI16User){\n        // $('#topicSection').css('padding-top','54px');\n      } else {\n        $('#topicSection').css('padding-top','0px');\n      }\n    }\n  };\n\n  // CONTENT TABS\n  $scope.switchTabs = function(tab) {\n    var t = (window.time - sessionTime);\n      ga('send', 'event', 'Tabs','ActiveTab', $scope.activeTab);\n      ga('send', 'event', 'Tabs','TabSessionLength', $scope.activeTab, t);\n    sessionTime = window.time ;\n\n    if (tab === 'chat'){\n      $('#chatTab').addClass('selectedTab');\n      $('#videoTab').removeClass('selectedTab');\n      $('#socialTab').removeClass('selectedTab');\n      $scope.activeTab = 'chat';\n      $(document).scrollTop(0);\n      // updateTopic();\n      // updateComments();\n    }\n    if (tab === 'video'){\n      $('#chatTab').removeClass('selectedTab');\n      $('#videoTab').addClass('selectedTab');\n      $('#socialTab').removeClass('selectedTab');\n      $scope.activeTab = 'video';\n      $(document).scrollTop(0);\n    }\n    if (tab === 'social'){\n      $('#chatTab').removeClass('selectedTab');\n      $('#videoTab').removeClass('selectedTab');\n      $('#socialTab').addClass('selectedTab');\n      $scope.activeTab = 'social';\n      $(document).scrollTop(0);\n    }\n    if (GEN_DEBUG)\n    console.log(\"Active Tab: \", $scope.activeTab);\n  };\n  \n  function updateTopic(){\n    if(TopicService.getTopic() !== undefined){\n      $scope.topicType = TopicService.getTopicType();\n      if(TopicService.isWatchingTopic() === false){\n        networkService.send(TopicService.getFollowChannelRequest());\n        networkService.send(TopicService.watchTopicRequest($routeParams.topicID));\n      }\n      \n      \n      $scope.setScoreCardUI();\n      if($scope.topicType == \"livegame\"){\n        if (GEN_DEBUG)\n        console.log(\"Inside topic set :\"+ TopicService.getTeamA());\n        //Score API update\n        $scope.leftTeam = TopicService.getTeamA();\n        $scope.rightTeam = TopicService.getTeamB();\n        var score = TopicService.getScore();\n        if(score != undefined){\n          $scope.leftTeamScore = score.points[0];\n          $scope.rightTeamScore = score.points[1];\n        }\n        $scope.gameStatus = TopicService.getGameStatus();\n        // console.log($scope.gameStatus)\n\n        if($scope.gameStatus == \"live\") {\n          $scope.gamePeriod = TopicService.getGamePeriod();\n          $scope.gameClock = TopicService.getGameClock();\n        }\n\n        $scope.gameScheduledTime = TopicService.getGameTime();\n\n\n\n        $scope.allScoresTitle = TopicService.getScoresTitle();\n        $scope.allScoresURL = TopicService.getScoresLink();\n\n        // renderScoreCard($scope.leftTeam.pColor, $scope.rightTeam.pColor);\n        var left = $('.scoreCardContent');\n        var right = $('.svg-content');\n        left.css('background-color', $scope.leftTeam.pColor);\n        right.css('fill', $scope.rightTeam.pColor);\n      }\n      $scope.topicTitle = TopicService.getTitle();\n      var thisTopic = TopicService.getTopic();\n      $scope.topicDescHtml = thisTopic.html;\n      //console.log(\"has MEDIA  :\"+ thisTopic.type +\"thisTopic.mediaUrl\"+ thisTopic.mediaUrl);\n      if(thisTopic.type == \"media\"){\n      $scope.topicMediaUrl = thisTopic.mediaUrl;\n      $scope.topicMediaAspectFeed = thisTopic.mediaAspectFull;\n      }\n//      var width = window.innerWidth;\n//      console.log(\"Image width :\"+$scope.topicMediaAspectFeed.w +\"  X  \" + $scope.topicMediaAspectFeed.h + \"xxxx \"+width)\n//      $scope.topicMediaAspectFull = thisTopic.mediaAspectFull;\n\n      $scope.createdAt = TopicService.getTimeCreatedAt();\n      $scope.liked = TopicService.getLiked();\n      var metrics = TopicService.getMetrics();\n      $scope.likesCount = metrics.likes;\n      $scope.commentsCount = metrics.comments;\n      if (!$scope.commentsCount || $scope.commentsCount === 0){\n        $scope.loadingChat = false;\n      }\n\n      var tab = URIHelper.getActiveTab();\n      if (tab === 'video'){\n        $scope.$broadcast('videoActive');\n      }\n      if (tab === 'social'){\n        $scope.$broadcast('socialActive');\n      }\n      $scope.switchTabs(tab);\n\n    }\n  };\n\n  function updateComments(){\n    var commentsdata = CommentService.comments();\n    if(commentsdata != undefined && (commentsdata.length >0 || lastComment === true)){\n      lastComment = false;\n      // console.log(\"CommentsData : \", commentsdata);\n      var len = commentsdata.length;\n\n      $scope.commentsArray = [];\n\n      for(i=0;i<len;i++){\n        var tempComment = {};\n        tempComment = commentsdata[i];\n        tempComment.postAuthorName = commentsdata[i].author.name;\n        tempComment.postAuthorPhoto = commentsdata[i].author.photo;\n        tempComment.isMyComment = UserInfoService.isCurrentUser(commentsdata[i].author.id);\n\n        tempComment.likeCount = commentsdata[i].metrics.likes;\n        tempComment.replyCount = commentsdata[i].metrics.replies;\n\n        tempComment.postTimestamp = commentsdata[i].createdAt;\n        if (tempComment.type === 'media'){\n          tempComment.mediaUrl = commentsdata[i].mediaUrl;\n          // tempComment.trustedMediaUrl = $scope.trustSrc(tempComment.mediaUrl);\n          tempComment.mediaAspectFeed = commentsdata[i].mediaAspectFeed;\n          tempComment.mediaAspectFull = commentsdata[i].mediaAspectFull;\n          tempComment.mediaAspectRatio = commentsdata[i].mediaAspectRatio;\n          tempComment.mediaOrientation = commentsdata[i].mediaOrientation;\n          tempComment.mediaThumbUrl = commentsdata[i].mediaThumbUrl;\n        }\n        tempComment.isLiked = commentsdata[i].signal.like;\n\n        if (tempComment.type === 'embed'){\n          tempComment.shared = true;\n          tempComment.embed = commentsdata[i].embed;\n          tempComment.embed.embedCreatedAt = commentsdata[i].embedCreatedAt;\n          tempComment.embed.embedCreatedAtFull = commentsdata[i].embedCreatedAtFull;\n          tempComment.embedType = commentsdata[i].embedType;\n          \n          if (tempComment.embedType === 'media' || tempComment.embedType === 'link'){\n            tempComment.mediaUrl = commentsdata[i].embedMedia.mediaUrl;\n            tempComment.mediaThumbUrl = commentsdata[i].embedMedia.mediaThumbUrl;\n            tempComment.mediaAspectFeed = commentsdata[i].embedMedia.mediaAspectFeed;\n            tempComment.mediaAspectFull = commentsdata[i].embedMedia.mediaAspectFull;\n            tempComment.mediaAspectRatio = commentsdata[i].embedMedia.mediaAspectRatio;\n            tempComment.mediaOrientation = commentsdata[i].embedMedia.mediaOrientation;\n          }\n\n          if (tempComment.providerName === \"Twitter\"){\n            tempComment.embed.embedLogo = \"img/twitterLogo@2x.png\";\n          } else {\n            tempComment.embed.embedLogo = commentsdata[i].embed.provider.logo;\n          }\n\n          if (commentsdata[i].embed.type === 'link' && commentsdata[i].embed.playable === true){\n            tempComment.embedHtml = commentsdata[i].embedHtml;\n          }\n        }\n        $scope.commentsArray.push(tempComment);\n        if (i === len - 1 && NETWORK_DEBUG){\n          console.log(\"Comments Array: \", $scope.commentsArray);\n        }\n\n      }\n    }\n\n  };\n\n  $scope.loadRemainingComments = function() {\n    if (GEN_DEBUG)\n    console.log(\"LOADING REST OF COMMENTS...\");\n    if (!CommentService.loadedComments()){\n      networkService.send(CommentService.getCommentsRequest($routeParams.topicID));\n      CommentService.setLoadedComments(true);\n      $scope.loadedAllComments = true;\n    }\n  };\n\n  $scope.loadRemainingCommentsTimeout = function() {\n      $timeout(function(){\n        if (!CommentService.loadedComments()){\n          if (GEN_DEBUG)\n          console.log(\"LOADING REST OF COMMENTS...\");\n          networkService.send(CommentService.getCommentsRequest($routeParams.topicID));\n          $scope.loadedAllComments = true;\n          CommentService.setLoadedComments(true);\n        }\n      }, 7000);\n  };\n\n  $scope.init = function() {\n    networkService.send(TopicService.getTopicRequest($routeParams.topicID));\n    networkService.send(CommentService.getCommentsRequest($routeParams.topicID));\n  };\n  \n\n  $scope.setPeelUI = function(isPeelUser){\n    //console.log(\"isPeelUser :\"+isPeelUser);\n    $scope.isPeelUser = isPeelUser;\n    \n  }\n\n  \n  $scope.setPeelUI($scope.isPeelUser);\n\n  $scope.hideLoading = function(){\n    if (GEN_DEBUG)\n    console.log(\"HIDING LOAD\");\n    $scope.loadingChat = false;\n    $scope.loadingSocial = false;\n  };\n  $scope.initPage = function(){\n    updateTopic();\n    updateComments();\n    $scope.pageClass = 'page-topic';\n    $scope.showNewCommentsIndicator = false;\n\n    $scope.topicID = $routeParams.topicID;\n    $scope.init();\n\n    if ($scope.mobileBrowser === true){\n      document.getElementById('topicSection').style.paddingBottom = \"42px\";\n    }\n  }\n\n  $scope.setLinksOnComments = function(){\n    var postDivs = document.getElementsByClassName(\"postRow\");\n    for (div in postDivs) {\n      var thisDiv = postDivs[div];\n      thisDiv.onclick = function(e) {\n        if ($(e.target).is('a')) {\n          return;\n        } \n        thisPost = $scope.commentsArray[this.id];\n        if ($scope.innerButtonTapped === false) {\n          if (GEN_DEBUG)\n          console.log(\"Post Click Active: \", thisPost.id);\n          if (HTML5_LOC){\n            $location.path(\"/post/\" + thisPost.id);\n            if (!$scope.$$phase){\n              $scope.$apply();\n            }\n          } else {\n            $window.location = \"#/post/\" + thisPost.id;\n          }\n        }\n        $scope.innerButtonTapped = false;\n      }\n    }\n  }\n\n//  if(URIHelper.isPeelUser())\n//    ga('send', 'event', 'UserType', '0', 'Peel User', { 'nonInteraction': 2 });\n//  else\n//    ga('send', 'event', 'UserType', '0', 'Non Peel User', { 'nonInteraction': 2 });\n  if(UserInfoService.isUserLoggedIn()){\n    if(NETWORK_DEBUG)\n      console.log(\"User is logged in, checking for connection\");\n    if(!networkService.isSocketConnected())\n      networkService.init();\n    $scope.initPage();\n  }\n  else if (URIHelper.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    if (GEN_DEBUG)\n    console.log(\"SS User? \", $scope.isSmartStadiumUser);\n    AuthService.loginWithEmail();\n  }\n  else if (URIHelper.isTechMUser()){\n    $window.location = \"#/login?MI16=true\";\n  }\n  else if (URIHelper.isPeelUser()){\n    $scope.isPeelUser = true;\n    $scope.setPeelUI(true);\n    AuthService.loginWithPeel();\n  }\n  else {\n    // console.log(\"Not logged in to facebook, take user to login page\")\n    AuthService.loginAsGuest();\n  }\n\n\n  $scope.peelClose = function()\n  {\n    ga('send', 'event', 'Peel', 'click', 'BackToPeelHome');\n     var t = (window.time - sessionTime);\n      ga('send', 'event', 'Tabs','TabSessionLength', $scope.activeTab, t);\n      sessionTime = window.time;\n    if (GEN_DEBUG)\n    console.log(\"peelClose()\");\n    window.location = \"peel://home\";\n  }\n\n  $scope.peelWatchOnTV = function()\n  {\n    ga('send', 'event', 'Peel', 'click', 'PeelWatchOnTV');\n    if (GEN_DEBUG)\n    console.log(\"peelWatchOnTV()\");\n    var showId = URIHelper.getPeelShowId();\n    // var t = (window.time - sessionTime);\n    //   ga('send', 'event', 'Tabs','TabSessionLength', $scope.activeTab, t);\n    //   sessionTime = window.time;\n    if (GEN_DEBUG)\n    console.log(\"Peel show on TV uri :  \"+ \"peel://tunein/\"+showId+ \"?action=SendIRorReminder&post_action=None\");\n    if(showId != undefined)\n      window.location = \"peel://tunein/\"+showId+\"?action=SendIRorReminder&post_action=None\";\n    else\n      window.location = \"peel://home\";\n  }\n\n  $scope.showNewCommentsIndicator = false;\n  $scope.newCommentsIndicatorTapped = function()\n  {\n    if (GEN_DEBUG)\n    console.log(\"newCommentsIndicatorTapped\");\n    $scope.showNewCommentsIndicator = false;\n    updateComments();\n    $(document).scrollTop(0);\n  }\n\n  $scope.imageClick = function(imageURL)\n  {\n    event.cancelBubble = true;\n    if(event.stopPropagation) event.stopPropagation();\n\n    $.magnificPopup.open({\n      items: {\n        type:'image',\n        src: imageURL,\n      },\n      type: 'inline',\n      callbacks:\n      {\n        open: function()\n        {\n          $('body').bind('touchmove', function(e){e.preventDefault()})\n        },\n        close: function()\n        {\n          $('body').unbind('touchmove')\n        }\n        // e.t.c.\n      }\n    });\n  }\n\n  $scope.moreButtonTapped = function()\n  {\n    $scope.innerButtonTapped = true;\n  }\n\n  $scope.updateLikeTopic = function() {\n    if (GEN_DEBUG)\n    console.log(\"TopicController update like Topic\");\n    if(TopicService.getLiked() == true)\n      networkService.send(TopicService.getUnlikeTopicRequest());\n    else\n      networkService.send(TopicService.getLikeTopicRequest());  \n  };\n\n  $scope.commentOnTopic = function()\n  {\n    document.getElementById(\"topicCommentField\").focus();\n  };\n\n  $scope.updateLikeComment = function(id) {\n    $scope.innerButtonTapped = true;\n    \n    // event.cancelBubble = true;\n    // if(event.stopPropagation) event.stopPropagation();\n    if (GEN_DEBUG)\n    console.log(\"TopicController updateLike (\" + id + \")\");\n    if(CommentService.isCommentLiked(id)){\n      networkService.send(CommentService.getUnlikeCommentRequest(id));\n    }\n    else{\n      networkService.send(CommentService.getLikeCommentRequest(id));  \n    }\n  };\n\n\n  $scope.deleteComment = function(id)\n  {\n    if (GEN_DEBUG)\n    console.log(\"deleteComment(\" + id + \")\");\n    if ($scope.commentsArray.length === 1){\n      if (GEN_DEBUG)\n      console.log(\"Deleting Final Comment\");\n      lastComment = true;\n    }\n    $scope.innerButtonTapped = true;\n    networkService.send(CommentService.deleteCommentRequest(id));\n  }\n\n  $scope.reportCommentAsSpam = function(id)\n  {\n    if (GEN_DEBUG)\n    console.log(\"reportCommentAsSpam(\" + id + \")\");\n    $scope.innerButtonTapped = true;\n    networkService.send(CommentService.flagCommentRequest(id)); \n  }\n\n  $scope.goToRepliesWithKeyboardTriggered = function(id)\n  {\n    // event.cancelBubble = true;\n    // if(event.stopPropagation) event.stopPropagation();\n\n    // console.log(\"TopicController.goToRepliesWithKeyboardTriggered(\" + id + \")\");\n    TopicService.directComment = true;\n    if (HTML5_LOC){\n      $location.path(\"/post/\" + id);\n    } else {\n      $window.location = \"#/post/\" + id;\n    }\n  };\n\n  $scope.secureLink = function(url, id) {\n    if (UserInfoService.isGuestUser()){\n      return \"\";\n    } else {\n      return url + id;\n    }\n  };\n\n  var notifyNewComments = function(){\n    if($scope.commentsArray == undefined)\n    {\n      updateComments();\n    }\n    else {\n      var commentsdata = CommentService.comments();\n      var len = commentsdata.length;\n      var pinIndex = CommentService.getNumPinComments();\n      if($scope.commentsArray.length < len){\n        if(!UserInfoService.isCurrentUser(commentsdata[pinIndex].author.id)){\n          $scope.showNewCommentsIndicator = true;\n        }\n        else {\n          updateComments();\n        }\n      }\n      else{\n        updateComments();\n      }\n    }\n  };\n\n  TopicService.registerObserverCallback(updateTopic);\n  CommentService.registerObserverCallback(notifyNewComments);\n  CommentService.registerObserverCallback(updateComments, true);\n\n  $scope.trustSrc = function(src)\n  {\n    return $sce.trustAsResourceUrl(src);\n  }\n\n  $window.addEventListener(\"beforeunload\", function(){\n    if (GEN_DEBUG)\n    console.log(\"Before Unload\");\n    ForumStorage.setToLocalStorage(\"lastTabActive\", $scope.activeTab);\n  });\n\n  $scope.xLinkActivated = false;\n\n  var _channelId = ChannelService.getChannel();\n  TopicService.setChannel(_channelId);\n\n  function debounce(func, wait, immediate) {\n    var timeout;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  };\n\n  var docVarsSet = false;\n  var tabs,\n      tabContainer,\n      tabsTop,\n      tabsHeight,\n      inputHeight,\n      clientHeight,\n      docHeight,\n      headerHeight;\n  $scope.setDocVars = function() {\n    if (!docVarsSet){\n      tabs = $('#inputControls');\n      tabContainer = $('.tabContainer');\n      tabsTop = tabs.offset().top;\n      tabsHeight = tabContainer.height();\n      inputHeight = tabs.height();\n      clientHeight = document.documentElement.clientHeight;\n      docHeight = $(document).height();\n      docVarsSet = true;\n      if ($scope.isSmartStadiumUser){\n        headerHeight = 54;\n      } else if ($scope.isPeelUser){\n        headerHeight = 54;\n      } else {\n        headerHeight = 0;\n      }\n    }\n  };\n\n  var fixed = false;\n  var watchScroll = function watchScroll() {\n    if ($scope.showNewCommentsIndicator){\n      $scope.showNewCommentsIndicator = false;\n    }\n    // if ($scope.isPeelUser){\n      if ($(document).scrollTop() > (tabsTop - headerHeight) && (docHeight - clientHeight) > (tabsTop + inputHeight - tabsHeight)) {\n        tabs.addClass('fixTabsPeel');\n        tabs.css('top',headerHeight);\n        tabContainer.addClass('fixTabContainer');\n        $('.commentsContainer').css('padding-top',$('#inputControls').height());\n        fixed = true;\n      } else if (fixed) {\n        tabs.removeClass('fixTabsPeel');\n        tabs.css('top','');\n        tabContainer.removeClass('fixTabContainer');\n        $('.commentsContainer').css('padding-top','');\n        fixed = false;\n      }\n  };\n\n  $(document).off('scroll');\n  $(document).on('scroll', watchScroll);\n\n\n}]);\n\n","angular.module(\"SocialModule\", [\"NetworkModule\",\"ChannelModule\",\"TopicModule\"])\n.controller(\"SocialController\", [\"$scope\",\"$sce\",\"$window\",\"$routeParams\",\"$http\",\"SocialService\",\"VideoService\",\"networkService\",\"ChannelService\",\"TopicService\",\"DateUtilityService\",\"CommentService\",\n  function ($scope,$sce,$window,$routeParams,$http,SocialService,VideoService,networkService,ChannelService,TopicService,DateUtilityService,CommentService){\n    console.log(\"Social Control\");\n\n    var _this = this;\n    this.initFeed = function(tab) {\n      // Show Loading UI Once On Each Tab\n      if (tab === 'social'){\n        if (!_this.socialArray){\n          $scope.$parent.loadingSocial = true;\n        }\n        if (!!_this.socialArray){\n          updateTimestamps('social');\n        }\n        $scope.$parent.switchTabs('social');\n        SocialService.resetSocialOffset();\n        _this.loadContent('social');\n      } else {\n        if (!_this.videoArray){\n          $scope.$parent.loadingSocial = true;\n        }\n        if (!!_this.videoArray){\n          updateTimestamps('video');\n        }\n        $scope.$parent.switchTabs('video');\n        VideoService.resetVideoOffset();\n        _this.loadContent('video');\n      }\n    };\n\n    $scope.$on('videoActive', function (event, args){\n      _this.initFeed('video');\n    });\n\n    $scope.$on('socialActive', function (event, args){\n      _this.initFeed('social');\n    });\n\n    this.loadContent = function(type, offset) {\n      var channelID = ChannelService.getChannel()||TopicService.getChannelId();\n      if (type === 'social'){\n        if (NETWORK_DEBUG)\n        console.log(\"LOADING SOCIAL: \", channelID);\n        networkService.send(SocialService.getSocialDataRequest(channelID,offset));\n      } else {\n        if (NETWORK_DEBUG)\n        console.log(\"LOADING VIDEO: \", channelID);\n        networkService.send(VideoService.getVideoDataRequest(channelID,offset));\n      }\n    };\n\n    function updateFeed(tab) {\n\n      // Get Appropriate Content\n      var feedData,\n          existingLength,\n          tabArray;\n      if (tab === 'social'){\n        feedData = SocialService.socialArray();\n        _this.socialArray = _this.socialArray || [];\n        existingLength = _this.socialArray.length;\n        tabArray = _this.socialArray;\n      } else {\n        feedData = VideoService.videoArray();\n        _this.videoArray = _this.videoArray || [];\n        existingLength = _this.videoArray.length;\n        tabArray = _this.videoArray;\n      }\n\n      var len = feedData.length;\n      if (!!feedData && len > 0){\n        // console.log(\"Feed Data: \", feedData, \" Type: \", tab);\n\n        for (var i = 0; i < len; i++){\n          var tempItem = feedData[i];\n\n          // Check to See if Item Already Exists in Scope Array\n          var itemExists = false;\n          for (var j = 0; j < existingLength; j++){\n            if (tempItem.id === tabArray[j].id){\n              itemExists = true;\n            }\n          }\n          // If Exists, Skip To Next Item\n          if (itemExists){\n            continue;\n          }\n          \n          tempItem.postAuthorName = feedData[i].embedAuthor.name;\n          tempItem.postAuthorAlias = feedData[i].embedAuthor.alias;\n          tempItem.postAuthorPhoto = feedData[i].embedAuthor.photo;\n          tempItem.tweetId = feedData[i].tweet.id;\n          \n          tempItem.postTimestamp = feedData[i].createdAt;\n          tempItem.providerName = feedData[i].embedProvider.name;\n          tempItem.html = feedData[i].embedText;\n          tempItem.retweetCount = feedData[i].tweet.metrics.retweetCount;\n          tempItem.likeCount = feedData[i].tweet.metrics.likeCount;\n          tempItem.replyCount = feedData[i].tweet.metrics.replyCount;\n\n          // Embed Object for Sharing\n          tempItem.embed = feedData[i].embed;\n          tempItem.embed.embedCreatedAt = feedData[i].embedCreatedAt;\n          // tempItem.embed.embedCreatedAtFull = feedData[i].embedCreatedAtFull;\n\n          if (tempItem.providerName === \"Twitter\"){\n            tempItem.providerLogo = \"img/twitterLogo@2x.png\";\n            tempItem.embed.provider.logo = \"img/twitterLogo@2x.png\";\n          } else {\n            tempItem.providerLogo = feedData[i].embedProvider.logo;\n            tempItem.embed.provider.logo = feedData[i].embedProvider.logo;\n          }\n\n          tempItem.embedType = feedData[i].embedType;\n          tempItem.embedUrl = feedData[i].embedUrl;\n          if (feedData[i].embedType === \"link\" && feedData[i].embedPlayable === true){\n            tempItem.embedHtml = feedData[i].embedHtml;\n            tempItem.embedPlayable = true;\n          }\n          if (feedData[i].embedType === \"media\" || feedData[i].embedType === \"link\"){\n            tempItem.mediaType = feedData[i].embedMedia.mediaType;\n            tempItem.mediaUrl = feedData[i].embedMedia.mediaUrl;\n            tempItem.mediaThumbUrl = feedData[i].embedMedia.mediaThumbUrl;\n            tempItem.mediaAspectRatio = feedData[i].embedMedia.mediaAspectRatio;\n            tempItem.mediaAspectFeed = feedData[i].embedMedia.mediaAspectFeed;\n            tempItem.mediaAspectFull = feedData[i].embedMedia.mediaAspectFull;\n            tempItem.mediaOrientation = feedData[i].embedMedia.mediaOrientation;\n          }\n\n          if (tab === 'social'){\n            _this.socialArray.push(tempItem);\n          } else {\n            _this.videoArray.push(tempItem);\n          }\n          if (NETWORK_DEBUG && i === len - 1){\n            if (tab === 'social'){\n              console.log(\"Social Array: \", _this.socialArray);\n            } else {\n              console.log(\"Video Array: \", _this.videoArray);\n            }\n          }\n        }\n      }\n    };\n\n    function trustSrc(src) {\n      return $sce.trustAsResourceUrl(src);\n    };\n\n    function updateTimestamps(tab){\n      if (tab === 'social'){\n        for (var i = 0; i < _this.socialArray.length; i++){\n          _this.socialArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.socialArray[i].createdAtFull);\n        }\n      } else {\n        for (var i = 0; i < _this.videoArray.length; i++){\n          _this.videoArray[i].postTimestamp = DateUtilityService.getTimeSince(_this.videoArray[i].createdAtFull);\n        }\n      }\n    };\n\n    SocialService.registerObserverCallback(function(){updateFeed('social');});\n    VideoService.registerObserverCallback(function(){updateFeed('video');});\n    \n    // Limit Rate that Function Can be Called\n    function debounce(func, wait, immediate) {\n      var timeout;\n      return function() {\n        var context = this, args = arguments;\n        var later = function() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    };\n\n    function scrollAfterLoad(pos) {\n      setTimeout(function(){\n        $(document).scrollTop(pos);\n      }, 250);\n    };\n\n\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    var watchContentScroll = debounce(function() {\n      var currentScroll = $(document).height() - clientHeight - 50;\n      if ($(document).scrollTop() > currentScroll && currentScroll > 500) {\n        if ($scope.activeTab === 'social'){\n          // We are Loading More Content -->\n          // Base offset on Current Length of Scope Array\n          _this.loadContent('social',_this.socialArray.length);\n          // scrollAfterLoad(currentScroll + 90);\n        }\n        else if ($scope.activeTab === 'video'){\n          // We are Loading More Content -->\n          // Base offset on Current Length of Scope Array\n          _this.loadContent('video',_this.videoArray.length);\n          // scrollAfterLoad(currentScroll + 90);\n        }\n      }\n    }, 100);\n\n    $(document).on('scroll', watchContentScroll);\n\n    this.retweetPost = function(id) {\n      $http({\n        method: 'GET',\n        url: 'https://twitter.com/intent/retweet?tweet_id=' + id,\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    };\n\n    this.shareTweetToChat = function (embed) {\n      _this.embedShareContent = embed;\n      _this.showShareDialog = true;\n      if (GEN_DEBUG)\n      console.log(\"Embed Object: \", embed);\n      if ($scope.$parent.isPeelUser){\n        var fullClient = document.documentElement.clientHeight - 54;\n        if (GEN_DEBUG)\n        console.log(\"fullClient Height: \", fullClient);\n        setTimeout(function(){\n          $('#sharePreviewContainer').css({top: '54px'}).height(fullClient);\n        },25);\n      }\n    };\n\n    this.submitSharedPost = function (commentData,embedData) {\n      var topicID = $scope.$parent.topicID;\n      if (GEN_DEBUG)\n      console.log(\"topicID From Parent: \", topicID);\n      networkService.send(CommentService.postCommentRequestForShare(topicID,commentData,embedData));\n      _this.showShareDialog = false;\n      $scope.$parent.switchTabs('chat');\n    };\n\n    if (!window.FB){\n      (function(d, s, id) {\n        var js, fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {return;}\n        js = d.createElement(s); js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }(document, 'script', 'facebook-jssdk'));\n    }\n\n    window.fbAsyncInit = function() {\n      FB.init({\n        appId      : '210324962465861',\n        xfbml      : true,\n        version    : 'v2.4'\n      });\n    };\n\n    this.shareToFacebook = function (id,embedUrl) {\n      FB.ui({\n        method: 'share',\n        href: embedUrl\n      }, function (response){\n        // Keep Track of User Shares to Facebook?\n        if (GEN_DEBUG)\n        console.log(\"FB Response Post-Share: \", response);\n      });\n    };\n\n    this.exitShare = function () {\n      _this.showShareDialog = false;\n    };\n\n    this.highlightPost = function(){\n      $('#postShareContent').css('color','rgb(22,189,231)');\n    };\n\n    this.unhighlightPost = function(){\n      $('#postShareContent').css('color','rgb(211,214,215)');\n    };\n\n\n}]);\n\n","angular.module(\"UserInput\", [\"NetworkModule\",\"TopicModule\",\"MediaModule\",\"angularFileUpload\"])\n  .controller(\"UserInputController\", [\"$scope\",\"$window\",\"$timeout\",\"$routeParams\",\"networkService\",\"TopicService\",\"CommentService\",\"ReplyService\",\"UserInfoService\",\"FileUploader\",\"MUService\",\n    function ($scope,$window,$timeout,$routeParams,networkService,TopicService,CommentService,ReplyService,UserInfoService,FileUploader,MUService){\n\n      // ATTACH MEDIA\n      var MUS_SERVER_URI;\n      if (DEV_BUILD === true){\n        MUS_SERVER_URI = 'https://dev.fankave.com:8080';\n      } else {\n        MUS_SERVER_URI = 'https://mus.fankave.com';\n      }\n      var UPLOAD_URL = '/v1.0/media/upload';\n\n      var uploader = this.uploader = new FileUploader({\n        url: MUS_SERVER_URI + UPLOAD_URL,\n        autoUpload: false,\n        removeAfterUpload: true,\n        queueLimit: 1\n      });\n\n      var _this = this;\n      this.isHTML5 = this.uploader.isHTML5;\n      this.mediaType;\n      this.uploader.filters.push({\n        name: 'customFilter',\n        fn: function(item /*{File|FileLikeObject}*/, options) {\n          var itemType = item.type;\n          if(itemType.indexOf(\"image\") != -1){\n            _this.mediaType = \"image\";\n            return this.queue.length < 1 && (item.size < 5242880);\n          }\n          else if(itemType.indexOf(\"video\") != -1){\n            _this.mediaType = \"video\";\n            return this.queue.length < 1 && (item.size < 268435456);\n          }\n          return this.queue.length < 10;\n        }\n      });\n\n      // MEDIA PREVIEW\n      var dontAdd;\n      function generateImagePreview(evt) {\n        var f = evt.target.files[0];\n        if (GEN_DEBUG)\n        console.log('F:', f);\n\n        if (!f.type.match('image.*')) {\n          var previewSrc = \"img/videoPrevIcon@2x.png\";\n        }\n\n        var reader = new FileReader();\n        reader.onload = (function (theFile) {\n          return function (e) {\n            var span = document.createElement('span');\n            span.innerHTML = ['<img class=\"thumb\" src=\"',\n              previewSrc || e.target.result,\n              '\"/>'].join('');\n            if ($scope.mobileBrowser === true && !dontAdd){\n              document.getElementById('mobilePreview').insertBefore(span, null);\n            } else if (!dontAdd) {\n              document.getElementById('preview').insertBefore(span, null);\n            }\n            };\n          })(f);\n          reader.readAsDataURL(f);\n        };\n\n      document.getElementById('fileUpload').addEventListener('change',\n        generateImagePreview, false);\n\n      this.removeMedia = function(){\n        _this.uploader.clearQueue();\n        var e = $('#fileUpload');\n        e.wrap('<form>').closest('form').get(0).reset();\n        e.unwrap();\n        dontAdd = false;\n        _this.unhighlightPost();\n      };\n\n      // CALLBACKS\n      this.fileMaxExceeded = false;\n      this.uploader.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\n        dontAdd = true;\n        if (GEN_DEBUG)\n        console.info('onWhenAddingFileFailed', item, filter, options);\n        if (!_this.isHTML5){\n          if (GEN_DEBUG)\n          console.log(\"Browser Doesn't Support HTML5\");\n          _this.HTML5warning = true;\n        } else if (_this.uploader.queue.length < 1) {\n          _this.fileMaxExceeded = true;\n          _this.removeMedia();\n          $timeout(function(){_this.fileMaxExceeded = false;}, 5000);\n        }\n      };\n      this.uploader.onAfterAddingFile = function(fileItem) {\n        if (GEN_DEBUG)\n        console.info('onAfterAddingFile', fileItem);\n        _this.highlightPost();\n      };\n      this.uploader.onAfterAddingAll = function(addedFileItems) {\n        if (GEN_DEBUG)\n        console.info('onAfterAddingAll', addedFileItems);\n      };\n      this.uploader.onBeforeUploadItem = function(item) {\n        var user = UserInfoService.getUserCredentials();\n        item.headers = {  \n            'X-UserId': user.userId,\n            'X-SessionId': user.sessionId,\n            'X-AccessToken': user.accessToken};\n        item.formData =[{'type':item._file.type},{'size': item._file.size},{'file': item._file}];\n        if (GEN_DEBUG)\n        console.info('onBeforeUploadItem', item);\n      };\n      this.uploader.onProgressItem = function(fileItem, progress) {\n        if (GEN_DEBUG)\n        console.info('onProgressItem', fileItem, progress);\n      };\n      this.uploader.onProgressAll = function(progress) {\n        if (GEN_DEBUG)\n        console.info('onProgressAll', progress);\n      };\n      this.uploader.onSuccessItem = function(fileItem, response, status, headers) {\n        if (GEN_DEBUG)\n        console.info('onSuccessItem', fileItem, response, status, headers);\n        networkService.send(MUService.postMediaRequest(response));\n      };\n      this.uploader.onErrorItem = function(fileItem, response, status, headers) {\n        if (GEN_DEBUG)\n        console.info('onErrorItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCancelItem = function(fileItem, response, status, headers) {\n        if (GEN_DEBUG)\n        console.info('onCancelItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCompleteItem = function(fileItem, response, status, headers) {\n        if (GEN_DEBUG)\n        console.info('onCompleteItem', fileItem, response, status, headers);\n      };\n      this.uploader.onCompleteAll = function() {\n        if (GEN_DEBUG)\n        console.info('onCompleteAll');\n        _this.uploader.clearQueue();\n        MUService.resetCommentParams();\n      };\n      if (GEN_DEBUG)\n      console.info('uploader', this.uploader);\n\n      // POST COMMENT\n      this.postComment = function(commentText, isComment) {\n        // console.log(\"In New Controller: \", isComment);\n        if (_this.uploader.queue.length > 0 && isComment){\n          MUService.setCommentParams($scope.topicID, commentText, true);\n        } else if (_this.uploader.queue.length > 0 && !isComment){\n          MUService.setCommentParams($scope.topicId, commentText, false, $scope.postID);\n        } else if (!!commentText && commentText !== \"\" && isComment){\n          networkService.send(CommentService.postCommentRequest($scope.topicID, commentText));\n        } else if (!!commentText && commentText !== \"\" && !isComment){\n          networkService.send(ReplyService.getPostReplyRequest($scope.topicId, $scope.postID, commentText));\n        }\n        _this.uploader.uploadAll();\n        $scope.commentText = \"\";\n        $('input#topicCommentField').blur();\n        $('#postCommentButton').css('color','rgb(211,214,215)');\n        if (isComment){\n          $(document).scrollTop(0);\n        } else {\n          window.scrollTo(0, document.body.scrollHeight);\n        }\n      };\n\n      this.highlightPost = function(){\n        if (GEN_DEBUG)\n        console.log(\"Styling post\");\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      };\n\n      this.unhighlightPost = function(){\n        if (GEN_DEBUG)\n        console.log(\"Styling post\");\n        $('#postCommentButton').css('color','rgb(211,214,215)');\n      };\n\n      this.mobileHighlightPost = function(){\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      }\n\n      this.mobileUnhighlightPost = function(){\n        $('#postCommentButton').css('color','rgb(22,189,231)');\n      }\n\n      $('input#topicCommentField').bind('focusin focus', function(e){\n        e.preventDefault();\n      });\n\n      $('input').bind('focusin focus', function(e){\n        e.preventDefault();\n      });\n\n    }]);","angular.module('Forum')\n.factory(\"UserAgentService\", [\"ForumStorage\",\"UserInfoService\",\n  function (ForumStorage,UserInfoService){\n\n    var _userAgent;\n\n    function getMobileUserAgent() {\n      var agent;\n      if (isMobileUser()){\n        if (/iPad|iPhone|iPod/i.test(navigator.userAgent) && !window.MSStream){\n          agent = 'iOS';\n        } else if (/Android/i.test(navigator.userAgent)){\n          agent = 'android';\n        } else if (/IEMobile/i.test(navigator.userAgent)){\n          agent = 'windows';\n        }\n      }\n      _userAgent = agent;\n      return agent;\n    }\n\n    function isMobileUser() {\n      var check = false;\n      (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\n      return check;\n    }\n\n    function isUserAgent(type) {\n      if (_userAgent === type){\n        return true;\n      }\n      return false;\n    }\n\n    return {\n      getMobileUserAgent: getMobileUserAgent,\n      isMobileUser: isMobileUser,\n      isUserAgent: isUserAgent\n    };\n\n}]);","angular.module(\"NetworkModule\", ['ngWebSocket'])\n.factory(\"networkService\",[\"$websocket\",\"$route\",\"DataService\",\"UserInfoService\",\n\nfunction ($websocket,$route,DataService,UserInfoService)\n{\n  var ws;\n\n  disconnectSocket = function(){\n    if (NETWORK_DEBUG)\n    console.log(\"Disconnect Callback triggered\");\n    if(ws !== undefined) {\n      ws.close();\n      ws = undefined;\n    }\n  }\n\n  reconnectSocket = function(){\n    if (NETWORK_DEBUG)\n    console.log(\"Reconnect Callback triggered\");\n    $route.reload();\n  }\n  \n  // window.document.addEventListener(visEvent, function(){\n  //     visChange(reconnectSocket, disconnectSocket);\n  //   });\n\n  function initSocket() { \n    ws = $websocket(getWebsocketUri());\n    DataService.setWatchTopic(false);\n    //Websocket callbacks below\n    ws.onOpen(function() {\n      if (NETWORK_DEBUG)\n      console.log(\"Websocket Connected\");\n    });\n\n    ws.onClose(function(evt) {\n      ws = undefined;\n      if (NETWORK_DEBUG)\n      console.log(\"Websocket Closed :\"+evt.data);\n    });\n\n    ws.onMessage(function(evt) {\n      if(NETWORK_DEBUG) console.log(\"Websocket Message Recieved :  \" +evt.data);\n      var responseJson = JSON.parse(evt.data);\n      var type = responseJson.rid;\n      if(type !== undefined){\n        if(type === \"channel\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Channel\");\n          DataService.setChannel(responseJson);\n        }\n        if(type === \"topic\" || type === \"score\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Topic\");\n          DataService.setTopic(responseJson);\n        }else if(type === \"comment\"){\n          if(NETWORK_DEBUG) console.log(\"Processing Comments\");\n          DataService.setComments(responseJson);\n        }\n        else if(type === \"reply\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Reply\");\n          DataService.setReplies(responseJson);\n        }\n        else if(type === \"social\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Social\");\n          DataService.setSocial(responseJson);\n        }\n        else if(type === \"video\"){\n          //TODO handle Replies\n          if(NETWORK_DEBUG) console.log(\"Processing Video\");\n          DataService.setVideo(responseJson);\n        }\n      }\n    });\n\n    ws.onError(function(evt) {\n      if (NETWORK_DEBUG)\n      console.log(\"Websocket OnError: \",evt);\n    });\n\n    function getWebsocketUri(){\n      var user = UserInfoService.getUserCredentials();\n      var socketUri = WEBSOCKET_BASE_URI+\n      'userId='+user.userId+\n      '&sessionId='+user.sessionId+\n      '&accessToken='+user.accessToken+\n      '/';\n      if(NETWORK_DEBUG) console.log(\"socketUri: \" + socketUri);\n      return socketUri;\n    }\n  }\n  return{\n    isSocketConnected:function(){\n      if(NETWORK_DEBUG){\n        if(ws!= null){\n          if (NETWORK_DEBUG)\n          console.log(\"ws status : \"+ ws.readyState);\n        }\n        else {\n          if (NETWORK_DEBUG)\n          console.log(\"ws is null\");\n        }\n      }\n      if(ws != undefined && ws.readyState == ws.OPEN){\n        return true;\n      }\n      return false;\n    },\n    send:function(message) { \n      if(ws == undefined){ \n        initSocket();\n      }\n      ws.send(JSON.stringify(message));\n    },\n    init:initSocket\n  }\n}]);","angular.module('NetworkModule')\n.factory('ForumStorage', function () {\n\tvar localStorageAvailable = false;\n\tif(typeof(Storage) != undefined) {\n\t\tif (NETWORK_DEBUG)\n\t\tconsole.log(\"Local storage available :\"+ typeof(Storage));\n\t\tlocalStorageAvailable = true;\n\t}  \n\telse {\n\t\tif (NETWORK_DEBUG)\n\t\tconsole.log(\"Sorry! No Storage support on this browser..\");\n\t}\n\t\n\tfunction setToLocalStorage(key, value){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\tlocalStorage.setItem(key,value);\n\t}\n\t\n\tfunction getFromLocalStorage(key){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\treturn localStorage.getItem(key);\n\t\treturn undefined;\n\t}\n\t\n\tfunction clearStorage(){\n\t\tif(localStorage!= undefined && localStorageAvailable)\n\t\tlocalStorage.clear();\n\t}\n\t\n\treturn{\n\t\tgetFromLocalStorage:getFromLocalStorage,\n\t\tsetToLocalStorage:setToLocalStorage,\n\t\tclearStorage:clearStorage\n\t}\n\t\n\t\n\n});","angular.module('NetworkModule')\n.factory('ForumDeviceInfo', [\"ForumStorage\",\n\tfunction (ForumStorage) {\n\t//TODO : TEMP function to generate uuid. change this in final version\n\tfunction _p8(s) {\n\t\tvar p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n\t\treturn s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n\t}\n\tfunction generateUUID() {\n\t\tif (GEN_DEBUG)\n\t\tconsole.log(\"GEnerating UUID\");\n\t\tvar uuid = _p8() + _p8(true) + _p8(true) + _p8();\n\t\tif (GEN_DEBUG)\n\t\tconsole.log(\" UUID :\"+ uuid);\n\t\treturn uuid;\n\t}\n\n\treturn{\n\t\tgetDeviceId:function(){\n\t\t\tvar id = ForumStorage.getFromLocalStorage(\"forumUUID\");\n\t\t\tif(id == undefined || id.length <15){\n\t\t\t\tid = generateUUID();\n\t\t\t\tForumStorage.setToLocalStorage(\"forumUUID\",id);\n\t\t\t}\n\t\t\tif (GEN_DEBUG)\n\t\t\tconsole.log(\"generated ID : \"+ id);\n\t\t\treturn id;\n\n\t\t}\n\t}\n}]);\n","angular.module('NetworkModule')\n.factory('URIHelper', [\"ForumStorage\",\n\tfunction (ForumStorage) {\n\n\tvar peelUserName;\n\tvar peelUserId;\n\tvar peelShowId;\n\n\tvar ssUserName;\n\tvar ssUserId;\n\n\tvar _MI16;\n\n\tfunction getUrlVars() {\n\t\tvar vars = [], hash;\n\t\tvar hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\n\t\tfor (var i = 0; i < hashes.length; i++) {\n\t\t\thash = hashes[i].split('=');\n\t\t\tvars.push(hash[0]);\n\t\t\tvars[hash[0]] = hash[1];\n\t\t}\n\t\treturn vars;\n\t}\n\t\n\t\n\n\treturn {\n\t\tisPeelUser:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif(vars[\"peel\"]){\n\t\t\t\tpeelUserId = vars[\"userId\"];\n\t\t\t\tpeelUserName = vars[\"userName\"];\n\t\t\t\tpeelShowId = vars[\"showId\"];\n\t\t\t\t//If diff previous peel user, clear storage\n\t\t\t\tvar prevPeelUser = ForumStorage.getFromLocalStorage(\"forumUserType\");\n\t\t\t\t// if(prevPeelUser != undefined && prevPeelUser == \"peel\" && ForumStorage.setToLocalStorage(\"forumPeelUserId\") != peelUserId)\n\t\t\t\t\t// ForumStorage.clearStorage();\n\t\t\t\tForumStorage.setToLocalStorage(\"forumPeelUserId\",peelUserId);\n\t\t\t\tForumStorage.setToLocalStorage(\"forumPeelShowId\",peelShowId);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\treturn false;\n\t\t},\n\t\tisSmartStadiumUser:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif(vars[\"smartStadium\"]){\n\t\t\t\tssUserId = vars[\"userId\"];\n\t\t\t\tssUserName = vars[\"userName\"];\n\t\t\t\tForumStorage.setToLocalStorage(\"forumSmartStadiumUserId\",ssUserId);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tisTechMUser:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif (vars[\"MI16\"]){\n\t\t\t\t_MI16 = true;\n\t\t\t\tForumStorage.setToLocalStorage(\"techMIUser\",true);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (_MI16){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetPeelUserId:function(){\n\t\t\treturn peelUserId;\n\t\t},\n\t\tgetPeelUserName:function(){\n\t\t\treturn peelUserName;\n\t\t},\n\t\tgetPeelShowId:function(){\n\t\t\treturn peelShowId;\n\t\t},\n\t\tgetPeelParams:function(){\n\t\t\treturn window.location.search.substring(1);\n\t\t},\n\t\tgetSSUserId:function(){\n\t\t\treturn ssUserId;\n\t\t},\n\t\tgetSSUserName:function(){\n\t\t\treturn ssUserName;\n\t\t},\n\t\tgetActiveTab:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif (vars[\"tab\"]){\n\t\t\t\tif (vars[\"tab\"] === 'chat'){\n\t\t\t\t\treturn 'chat';\n\t\t\t\t}\n\t\t\t\tif (vars[\"tab\"] === 'video'){\n\t\t\t\t\treturn 'video';\n\t\t\t\t}\n\t\t\t\tif (vars[\"tab\"] === 'social'){\n\t\t\t\t\treturn 'social';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 'chat';\n\t\t},\n\t\tisSuperBowl:function(){\n\t\t\tvar vars = getUrlVars();\n\t\t\tif (vars[\"superbowl\"]){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\n\t};\n\n}]);","angular.module('ChannelModule')\n.factory('ChannelService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\",\n  function (DateUtilityService,Bant,FDSUtility) {\n\n\n  var _channelId;\n  var _liveTopicId;\n\n  var observerCallbacks = []; \n\n  function setTopicData(topicData) \n  {\n    if(topicData.data != undefined){\n      _liveTopicId = topicData.data.id;\n      if (NETWORK_DEBUG)\n      console.log(\"_liveTopicId : \"+ _liveTopicId);\n      notifyObservers();\n    }\n  }\n\n  function getLiveGameTopic(channelId){\n    var reqChannelId = channelId || _channelId;\n    var uri = \"/v1.0/channel/topic/show/\" + reqChannelId + \"?type=livegame\";\n    if(reqChannelId == \"404\" || reqChannelId == \"5066\")\n    uri = \"/v1.0/channel/topic/show/\" + reqChannelId;\n\n    var topicParams = {\"rid\": \"channel\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\":uri };\n    if (NETWORK_DEBUG)\n    console.log(\"Ch.getLiveGameTopic: \", topicParams);\n    return topicParams;\n  }\n\n  //call this when you know 'data' has been changed\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n  \n  function registerObserverCallback(callback){\n    //register an observer\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  }\n\n  return {\n    setTopicData:setTopicData,\n    getLiveTopicId:function(){ return _liveTopicId;},\n    getLiveGameTopic:getLiveGameTopic,\n    setChannel: function(channelId){\n      _channelId = channelId;\n    },\n    getChannel: function(){\n      return _channelId;\n    },\n    registerObserverCallback:registerObserverCallback\n\n\n  };\n\n}]);","angular.module('TopicModule')\n.directive('secureClick', ['$location','$window','UserInfoService',\n  function ($location, $window, UserInfoService) {\n    return {\n      restrict: 'A',\n      link: function($scope, $elem, $attrs){\n        var element = $elem[0];\n        $(element).on('click', function(e){\n          e.preventDefault();\n          if (UserInfoService.isGuestUser()){\n            if (HTML5_LOC){\n              $location.path(\"/login\");\n            } else {\n              $window.location = \"#/login\";\n            }\n          } else {\n            $scope.$eval($attrs.secureClick);\n          }\n        });\n      }\n    }\n}]);\n\nangular.module('TopicModule')\n.directive('secureFocus', ['$location','$window','UserInfoService',\n  function ($location, $window, UserInfoService) {\n    return {\n      restrict: 'A',\n      link: function($scope, $elem, $attrs){\n        var element = $elem[0];\n        $(element).on('focus', function(e){\n          e.preventDefault();\n          if (UserInfoService.isGuestUser()){\n            if (HTML5_LOC){\n              $location.path(\"/login\");\n            } else {\n              $window.location = \"#/login\";\n            }\n          } else {\n            $scope.$eval($attrs.secureFocus);\n          }\n        });\n      }\n    }\n}]);\n\nangular.module('TopicModule')\n.directive('repeatFinishedNotify', function () {\n  return function (scope, element, attrs) {\n    if (scope.$last){\n      scope.hideLoading();\n      scope.setLinksOnComments();\n      scope.setDocVars();\n      scope.continueToExperience('smartS');\n      // scope.loadRemainingCommentsTimeout();\n    }\n  };\n});\n\nangular.module('TopicModule')\n.directive('embedSharedContent', ['UserAgentService',\n  function (UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=embedPost',\n      imageZoom: '&',\n      trustSource: '&',\n      preventNav: '&'      \n    },\n    link: function(scope,elem,attr){\n      scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n    },\n    templateUrl: 'partials/shared.html'\n  };\n}]);\n\nangular.module('TopicModule')\n.directive('mediaPlayer', ['$sce', 'UserAgentService',\n  function ($sce, UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=',\n      vidIndex: '@'\n    },\n    link: function(scope,elem,attr) {\n\n      scope.isMobileUser = UserAgentService.isMobileUser();\n\n      scope.trustSrc = function(src){\n        return $sce.trustAsResourceUrl(src);\n      }\n\n      var video = elem[0].firstElementChild.childNodes[1];\n      var loadingSpinner = elem[0].firstElementChild.childNodes[7];\n      \n      // Video Loading Event Listeners\n      $(video).on('waiting', function() {\n        if (GEN_DEBUG)\n          console.log(\"Video Waiting\");\n        if (scope.isMobileUser){\n          loadingSpinner.className = 'media-loading-fullscreen';\n          loadingSpinner.style.zIndex = \"2147483647\";\n        } else {\n          loadingSpinner.className = 'media-loading';\n        }\n      });\n      $(video).on('stalled', function() {\n        if (GEN_DEBUG)\n          console.log(\"Video Stalled\");\n        if (scope.isMobileUser){\n          loadingSpinner.className = 'media-loading-fullscreen';\n          loadingSpinner.style.zIndex = \"2147483647\";\n        } else {\n          loadingSpinner.className = 'media-loading';\n        }\n      });\n      var canPlay;\n      $(video).on('canplay', function() {\n        canPlay = true;\n      });\n      $(video).on('playing', function() {\n        if (GEN_DEBUG)\n          console.log(\"Video Playing\");\n        loadingSpinner.className = 'media-loading-default';\n      });\n      $(video).on('play', function() {\n        if (GEN_DEBUG)\n          console.log(\"Video play clicked\" + scope.thisPost.id);\n        ga('send', 'event', 'Video','Play', scope.thisPost.id);\n      });\n      $(video).on('pause', function() {\n        var videoLengthPlayed = Math.round(video.currentTime);\n        if (GEN_DEBUG)\n        console.log(\"Video paused\" + scope.thisPost.id + \": TimePlayed \" + videoLengthPlayed);\n        ga('send', 'event', 'Video','VideoLengthPlayed', scope.thisPost.id, videoLengthPlayed);\n      });\n       $(video).on('ended', function() {\n        var videoLengthPlayed = Math.round(video.currentTime);\n      });\n        \n\n      scope.togglePlayPause = function(e) {\n        var thesePlayerNodes = elem[0].firstElementChild.childNodes;\n        var thisVideo = thesePlayerNodes[1];\n        var thisThumbnail = thesePlayerNodes[3];\n        var thisPlayBtn = thesePlayerNodes[5];\n        var thisLoading = thesePlayerNodes[7];\n\n        if (thisVideo.paused || thisVideo.ended){\n          thisPlayBtn.className = 'pause';\n          thisThumbnail.className = 'pause';\n          thisVideo.play();\n          if (scope.isMobileUser){\n            if (thisVideo.requestFullscreen){\n              thisVideo.requestFullscreen();\n            } else if (thisVideo.webkitRequestFullscreen){\n              thisVideo.webkitRequestFullscreen();\n            } else if (thisVideo.mozRequestFullScreen){\n              thisVideo.mozRequestFullScreen();\n            } else if (thisVideo.msRequestFullscreen){\n              thisVideo.msRequestFullscreen();\n            }\n          }\n        }\n        else {\n          thisLoading.className = 'media-loading-default';\n          thisPlayBtn.className = 'media-controls';\n          thisThumbnail.className = 'media-thumbnail';\n          thisVideo.pause();\n        }\n      }\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (GEN_DEBUG){\n          console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-portrait-9x16\");\n          } else {\n            classStrings.push(\"video-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"video-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-landscape-16x9\");\n          } else {\n            classStrings.push(\"video-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, video) {\n        var thesePlayerNodes = elem[0].firstElementChild.childNodes;\n        var thisVideo = thesePlayerNodes[1];\n        var thisWidth = $(thisVideo).width();\n        if (GEN_DEBUG){\n          console.log(\"Elem in setD: \", elem);\n          console.log(\"PlayerNodes in setD: \", thesePlayerNodes);\n          console.log(\"Video in setD: \", thisVideo);\n          console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var styleObj = {};\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        styleObj['height'] = height;\n        if (!!video){\n          styleObj['background-image'] = 'url(' + video.mediaThumbUrl + ')';\n          styleObj['background-size'] = 'cover';\n          styleObj['background-position-y'] = setYOffset(video);\n          styleObj['background-position-x'] = setXOffset(video);\n        }\n        if (GEN_DEBUG){\n          console.log(\"Set Dimensions Object: \", styleObj);\n        }\n        return styleObj;\n      }\n\n      function setYOffset(video){\n        var offset;\n        if (!!video.mediaAspectFeed.y){\n          offset = '-' + video.mediaAspectFeed.y + 'px';\n        }\n        else if (!!video.mediaAspectFull.y){\n          offset = '-' + video.mediaAspectFull.y + 'px';\n        }\n        return offset;\n      }\n\n      function setXOffset(video){\n        var offset;\n        if (!!video.mediaAspectFeed.x){\n          offset = '-' + video.mediaAspectFeed.x + 'px';\n        }\n        else if (!!video.mediaAspectFull.x){\n          offset = '-' + video.mediaAspectFull.x + 'px';\n        }\n        return offset;\n      }\n\n    },\n    templateUrl: 'partials/mediaPlayer.html'\n  };\n}]);\n\n","angular.module('TopicModule')\n.directive('embedPlayer', ['$sce', 'UserAgentService',\n  function ($sce, UserAgentService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '='\n    },\n    link: function(scope,elem,attr) {\n\n      scope.isMobileUser = UserAgentService.isMobileUser();\n\n      scope.trustSrcHtml = function(src){\n        return $sce.trustAsHtml(src);\n      }\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (NETWORK_DEBUG){\n          // console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-portrait-9x16\");\n          } else {\n            classStrings.push(\"video-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"video-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"video-landscape-16x9\");\n          } else {\n            classStrings.push(\"video-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, video) {\n        var thesePlayerNodes = elem[0].childNodes;\n        var thisVideo = thesePlayerNodes[0];\n        var thisWidth = $(thisVideo).width();\n        if (GEN_DEBUG){\n          console.log(\"PlayerNodes in setD: \", thesePlayerNodes);\n          console.log(\"Video in setD: \", thisVideo);\n          console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        var iframePlayer = thisVideo.childNodes[0];\n        $(iframePlayer).css('height',height);\n        if (GEN_DEBUG){\n          console.log(\"Setting Height On: \", iframePlayer, height);\n        }\n      }\n\n    },\n    templateUrl: 'partials/embedPlayer.html'\n  };\n}]);","angular.module('TopicModule')\n.directive('imageControl', ['$sce',\n  function ($sce) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '='\n    },\n    link: function(scope,elem,attr) {\n\n      scope.setAspectRatio = function (aspectRatio, orientation) {\n        if (GEN_DEBUG){\n          console.log(\"setAspectRatio: \", aspectRatio, orientation);\n        }\n        var classStrings = [];\n\n        if (orientation === \"portrait\"){\n          if (aspectRatio === 1.778){\n            classStrings.push(\"image-portrait-9x16\");\n          } else {\n            classStrings.push(\"image-portrait-1x2\")\n          }\n        } else if (orientation === \"square\"){\n          classStrings.push(\"image-square\");\n        } else {\n          if (aspectRatio === 1.778){\n            classStrings.push(\"image-landscape-16x9\");\n          } else {\n            classStrings.push(\"image-landscape-2x1\")\n          }\n        }\n        return classStrings;\n      }\n\n      scope.setDimensions = function (aspectRatio, orientation, image) {\n        var thisImage = elem[0].childNodes[0];\n        var thisWidth = $(thisImage).width();\n        if (GEN_DEBUG){\n          console.log(\"Image in setD: \", thisImage);\n          console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var styleObj = {};\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        styleObj['height'] = height;\n        if (!!image){\n          styleObj['background-image'] = 'url(' + image.mediaUrl + ')';\n          styleObj['background-size'] = 'cover';\n          styleObj['background-position-y'] = setOffsets(image, 'y', height) || '';\n          styleObj['background-position-x'] = setOffsets(image, 'x', thisWidth) || '';\n        }\n\n        if (GEN_DEBUG){\n          console.log(\"Set Dimensions Object: \", styleObj);\n        }\n        return styleObj;\n      }\n\n      function setOffsets(image, direction, ref){\n        var offset;\n        var offsetScale; \n        if (direction === 'y'){\n          if (!!image.mediaAspectFeed.y){\n            offsetScale = ref / image.mediaAspectFeed.h;\n            var scaledY = image.mediaAspectFeed.y * offsetScale;\n            offset = '-' + scaledY + 'px';\n          }\n        }\n        if (direction === 'x'){\n          if (!!image.mediaAspectFeed.x){\n            offsetScale = ref / image.mediaAspectFeed.w;\n            var scaledX = image.mediaAspectFeed.x * offsetScale;\n            offset = '-' + scaledX + 'px';\n          }\n        }\n        return offset;\n      }\n\n    },\n    templateUrl: 'partials/imageControl.html'\n  };\n}]);","angular.module('NetworkModule')\n.service('DataService', [\"TopicService\",\"CommentService\",\"ReplyService\",\"ChannelService\",\"SocialService\",\"VideoService\",\n  function (TopicService, CommentService, ReplyService, ChannelService, SocialService, VideoService) {\n  \n  var DATA_TYPE_TOPIC = \"topic\";\n  var DATA_TYPE_COMMENT = \"comment\";\n  var DATA_TYPE_REPLY = \"reply\";\n  var DATA_TYPE_SCORE = \"score\";\n  var DATA_BANT_ID_LENGTH = 16;\n\n  function delegateSetComments(commentsData) \n  { \n    if(commentsData.error){\n      if (NETWORK_DEBUG)\n      console.log(\"Comments Error message from network: \", commentsData.error);\n    }\n    else if(commentsData.push){\n      if(commentsData.method == \"UPSERT\")\n        if(CommentService.updateComment(commentsData) == 0)\n          TopicService.updateCommentCount(1);\n      else if(commentsData.method == \"REMOVE\"){\n        //TODO: Design requirement for how to show a deleted comment\n//        if(CommentService.removeComment(commentsData) == 0)\n//          TopicService.updateCommentCount(-1);  \n      }\n    }\n    else {\n      if(commentsData.method == \"POST\"){\n        var uri = commentsData.uri;\n        if(uri != undefined){\n          var commentId = uri.slice(-DATA_BANT_ID_LENGTH);\n//          console.log(\"Comment ID: \"+ commentId);\n//          console.log(\"uri: \"+ uri);\n          if(uri == \"/v1.0/comment/create\"){\n            CommentService.appendToComments(commentsData);\n            TopicService.updateCommentCount(1);\n          }\n          else{\n            if(CommentService.updateCommentLocalData(uri, commentId) == 0)\n              TopicService.updateCommentCount(-1);\n          }\n        }\n      }\n      else\n        CommentService.setComments(commentsData);\n\n    }\n  }\n\n  function delegateSetTopic(topicData)\n  {\n    if(topicData.error){\n      if (NETWORK_DEBUG)\n      console.log(\"Topic Error message from network: \", topicData.error);\n    }\n    else if(topicData.push){\n      if(topicData.method == \"UPSERT\")\n        TopicService.updateTopic(topicData.data);\n      else if(topicData.method == \"REMOVE\")\n        TopicService.removeTopic(topicData.data);\n    }\n    else\n      TopicService.setTopic(topicData);\n  }\n\n  function delegateSetReplies(replyData)\n  {\n    if(replyData.error){\n      if (NETWORK_DEBUG)\n      console.log(\"Topic Error message from network: \", replyData.error);\n    }\n    else if(replyData.push){\n      if (NETWORK_DEBUG)\n      console.log(\"reply pushed \");\n      if(replyData.method == \"UPSERT\")\n        if(ReplyService.updateReply(replyData) === 0){\n          if(replyData.data != undefined)\n          CommentService.updateReplyCountById(replyData.data.commentId,1);\n        }\n      else if(replyData.method == \"REMOVE\"){\n        //TODO: no action required\n        //ReplyService.removeReply(replyData);\n      }\n    }\n    else {\n      if(replyData.method == \"POST\"){\n        var uri = replyData.uri;\n        if(uri != undefined){\n          var id = uri.slice(-DATA_BANT_ID_LENGTH);\n//          console.log(\"Comment ID: \"+ id);\n//          console.log(\"uri: \"+ uri);\n          if(uri == \"/v1.0/reply/create\"){\n            ReplyService.appendToReplies(replyData);\n            if(replyData.data != undefined)\n              CommentService.updateReplyCountById(replyData.data.commentId, 1);\n          }\n          else{\n            var commentId =  ReplyService.getCommentIdByReply(id);\n            if(ReplyService.updateReplyLocalData(uri, id) == 0)\n              CommentService.updateReplyCountById(commentId, -1);\n          }\n        }\n      }\n      else\n        ReplyService.setReplies(replyData);\n    }\n      \n  }\n  \n  function delegateSetChannel(data) {\n    if(data.error){\n      if (NETWORK_DEBUG)\n      console.log(\"Topic Error message from network: \", data.error);\n    }\n    else {\n      if (NETWORK_DEBUG)\n      console.log(\"delegateSetChannel: \", data);\n      ChannelService.setTopicData(data);\n    }\n  }\n  \n  function delegateSetSocial(data) {\n    if(data.error){\n      if (NETWORK_DEBUG)\n      console.log(\"Social Error message from network: \", data.error);\n    }\n    else {\n      if (NETWORK_DEBUG)\n      console.log(\"SOCIAL GET\");\n      SocialService.setSocialData(data);\n    }\n  }\n\n  function delegateSetVideo(data) {\n    if(data.error){\n      if (NETWORK_DEBUG)\n      console.log(\"Video Error message from network: \", data.error);\n    }\n    else {\n      if (NETWORK_DEBUG)\n      console.log(\"VIDEO GET\");\n      VideoService.setVideoData(data);\n    }\n  }\n\n  return {\n    setVideo:delegateSetVideo,\n    setSocial:delegateSetSocial,\n    setChannel:delegateSetChannel,\n    setTopic:delegateSetTopic,\n    setComments:delegateSetComments,\n    setReplies:delegateSetReplies,\n    setWatchTopic:function(watched){\n      TopicService.setWatchTopic(watched);\n    }\n  };\n\n}]);","angular.module('TopicModule')\n.service('TopicService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\",\n  function (DateUtilityService,Bant,FDSUtility) {\n\n  var TOPIC_BASE_URI = \"/v1.0/topic/show/\";\n  var LIKE_TOPIC_URI = \"/v1.0/topic/like/\";\n  var UNLIKE_TOPIC_URI = \"/v1.0/topic/unlike/\";\n  var WATCH_TOPIC_URI = \"/v1.0/topic/watch/\";\n  \n  var _channelId;\n  var _userType;\n  \n  var _isTopicWatched = false;\n  var _topic;\n  var _topicType;\n  var _id;\n  var _title;\n  var _game;\n  var _status;\n  var _score;\n  var _gameStats;\n  var _links;\n  var _scheduledAt;\n  var observerCallbacks = []; \n  var directComment; //bool flag to indicate whether user tapped on a comment's \"comment\" icon\n\n  function setTopicData(topicData) \n  {\n    if(topicData.data != undefined){\n      if(topicData.data.content != undefined ){\n        _title = topicData.data.content.title;\n      }\n\n\n      _topicType = topicData.data.topicType;\n      if (NETWORK_DEBUG)\n      console.log(\"TOPIC TYPE :\"+_topicType );\n      _id = topicData.data.id;\n      if(_topicType == \"livegame\"){\n        _game = topicData.data.game;\n        if(_game != undefined){\n          _scheduledAt = DateUtilityService.getGameScheduledTime(_game.scheduledAt);\n          _score = _game.score;\n  //        Future game: live == false AND final == false.\n  //        Live game: live == true.\n  //        Past game: final == true.\n          if(_score.live == undefined && _score.final == undefined)\n            _status = \"future\";\n          else if(_score.live == true)\n            _status = \"live\";\n          else if(_score.final == true)\n            _status = \"past\";\n          // console.log(\"GAME Status  :\"+ _status );\n  \n          if(_status == \"live\"){\n            if (NETWORK_DEBUG)\n            console.log(\"_gameStats\" + _score.status);\n            _gameStats = _score.status;\n          }\n        }\n      }\n\n      _topic = Bant.bant(topicData.data);\n      notifyObservers();\n    }\n    else if(topicData.method == \"POST\"){\n\n      //Handle operations dependent on POST\n      if(topicData.uri == WATCH_TOPIC_URI+_id){\n        if(NETWORK_DEBUG)\n          console.log(\"Topic watch success\");\n        _isTopicWatched = true;\n      }\n      else if(topicData.uri == LIKE_TOPIC_URI+_id)\n      {\n        if(NETWORK_DEBUG)\n          console.log(\"Topic liked success\");\n        _topic = Bant.updateBantLiked(_topic, true);\n        notifyObservers();\n      }\n      else if(topicData.uri == UNLIKE_TOPIC_URI+_id){\n        if(NETWORK_DEBUG)\n          console.log(\"Topic unliked success\");\n        _topic = Bant.updateBantLiked(_topic, false);\n        notifyObservers();\n      }\n    }\n  }\n\n  function updateTopicData(scoreData){\n    if (NETWORK_DEBUG)\n    console.log(\"Topic Service scoreData :\" + scoreData)\n    setScoreData(scoreData);\n  }\n\n  function setScoreData(scoreData) \n  {\n    _score = scoreData;\n    //console.log(\"TopicService  insideScore\"+_score );\n    if(_score != undefined){\n      if(_score.live == true){\n        _status = \"live\";\n      }\n      _gameStats = _score.status;\n      if (NETWORK_DEBUG) {\n        console.log(\"Game Points :\" + _score.points[0] + \" : : \"+_score.points[1] );\n        console.log(\"Game Period :\" + _gameStats[0]);\n        console.log(\"Game Period :\" + _gameStats[1]);\n      }\n      notifyObservers();\n    }\n  }\n  \n  function updateCommentCount(value){\n    if (NETWORK_DEBUG)\n    console.log(\"Update comment count: \" + _topic.metrics.comments + \"     Value : \"+ value);\n    if(_topic!= undefined && _topic.metrics != undefined){\n      if(value == 1)\n      _topic.metrics.comments == undefined ? _topic.metrics.comments =1: _topic.metrics.comments = _topic.metrics.comments+1;\n      else\n        _topic.metrics.comments == undefined ? _topic.metrics.comments =0: _topic.metrics.comments = _topic.metrics.comments-1; \n    }\n    notifyObservers();\n  }\n\n  function getTopicRequest(topicId){\n    var uri = TOPIC_BASE_URI+topicId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"GET\",\n        \"uri\": encodeURI(uri)};\n  }\n  function getFollowChannelRequest(){\n    \n    var channelId = 0;\n    if(_topic!= undefined && _topic.owner!= undefined)\n      channelId = _topic.owner.id;\n      _channelId = channelId;\n    var uri = \"/v1.0/channel/follow/\" + channelId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(uri)};\n  }\n  \n  function watchTopicRequest(topicId){\n    var uri = WATCH_TOPIC_URI+topicId;\n\n    return  varTopicParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(uri)};\n  }\n\n  function likeTopicRequest(){\n    if (NETWORK_DEBUG)\n    console.log(\"Like topic request invoked\"+_id);\n    return  varLikeParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(LIKE_TOPIC_URI + _id)};\n\n\n  }\n\n  function unlikeTopicRequest(){\n    return  varLikeParams = {\"rid\": \"topic\",\n        \"timestamp\": new Date().getTime(),\n        \"method\": \"POST\",\n        \"uri\": encodeURI(UNLIKE_TOPIC_URI + _id)};\n\n\n  }\n\n  //call this when you know 'data' has been changed\n  var notifyObservers = function(){\n    angular.forEach(observerCallbacks, function(callback){\n      callback();\n    });\n  };\n  \n  function registerObserverCallback(callback){\n    //register an observer\n    // console.log(\"topic callback registered\");\n    var callbackLength  = observerCallbacks.length;\n    while(callbackLength > 0){\n      callbackLength = observerCallbacks.length;\n      observerCallbacks.pop();\n    }\n    observerCallbacks.push(callback);\n  }\n\n  return {\n    getTopic: function(){ \n      return _topic ;},\n    getTopicId: function(){ \n      return _id ;},\n    getTopicType: function(){ \n      return _topicType ;},\n    getGame: function(){  \n      return _game;},\n    getGameTime: function(){\n      return _scheduledAt;\n    },\n    getTeamA: function(){ \n      if(_game != undefined) {\n        return _game.teams[0];\n      }},\n    getTeamB: function(){ \n      if(_game != undefined) {\n        return _game.teams[1];}\n    },\n    getScoresTitle: function(){   \n      if(_game != undefined && _game.links != undefined) \n        return _game.links[0].title;},\n    getScoresLink: function(){  \n      if((_game != undefined) && (_game.links != undefined)) \n        return _game.links[0].url;},\n    getScore: function(){ \n      if(_score != undefined) \n        return _score;},\n    getGameStatus: function() { \n      return _status;},\n    getGamePeriod: function() { \n      return _gameStats[0];},\n    getGameClock: function() {  \n      return _gameStats[1];},\n//    getSectionType: function(sectionNumber){ \n//    //TODO check for section length\n//    if(sectionNumber == undefined )\n//    return _topic.data.content.sections[0].type;\n//    else\n//    return _topic.data.content.sections[sectionNumber].type\n//    },\n    getChannelId:function(){  \n      if(_topic != undefined) \n        return _topic.owner.id;},\n    getTitle:function(){  \n      return _title;},\n    getHtml:function(){ \n      if(_topic != undefined) \n        return _topic.html},\n//    getMedia:function(){return _media},\n//    getTweet:function(){return _tweet},\n//    getOgp:function(){return _ogp},\n//    getLink:function(){return _link},\n    getTimeCreatedAt:function(){  \n      if(_topic != undefined) \n        return _topic.createdAt},\n    getLiked:function(){  \n      if(_topic != undefined) \n        return _topic.signal.like},\n    getMetrics:function(){  \n      if(_topic != undefined) \n        return _topic.metrics},\n    \n    watchTopicRequest:watchTopicRequest,\n    \n    getLikeTopicRequest:likeTopicRequest,\n    \n    getUnlikeTopicRequest:unlikeTopicRequest,\n    \n    getFollowChannelRequest:getFollowChannelRequest,\n    \n    getTopicRequest:getTopicRequest,\n    \n    isWatchingTopic: function(){ return _isTopicWatched;},\n    \n    setWatchTopic: function(watch){_isTopicWatched = watch;},\n    \n    setTopicId: function(topicId){_id = topicId ;},\n    \n    setChannel: function(channelId){_channelId = channelId; },\n    getChannel: function(){return _channelId ; },\n    \n    setTopic:setTopicData,\n    \n    updateTopic:updateTopicData,\n    \n    updateCommentCount: updateCommentCount,\n    \n    registerObserverCallback:registerObserverCallback,\n    \n    directComment:directComment\n\n  };\n\n}]);","angular.module(\"SplashModule\", [])\n.factory(\"SplashService\", function(){\n  var _hidePeelSplash = true;\n  var _hideSSSplash = true;\n \n  return {\n    hidePeelSplash: function(){\n      return _hidePeelSplash;\n    },\n    hideSSSplash: function(){\n      return _hideSSSplash;\n    },\n    setPeelSplash: function(val){\n      _hidePeelSplash = val;\n    },\n    setSSSplash: function(val){\n      _hideSSSplash = val;\n    }\n  }\n});","angular.module('NetworkModule')\n.factory('CommentService', [\"Bant\",\"DateUtilityService\",\"FDSUtility\",\n  function (Bant,DateUtilityService,FDSUtility) {\n  var LIST_COMMENTS_URI = \"/v1.0/topic/comments/list/\"\n  var SHOW_COMMENT_URI = \"/v1.0/comment/show/\";\n    \n  var POST_COMMENT_URI=\"/v1.0/comment/create\";\n  var UPDATE_COMMNET_URI = \"/v1.0/comment/content/update/\";\n  var PIN_COMMENT_URI = \"/v1.0/comment/pin/\";\n  var DELETE_COMMENT_URI = \"/v1.0/comment/delete/\";\n  \n  var LIKE_COMMENT_URI = \"/v1.0/comment/like/\";\n  var UNLIKE_COMMENT_URI = \"/v1.0/comment/unlike/\";\n\n  var HIDE_COMMENT_URI = \"/v1.0/comment/hide/\";\n  var UNHIDE_COMMENT_URI = \"/v1.0/comment/unhide/\";\n  \n  var FLAG_COMMENT_URI = \"/v1.0/comment/flag/\";\n  var UNFLAG_COMMENT_URI = \"/v1.0/comment/unflag/\";\n  \n  var observerCallbacks = [];\n  var tempObserverCallbacks = [];\n  var _comments = [];\n  var _pinnedComments = 0;\n  var _offset = 0;\n\n  var _loadedComments = false;\n\n  function setComments(commentsData) {\n    //TODO clear comments for complete refresh Comments API\n    _comments = [];\n    tempCommentsData = commentsData.data.results;\n    if(tempCommentsData != undefined && tempCommentsData.length>0){\n      var len = tempCommentsData.length;\n      for(i=0;i<len;i++){\n        var _commentObject = {};\n        _commentObject = Bant.bant(tempCommentsData[i]);\n        if(_commentObject.id != undefined)\n          _comments.push(_commentObject);\n      }\n      if (commentsData.data.prevOffset === \"\"){\n        notifyObservers(true);\n      } else {\n        notifyObservers();\n      }\n      _offset = commentsData.data.nextOffset;\n    }\n    else{\n      //PArticular case when user is on reply page and requires comment by comment ID\n      var data = commentsData.data;\n      if((commentsData.method == \"GET\") &&(commentsData.uri.substring(0,SHOW_COMMENT_URI.length) == SHOW_COMMENT_URI) ){\n        if(NETWORK_DEBUG) console.log(\"Processing Show comment\");\n        var _commentObject = {};\n        _commentObject = Bant.bant(data);\n        if(_commentObject.id != undefined)\n          _comments.push(_commentObject); \n        notifyObservers();\n      }\n    }\n  }\n\n  function appendToComments(postCommentData) {\n    var tempComment = postCommentData.data;\n    if(tempComment!= undefined){\n      var _commentObject = {};\n      _commentObject = Bant.bant(tempComment);\n      if(_commentObject.id != undefined){\n        var i = 0;\n        if(_comments.length >0)\n        while(_comments[i].pin == true)\n          i++; \n        _pinnedComments = i;\n        if(_pinnedComments>0)\n          _comments.splice(i,0,_commentObject);\n        else\n          _comments.unshift(_commentObject);\n      }\n    }\n    notifyObservers();\n  }\n\n\n\n\n  function updateComment(commentData){\n    //if comments ID exist, update it \n    //else append to existing list\n    var commentObj = commentData.data;\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == commentObj.id){\n        //update\n        _comments[i] = Bant.bant(commentObj);\n        return 1;\n      }\n    }\n    appendToComments(commentData);\n    //notifyObservers();\n    if (NETWORK_DEBUG)\n    console.log(\"In Comment Service update comment\");\n    return 0;\n  }\n  \n  function updateLocalData(newData){\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == newData.id){\n        //update\n        _comments[i] = newData;\n        return;\n      }\n    }\n  }\n  \n  function updateLikeCommentWithId(id, liked){\n    if(NETWORK_DEBUG)\n    console.log(\"updateLikeCommentWithId :\"+ id + \"   liked \"+ liked);\n    if((id != undefined)){\n      var tempObject;\n      tempObject = getCommentById(id);\n      tempObject = Bant.updateBantLiked(tempObject, liked);\n      updateLocalData(tempObject);\n\n      notifyObservers();\n    }\n    \n  }\n\n  function removeComment(commentData){\n    var commentObj = commentData.data;\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == commentObj.id){\n        //remove element\n        _comments.splice(i,1);\n        return 0;\n      }\n    }\n    return 1;\n\n  }\n  \n  function getCommentById(id){\n    if(NETWORK_DEBUG) console.log(\"_comments :\"+ _comments.length);\n    for(i=0;i<_comments.length;i++){\n      if(_comments[i].id == id){\n        //remove element\n        return _comments[i];\n      }\n    }\n  }\n\n\n\n\n  //call this when you know 'comments' has been changed\n  var notifyObservers = function(temp){\n    if (temp){\n      angular.forEach(tempObserverCallbacks, function(callback){\n        callback();\n      });\n    } else {\n      angular.forEach(observerCallbacks, function(callback){\n        callback();\n      });\n    }\n  };\n  \n  function registerObserverCallback(callback, temp){\n    //register an observer\n    if (temp){\n      tempObserverCallbacks.push(callback);\n    } else {\n      observerCallbacks.push(callback);\n    }\n  }\n  \n  function commentGetRequest(uri){\n    var queryStr;\n    if (_offset === 0){\n      queryStr = \"?limit=10&offset=\" + _offset;\n    } else {\n      queryStr = \"?offset=\" + _offset;\n    }\n    return  {\"rid\": \"comment\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(uri + queryStr)}\n  }\n  function commentPostRequest(uri){\n    return  {\"rid\": \"comment\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"POST\",\n      \"uri\": encodeURI(uri)}\n  }\n  function getCommentsRequest(commentId){\n    var uri = LIST_COMMENTS_URI+commentId;\n    return  commentGetRequest(uri);\n  }\n  \n  function getCommentByIdRequest(commentId){\n    var uri = SHOW_COMMENT_URI + commentId;\n    return  commentGetRequest(uri);\n  }\n\n  function postCommentRequest(topicId, commentData){\n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData}]},\n          \"topicId\": topicId,\n        };\n    return createCommentParams;\n  }\n  function postCommentRequestForMedia(topicId, commentData, mediaData){\n    var m = {\"media\":[mediaData]};\n    \n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData},{\"type\":\"media\"}]},\n          \n          \"topicId\": topicId,\n        };\n    createCommentParams.data.content.sections[1].media = m.media;\n    if (NETWORK_DEBUG)\n    console.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n    return createCommentParams;\n  }\n\n  function postCommentRequestForShare(topicId, commentData, embedData){\n    var createCommentParams = commentPostRequest(POST_COMMENT_URI);\n    createCommentParams.data =\n        {\n          \"lang\": \"en\", \n          \"content\": {\"sections\":[{\"type\":\"html\",\"html\":commentData},{\"type\":\"embed\"}]},\n          \n          \"topicId\": topicId,\n        };\n    createCommentParams.data.content.sections[1].embed = embedData;\n    if (NETWORK_DEBUG)\n    console.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n    return createCommentParams;\n  }\n\n  function likeCommentRequest(id){\n    return commentPostRequest(LIKE_COMMENT_URI + id);\n\n  }\n\n  function unlikeCommentRequest(id){\n    return commentPostRequest(UNLIKE_COMMENT_URI + id);\n  }\n  \n  function hideCommentRequest(id){\n    return commentPostRequest(HIDE_COMMENT_URI + id);\n\n  }\n\n  function unhideCommentRequest(id){\n    return commentPostRequest(UNHIDE_COMMENT_URI + id);\n  }\n  \n  function flagCommentRequest(id){\n    return commentPostRequest(FLAG_COMMENT_URI + id + \"?reason=spam\");\n\n  }\n\n  function unflagCommentRequest(id){\n    return commentPostRequest(UNFLAG_COMMENT_URI + id);\n  }\n  \n  function deleteCommentRequest(id){\n    return commentPostRequest(DELETE_COMMENT_URI + id);\n  }\n  \n  function isCommentLiked(id){\n    return FDSUtility.isLikedById(_comments,id);\n  }\n  \n  \n  function updateReplyCountById(id, value){\n    if(id != undefined ){\n    //var id = replyData.commentId;\n    var tempStructure = getCommentById(id);\n    if(tempStructure != undefined){\n      if(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.metrics.replies :\"+ tempStructure.metrics.replies);\n      if(value == -1){\n      tempStructure.metrics.replies == undefined ? tempStructure.metrics.replies = 0: tempStructure.metrics.replies = tempStructure.metrics.replies - 1;\n      }\n      else {\n        \n        tempStructure.metrics.replies == undefined ? tempStructure.metrics.replies = 1: tempStructure.metrics.replies = tempStructure.metrics.replies + 1;\n      }\n      updateLocalData(tempStructure); \n       if(NETWORK_DEBUG) console.log(\"found element updated to :\"+ tempStructure  + \" tempStructure.metrics.replies :\"+ tempStructure.metrics.replies);\n    notifyObservers();\n    }\n    }\n    \n  }\n\n  function updateCommentLocalData(uri,id){\n    if(uri == LIKE_COMMENT_URI+id){\n      updateLikeCommentWithId(id, true)\n    }\n    else if(uri == UNLIKE_COMMENT_URI+id){\n      updateLikeCommentWithId(id, false)\n    }\n    else if(uri == DELETE_COMMENT_URI+id){\n      _comments = FDSUtility.deleteById(_comments,id);\n      notifyObservers();\n      return 0;\n    }\n    else if(uri == FLAG_COMMENT_URI+id){\n      _comments = FDSUtility.flagById(_comments, false);\n      }\n    else if(uri == UNFLAG_COMMENT_URI+id){\n      _comments = FDSUtility.flagById(_comments, false);\n    }\n    else if(uri == HIDE_COMMENT_URI+id){\n      _comments = FDSUtility.hideById(_comments, true);\n    }\n    else if(uri == UNHIDE_COMMENT_URI+id){\n      _comments = FDSUtility.hideById(_comments, false);\n    }\n  }\n\n\n  return {\n    comments: function(){\n      return _comments },\n\n      setComments:setComments,\n      updateComment:updateComment,\n      appendToComments:appendToComments,\n      updateLikeCommentWithId:updateLikeCommentWithId,\n      updateCommentLocalData:updateCommentLocalData,\n      updateReplyCountById:updateReplyCountById,\n      removeComment:removeComment,\n      postCommentRequest:postCommentRequest,\n      postCommentRequestForMedia:postCommentRequestForMedia,\n      postCommentRequestForShare:postCommentRequestForShare,\n      getLikeCommentRequest:likeCommentRequest,\n      getUnlikeCommentRequest:unlikeCommentRequest,\n      registerObserverCallback:registerObserverCallback,\n      getCommentsRequest:getCommentsRequest,\n      getCommentById:getCommentById,\n      getCommentByIdRequest:getCommentByIdRequest,\n      deleteCommentRequest:deleteCommentRequest,\n      flagCommentRequest:flagCommentRequest,\n      isCommentLiked:isCommentLiked,\n      getNumPinComments:function(){\n        return _pinnedComments;\n      },\n      loadedComments: function(){\n        return _loadedComments;\n      },\n      setLoadedComments: function(val){\n        _loadedComments = val;\n      }\n  };\n\n}]);","angular.module('SocialModule')\n.factory('VideoService', [\"Bant\",\n\tfunction (Bant) {\n\tvar LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n\tvar observerCallbacks = [];\n\tvar _videoArray = [];\n\tvar _offset = 0;\n\tvar LIMIT = 10;\n\n\n\tfunction setVideoData(videoData) {\n\t\t_videoArray = [];\n\t\tvar tempData = videoData.data.results;\n\t\tvar len = tempData.length;\n\n\t\tif (!!tempData && len > 0){\n\t\t\tfor (i = 0; i < len; i++){\n\t\t\t\tvar _videoObject = Bant.bant(tempData[i]);\n\t\t\t\tif (!!_videoObject.id){\n          \t\t\tvar isNewObject = true;\n          \t\t\tfor(i=0;i<_videoArray.length;i++){\n\t\t\t            if(_videoArray[i].id == _videoObject.id){\n\t\t\t              isNewObject = false;\n\t\t\t              break;\n\t\t\t              }\n            \t\t\t}\n         \t\t\t if(isNewObject)\n\t\t\t\t\t_videoArray.push(_videoObject);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_offset = videoData.data.nextOffset;\n\t\t\tnotifyObservers();\n\t\t}\n\t}\n\n\n\t//call this when you know 'comments' has been changed\n\tvar notifyObservers = function(){\n\t\tangular.forEach(observerCallbacks, function(callback){\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tfunction registerObserverCallback(callback){\n\t\t//register an observer\n\t\tvar callbackLength  = observerCallbacks.length;\n\t\twhile(callbackLength > 0){\n\t\t\tcallbackLength = observerCallbacks.length;\n\t\t\tobserverCallbacks.pop();\n\t\t}\n\t\tobserverCallbacks.push(callback);\n\t}\n\n\tfunction getVideoDataRequest(id, offset){\n\t\tvar reqOffset = _offset;\n\t\tvar request = {\n\t\t\t\"rid\": \"video\",\n\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\"method\": \"GET\",\n\t\t\t\"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset+\"&filter=video\")\n\t\t};\n\t\tif (NETWORK_DEBUG)\n\t\tconsole.log(\"Video Request: \", request);\n\t\treturn request;\n\t}\n\n\treturn {\n\t\tvideoArray: function(){\n\t\t\treturn _videoArray;\n\t\t},\n\t\tresetVideoOffset: function(){\n      _offset = 0;\n    },\n\t\tsetVideoData:setVideoData,\n\t\tgetVideoDataRequest:getVideoDataRequest,\n\t\tregisterObserverCallback:registerObserverCallback\n\t};\n\n}]);","angular.module('NetworkModule')\n.service('DateUtilityService', function () {\n\n\tfunction timeSince(timeStamp) {\n\t\t// console.log(\"timeSatmp\", timeStamp);\n\t\tvar now = new Date();\n\t\tvar createdDate = new Date(timeStamp);\n\t\tsecondsPast = (now.getTime() - createdDate.getTime()) / 1000;\n\t\tif(secondsPast < 60){\n\t\t\treturn 'now';\n\t\t}\n\t\tif(secondsPast < 3600){\n\t\t\treturn parseInt(secondsPast/60) + 'm';\n\t\t}\n\t\tif(secondsPast < 86400){\n\t\t\treturn parseInt(secondsPast/3600) + 'h';\n\t\t}\n\t\tif(secondsPast < 2592000){\n\n\t\t\tvar daysPassed = secondsPast/86400;\n\t\t\treturn Math.floor(daysPassed) + 'd';\n\t\t}\n\t\tif(secondsPast > 2592000){\n\t\t\tday = createdDate.getDate();\n\t\t\tmonth = createdDate.toDateString().match(/ [a-zA-Z]*/)[0].replace(\" \",\"\");\n\t\t\tyear = createdDate.getFullYear() == now.getFullYear() ? \"\" :  \" \"+createdDate.getFullYear();\n\t\t\tif (GEN_DEBUG)\n\t\t\tconsole.log(\"DATE \"+ day + \" \" + month + year);\n\t\t\treturn day + \" \" + month + year;\n\t\t}\n\t}\n\t\n\tfunction gameScheduleTime(timeStamp){\n\t\tvar date_format = '12';\n\t\tvar createdDate = new Date(timeStamp);\n\t\tday = createdDate.getDate();\n\t\tmonth = createdDate.getMonth() + 1;\n\t\thour = createdDate.getHours();\n\t\tvar hour    = createdDate.getHours();  /* Returns the hour (from 0-23) */\n\t\tvar minutes     = createdDate.getMinutes();  /* Returns the minutes (from 0-59) */\n\t\tvar time  = hour;\n\t\tvar ext     = '';\n\t\tvar timeZone = createdDate.toLocaleString('en', {timeZoneName:'short'}).split(' ').pop();\n\n\t\tif(date_format == '12'){\n\t\t    if(hour > 12){\n\t\t        ext = 'PM';\n\t\t        hour = (hour - 12);\n\n\t\t        if(hour < 10){\n\t\t        \ttime = \"0\" + hour;\n\t\t        }else if(hour == 12){\n\t\t            hour = \"00\";\n\t\t            ext = 'AM';\n\t\t        }\n\t\t    }\n\t\t    else if(hour < 12){\n\t\t    \ttime = ((hour < 10) ? \"0\" + hour : hour);\n\t\t        ext = 'AM';\n\t\t    }else if(hour == 12){\n\t\t        ext = 'PM';\n\t\t    }\n\t\t}\n\n\t\tif(minutes < 10){\n\t\t    minutes = \"0\" + minutes; \n\t\t}\n\n\t\ttime = time + \":\" + minutes + ' ' + ext + ' '+timeZone; \n\t\tdate = month+ \"/\" +day;\n\t\tresult = {\"date\":date,\"time\":time};\n\n\t\tif (GEN_DEBUG)\n\t\tconsole.log(\"Scheduled date : \"+ result.date + \"  Scheduled time : \"+result.time);\n\t\t\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\treturn{\n\t\tgetTimeSince:timeSince,\n\t\tgetGameScheduledTime:gameScheduleTime\n\t};\t\n});","angular.module('NetworkModule')\n.factory('Bant', [\"DateUtilityService\",\n  function (DateUtilityService) {\n  var EXTRACT_MEDIA_TYPE_LENGTH = 5;\n  \n  function extractMediaObject (_bantObject, tempMedia){\n    //if Video update\n    _bantObject.mediaType = tempMedia.mediaType.substring(EXTRACT_MEDIA_TYPE_LENGTH,0);\n    if(_bantObject.mediaType ==\"video\"){\n      _bantObject.mediaThumbUrl = tempMedia.thumbUrl;\n    }\n    _bantObject.mediaUrl = tempMedia.url;\n    if(tempMedia.sizes != undefined){\n    _bantObject.mediaAspectFull = tempMedia.sizes[\"full\"];\n    _bantObject.mediaAspect16x9 = tempMedia.sizes[\"16:9\"];\n    _bantObject.mediaAspect1x1 = tempMedia.sizes[\"1:1\"];\n    _bantObject.mediaAspect2x1 = tempMedia.sizes[\"2:1\"];\n    }\n    if(_bantObject.mediaAspect16x9 != undefined){\n      _bantObject.mediaAspectRatio = 1.778;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect16x9;\n      if (_bantObject.mediaAspect16x9.w < _bantObject.mediaAspect16x9.h){\n        _bantObject.mediaOrientation = \"portrait\";\n      } else {\n        _bantObject.mediaOrientation = \"landscape\";\n      }\n    }\n    else if(_bantObject.mediaAspect1x1 != undefined){\n      _bantObject.mediaAspectRatio = 1;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect1x1;\n      _bantObject.mediaOrientation = \"square\";\n    }\n    else if(_bantObject.mediaAspect2x1 != undefined){\n      _bantObject.mediaAspectRatio = 2;\n      _bantObject.mediaAspectFeed = _bantObject.mediaAspect2x1;\n      if (_bantObject.mediaAspect2x1.w < _bantObject.mediaAspect2x1.h){\n        _bantObject.mediaOrientation = \"portrait\";\n      } else {\n        _bantObject.mediaOrientation = \"landscape\";\n      }\n    }\n    if(_bantObject.mediaAspectFeed != undefined){\n      _bantObject.mediaAspectFeed.x == undefined ? 0 : _bantObject.mediaAspectFeed.x;\n      _bantObject.mediaAspectFeed.y == undefined ? 0 : _bantObject.mediaAspectFeed.y;\n      _bantObject.mediaAspectFeed.w == undefined ? 0 : _bantObject.mediaAspectFeed.w;\n      _bantObject.mediaAspectFeed.h == undefined ? 0 : _bantObject.mediaAspectFeed.h;\n    }\n    if(_bantObject.mediaAspectFull != undefined){\n      _bantObject.mediaAspectFull.x == undefined ? 0 : _bantObject.mediaAspectFull.x;\n      _bantObject.mediaAspectFull.y == undefined ? 0 : _bantObject.mediaAspectFull.y;\n      _bantObject.mediaAspectFull.w == undefined ? 0 : _bantObject.mediaAspectFull.w;\n      _bantObject.mediaAspectFull.h == undefined ? 0 : _bantObject.mediaAspectFull.h;\n    }\n    return _bantObject;\n  }\n  \n  function extractEmbedObject(_bantObject, embedObject){\n//    Type      string        `json:\"type,omitempty\"`      // Type: \"link\", \"media\" or \"html\".\n//    Title     string        `json:\"title,omitempty\"`     // Title.\n//    Text      string        `json:\"text,omitempty\"`      // Text.\n//    Media     []Media       `json:\"media,omitempty\"`     // List of images or videos.\n//    Url       string        `json:\"url,omitempty\"`       // URL.\n//    Playable  bool          `json:\"playable,omitempty\"`  // Link contains playable content such as video.\n//    Html      string        `json:\"html,omitempty\"`      // HTML code to embed.\n//    Mini      bool          `json:\"mini,omitempty\"`      // Use mini display format.\n//    Author    EmbedAuthor   `json:\"author,omitempty\"`    // Author info.\n//    Provider  EmbedProvider `json:\"provider,omitempty\"`  // Provider info.\n//    CreatedAt string        `json:\"createdAt,omitempty\"` // Publication time in RFC3339 format.\n    _bantObject.embedType = embedObject.type;\n    _bantObject.embedTitle = embedObject.title;\n    _bantObject.embedText = embedObject.text;\n    _bantObject.embedMedia = {};\n    if(embedObject.type === 'media' || embedObject.type === 'link'){\n      // console.log(\"*****!!embedObject.media\",embedObject.media,embedObject);\n      if (embedObject.media){\n        _bantObject.embedMedia = extractMediaObject(_bantObject.embedMedia, embedObject.media[0]);\n      }\n    }\n    _bantObject.embedUrl = embedObject.url;\n    _bantObject.embedPlayable = embedObject.playable;\n    _bantObject.embedHtml = embedObject.html;\n    _bantObject.embedMetrics = embedObject.metrics;\n    _bantObject.embedMini = embedObject.mini;\n    _bantObject.embedAuthor = embedObject.author;\n    _bantObject.embedProvider = embedObject.provider;\n    _bantObject.embedCreatedAt = DateUtilityService.getTimeSince(embedObject.createdAt);\n    _bantObject.embedCreatedAtFull = embedObject.createdAt;\n    \n    \n    return _bantObject;\n\n  }\n\n  function Bant(data){\n    var _bantObject = {};\n    _bantObject.id = data.id;\n    _bantObject.author = data.author;\n    _bantObject.owner = data.owner;\n    if(data.content.sections != undefined){\n      _bantObject.sectionsLength = data.content.sections.length;\n\n      for(j=0;j<_bantObject.sectionsLength;j++){\n        _bantObject.type = data.content.sections[j].type;\n        if(_bantObject.type == \"html\")\n          _bantObject.html = data.content.sections[j].html;\n\n        if(_bantObject.type == \"media\"){\n          _bantObject.media = data.content.sections[j].media;\n          _bantObject = extractMediaObject(_bantObject, _bantObject.media[0]);\n        }\n        if(_bantObject.type == \"embed\" || _bantObject.type == \"tweet\"){\n          if (data.content.sections[j].embed !== null){\n            // console.log(\"!!!!!Fiding ID:\",data.content.sections[j]);\n            _bantObject = extractEmbedObject(_bantObject,data.content.sections[j].embed);\n            _bantObject.embed = data.content.sections[j].embed;\n          }\n        }\n        _bantObject.tweet = data.content.sections[j].tweet;\n        _bantObject.ogp = data.content.sections[j].ogp;\n        _bantObject.link = data.content.sections[j].link;\n      }\n    }\n    _bantObject.signal = data.signal;\n    if(_bantObject.signal == undefined){\n      var likeObject = {like:false};\n      _bantObject.signal = likeObject;\n    }\n    else if(_bantObject.signal.like == undefined)\n      _bantObject.signal.like = false;\n    _bantObject.metrics = data.metrics;\n    _bantObject.createdAtFull = data.createdAt;\n    _bantObject.createdAt = DateUtilityService.getTimeSince(data.createdAt);\n    _bantObject.pin = data.pin;\n    _bantObject.commentId = data.commentId;\n    _bantObject.topicId = data.topicId;\n    \n    return _bantObject;\n\n  }\n  \n  \n  \n  function updateBantLiked(data, liked){\n    //if same state, dont do anything\n    if(data.signal.like == liked){\n      if(NETWORK_DEBUG)\n        console.log(\"no need to change   data.signal.like:\"+ data.signal.like);\n      return data;\n    }\n    if(liked){\n      //update like status\n      data.signal.like = true;\n      //increment like count.\n      (data.metrics.likes == undefined) ? data.metrics.likes = 1: data.metrics.likes = (data.metrics.likes + 1);\n    }\n    else{\n      //update like status\n      data.signal.like = false;\n      //decrement like count.\n      if(data.metrics.likes != undefined) \n      data.metrics.likes = (data.metrics.likes - 1);\n    }\n    if(NETWORK_DEBUG)\n      console.log(\"data.metrics.likes :\"+ data.metrics.likes);\n    return data;\n  }\n\n  return {\n    bant: Bant,\n    updateBantLiked : updateBantLiked\n  };\n\n}]);","angular.module('NetworkModule')\n.factory('UserInfoService', [\"ForumStorage\",\"URIHelper\",\n\tfunction (ForumStorage, URIHelper) {\n\t//OLD Creds userId=1, sessionId=dac24379, accessToken=7uFF3QGh-84=\n\t//NEW Creds userId=193, sessionId=53d7b518, accessToken=dsKGKXyZgGs=\n\tvar _userInfo = {};\n\tvar userInfoTemp = {\n\t\t\t\"userId\":\"193\",\n\t\t\t\"accessToken\":\"dsKGKXyZgGs=\",\n\t\t\t\"sessionId\":\"53d7b518\"\n\t};\n\tvar _isUserLoggedIn = false;\n\tvar _userType = \"\";\n\n//\tvar userInfoTemp = {\n//\t\"userId\":\"204\",\n//\t\"accessToken\":\"_uO41ylA_xs=\",\n//\t\"sessionId\":\"b7427f4a\"\n//\t};\n\n\tfunction getUserCredentials(){\n\t\tif(_userInfo == undefined){\n\t\t\tif (NETWORK_DEBUG)\n\t\t\tconsole.log(\"UserInfoService : UserId is not defined , using static user, TODO : Remove this for release build\");\n\t\t\t_userInfo = userInfoTemp;\n\t\t\treturn userInfoTemp;\n\t\t}\n\n\t\treturn _userInfo;\n\t}\n\n\tfunction isCurrentUser(id){\n\t\t//console.log(\"Current user id  && id :\"+_userInfo.userId + \" :   \"+ id);\n\t\tif(id == _userInfo.userId)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tfunction setUserCredentials(userId, accessToken, sessionId, userType){\n\t\tif (NETWORK_DEBUG)\n\t\tconsole.log(\"setUserCredentials: \", userId, accessToken, sessionId, userType);\n\t\t// _userInfo = {};\n\t\t_userInfo.userId = userId;\n\t\t_userInfo.accessToken = accessToken;\n\t\t_userInfo.sessionId = sessionId;\n\t\t_isUserLoggedIn = true;\n\t\t_userInfo.userType = userType;\n\t\t// ForumStorage.clearStorage();\n\t\tForumStorage.setToLocalStorage(\"forumIsLoggedIn\",_isUserLoggedIn);\n\t\tForumStorage.setToLocalStorage(\"forumUserId\",userId);\n\t\tForumStorage.setToLocalStorage(\"forumAccessToken\",accessToken);\n\t\tForumStorage.setToLocalStorage(\"forumSessionId\",sessionId);\n\t\tForumStorage.setToLocalStorage(\"forumUserType\",userType);\n\n\t\t// console.log(\"this.userInfo.userId :\"+ _userInfo.userId);\n\t}\n\n\tfunction hasUserVisited() {\n\t\treturn ForumStorage.getFromLocalStorage(\"hasUserVisited\") ? true : false;\n\t}\n\n\treturn{\n\t\tgetUserCredentials:getUserCredentials,\n\t\tsetUserCredentials:setUserCredentials,\n\t\tisCurrentUser:isCurrentUser,\n\t\thasUserVisited: hasUserVisited,\n\t\tisUserLoggedIn:function(){\n\n\t\t\t//console.log(\"cached : is user logged in : \"+_isUserLoggedIn);\n\t\t\tif(_isUserLoggedIn)\n\t\t\t\treturn true;\n\t\t\telse{\n//\t\t\t\tvar islogged = ForumStorage.getFromLocalStorage(\"forumIsLoggedIn\");\n//\t\t\t\tconsole.log(\"storage : is user logged in : \"+islogged);\n\t\t\t\tif(ForumStorage.getFromLocalStorage(\"forumIsLoggedIn\"))\n\t\t\t\t{\n\t\t\t\t\t_userInfo = {};\n\t\t\t\t\t_userInfo.userId = ForumStorage.getFromLocalStorage(\"forumUserId\");\n\t\t\t\t\t_userInfo.accessToken = ForumStorage.getFromLocalStorage(\"forumAccessToken\");\n\t\t\t\t\t_userInfo.sessionId = ForumStorage.getFromLocalStorage(\"forumSessionId\");\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tisPeelUser:function(){\n\t\t\tURIHelper.isPeelUser();\n\t\t\tif (NETWORK_DEBUG)\n\t\t\tconsole.log(\"ForumStorage.getFromLocalStorage: \"+ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(_userInfo.userType === \"peel\")\n\t\t\t\treturn true;\n\t\t\tif(ForumStorage.getFromLocalStorage(\"forumUserType\") === \"peel\")\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t},\n\t\tisSmartStadiumUser:function(){\n\t\t\tvar ssUser = URIHelper.isSmartStadiumUser();\n\t\t\tif (NETWORK_DEBUG)\n\t\t\tconsole.log(\"ForumStorage.getFromLocalStorage: \", ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(ssUser){\n\t\t\t\t_userInfo.userType = 'email';\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(_userInfo.userType === \"email\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (ForumStorage.getFromLocalStorage(\"forumUserType\") === \"email\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tisMI16User:function(){\n\t\t\tvar MI16User = URIHelper.isTechMUser();\n\t\t\tif (NETWORK_DEBUG)\n\t\t\tconsole.log(\"ForumStorage.getFromLocalStorage: \", ForumStorage.getFromLocalStorage(\"forumUserType\"));\n\t\t\tif(MI16User){\n\t\t\t\t_userInfo.userType = 'MI16';\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(_userInfo.userType === \"MI16\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (ForumStorage.getFromLocalStorage(\"forumUserType\") === \"MI16\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetUserType:function(){\n\t\t\tif (NETWORK_DEBUG)\n\t\t\tconsole.log(\"UIS _userType - - - \", _userInfo.userType);\n\t\t\treturn _userInfo.userType;\n\t\t},\n\t\tisGuestUser:function(){\n\t\t\tif (NETWORK_DEBUG)\n\t\t\tconsole.log(\"UIS _userType - - - \", _userInfo.userType);\n\t\t\tif(_userInfo.userType === \"guest\" || ForumStorage.getFromLocalStorage(\"forumUserType\") === \"guest\")\n\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\n\t};\n\n}]);","angular.module('AuthModule')\n.factory(\"AuthService\", [\"$http\",\"$window\",\"$location\",\"UserInfoService\", \"TopicService\", \"ReplyService\", \"networkService\", \"ForumDeviceInfo\", \"ChannelService\", \"URIHelper\", \n  function ($http, $window, $location, UserInfoService, TopicService, ReplyService, networkService, ForumDeviceInfo, ChannelService, URIHelper) {\n\n  var userLoggedInToFacebook = false;\n\n  var loginAsGuest = function() {\n  if (NETWORK_DEBUG)\n  console.log(\"Logging in as Guest\");\n    var userData = {};\n    userData.id = ForumDeviceInfo.getDeviceId();\n    userData.userName = \"GuestUser\";\n\n    var registerParams = setRegistrationParams(\"guest\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var loginToFacebook = function(callback) {\n    FB.login(function (response) {\n      if (response.status === 'connected') {\n        callback();\n        var registerParams = setRegistrationParams(\"facebook\", -25200, response.authResponse);\n        registerUser(registerParams);\n      }\n    });\n  };\n\n  var loginWithPeel = function() {\n    var userData = {};\n    userData.id = URIHelper.getPeelUserId();\n    userData.userName = URIHelper.getPeelUserName();\n\n    var registerParams = setRegistrationParams(\"peel\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var loginWithEmail = function() {\n    var userData = {\n      \"id\": URIHelper.getSSUserId(),\n      \"userName\": URIHelper.getSSUserName()\n    };\n\n    var registerParams = setRegistrationParams(\"email\", -28800, userData);\n    registerUser(registerParams);\n  };\n\n  var techMLogin = function (name, email) {\n    var userData = {\n      \"id\": email,\n      \"userName\": name\n    };\n    if (NETWORK_DEBUG)\n    console.log(\"techMLogin: \", userData);\n    var registerParams = setRegistrationParams(\"email\", -28800, userData);\n    registerUser(registerParams, true);\n  };\n\n  var setRegistrationParams = function (type, utcOffset, userData) {\n    var deviceId = ForumDeviceInfo.getDeviceId();\n    var registerParams = {\n      \"type\": type,\n      \"locale\": \"en_US\",\n      \"utcOffset\": utcOffset,\n      \"deviceType\": \"web\",\n      \"deviceId\": deviceId,\n      \"deviceModel\": \"browser\",\n      \"appKey\": \"testKey\",\n      \"appVersion\": \"1.0\"\n    };\n\n    if (type === 'facebook'){\n      registerParams.facebook = {\n        \"id\": userData.userID,\n        \"accessToken\": userData.accessToken\n      };\n    } else if (type === 'peel'){\n      registerParams.peel = {\n        \"id\": userData.id,\n        \"name\": userData.userName\n      }; \n    } else if (type === 'email'){\n      registerParams.email = {\n        \"id\": userData.id,\n        \"name\": userData.userName\n      }\n    }\n    return registerParams;\n  };\n\n  var registerUser = function(registerParams, isMI16) {\n    // Post request to our api to register/retrieve user\n    var userType = registerParams.type;\n    if (isMI16){\n      userType = 'MI16';\n    }\n    $http.post(REGISTER_SERVER_URI, JSON.stringify(registerParams))\n      .then(function (response) {\n        if (response.status === 200) {\n          if (NETWORK_DEBUG)\n          console.log(\"Successfully Registered User of Type: \" + userType);\n          if (registerParams.type === 'facebook'){\n            userLoggedInToFacebook = true;\n          }\n\n          // Store user credentials in Local Storage\n          UserInfoService.setUserCredentials(\n            response.data.userId, \n            response.data.accessToken, \n            response.data.sessionId,\n            userType);\n        }\n      },\n      function (response) {\n        if (NETWORK_DEBUG)\n        console.log('Registration Error: ', response);\n      }).then(function (response) {\n        initializeContent();\n      });\n  };\n\n  var initializeContent = function() {\n    if (NETWORK_DEBUG)\n    console.log(\"Initializing Content\");\n    // Initialize Network Service and determine what type of resource is being accessed\n    networkService.init();\n\n    var initChannel = ChannelService.getChannel();\n    var initTopic = TopicService.getTopicId();\n\n    if (!!initChannel) {\n      if (NETWORK_DEBUG)\n      console.log(\"found channel ID: \" + initChannel);\n      networkService.send(ChannelService.getLiveGameTopic(initChannel));\n    }\n    else if (!!initTopic) {\n      if (NETWORK_DEBUG)\n      console.log(\"found Topic ID: \" + initTopic);\n      if (HTML5_LOC){\n        $location.path(\"/topic/\" + initTopic);\n      } else {\n        $window.location = \"#/topic/\" + initTopic;\n      }\n    }\n    else {\n      var initPost = ReplyService.getPostId();\n      if (!!initPost){\n        if (NETWORK_DEBUG)\n        console.log(\"found post ID: \" + initPost);\n        if (HTML5_LOC){\n          $location.path(\"/post/\" + initPost);\n        } else {\n          $window.location = \"#/post/\" + initPost;\n        }\n      }\n    }\n  };\n\n  return {\n    loginAsGuest:loginAsGuest,\n    loginToFacebook: loginToFacebook,\n    loginWithPeel: loginWithPeel,\n    loginWithEmail: loginWithEmail,\n    techMLogin: techMLogin,\n    setRegistrationParams: setRegistrationParams,\n    registerUser: registerUser,\n    initializeContent: initializeContent,\n    userLoggedInToFacebook: userLoggedInToFacebook\n  };\n\n}]);\n","angular.module('NetworkModule')\n.service('StaticData', function () {\n\t//TODO: Static data used for Demo, remove this once the Development is complete\n\tvar postAuthors = [\n\t                   {\n\t                \t   \"photo\":\"ana.png\",\n\t                \t   \"name\":\"Ana\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"arod.png\",\n\t                \t   \"name\":\"A-Rod\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"cristiano.png\",\n\t                \t   \"name\":\"Cristiano\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"derek.png\",\n\t                \t   \"name\":\"Derek\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"dwayne.png\",\n\t                \t   \"name\":\"Dwayne\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"erin.png\",\n\t                \t   \"name\":\"Erin\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"jordan.png\",\n\t                \t   \"name\":\"Michael\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"lebron.png\",\n\t                \t   \"name\":\"Lebron\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"lionel.png\",\n\t                \t   \"name\":\"Lionel\"\n\t                   },\n\t                   {\n\t                \t   \"photo\":\"maria.png\",\n\t                \t   \"name\":\"Maria\"\n\t                   }\n\t                   ];\n\n\tvar loremIpsum = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\";\n\tvar postTypes = [\"text\", \"text\", \"text\", \"photo\", \"video\"];\n\n\tfunction getPostsForTopicID()\n\t{\n\t\tvar staticPosts = [];\n\n\t\tvar fakePhotos = [\"fakePhoto1.jpg\", \"fakePhoto2.jpg\", \"fakePhoto3.jpg\", \"fakePhoto4.jpg\", \"fakePhoto5.jpg\", \"fakePhoto6.jpg\"];\n\t\tvar usedFakePhotos = 0;\n\n\t\tvar fakeVideos = [\"fakeVideo1.jpg\", \"fakeVideo2.jpg\", \"fakeVideo3.jpg\"];\n\t\tvar usedFakeVideos = 0;\n\n\t\tvar peelDemoData = [\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Will this be the year Kaep teaches Sherman a lesson or will Kaep get schooled again?\",\n\t\t                    \t\"postMedia\":\"fakePhoto1.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Remember Kyle Williams - for some reason, I am having recurring nightmares about him again - weird but true:(\",\n\t\t                    \t\"postMedia\":\"fakeVideo1.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Will Kaep be given a free reign to do whatever he wants? Please don't make him a pocket passer because HE IS NOT ONE\",\n\t\t                    \t\"postMedia\":\"fakePhoto2.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Running back of the 9ers this season truly scares the hell out of me - thoughts?\",\n\t\t                    \t\"postMedia\":\"fakeVideo2.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"video\",\n\t\t                    \t\"postContent\":\"Will our defense save us again? We have seen that this offense needs lot of help:(\",\n\t\t                    \t\"postMedia\":\"fakeVideo3.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"photo\",\n\t\t                    \t\"postContent\":\"Can't wait for this game - gets me want to kick Seahawks every time we play them\",\n\t\t                    \t\"postMedia\":\"fakePhoto3.jpg\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Jimmy Graham is going to be such a formidable match-up for our secondary. Not sure if we have the personnel to cover him. Hate the fact that the saehawks offense just got whole lot better this year\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"From contenders to last in the league - reasons for our free fall down the ranks\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"One more drubbing - when are we going to be good again?\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"How do we always fuck up the second half? It is always the take of two halves with us this year. Sucks\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Are you fuckin kidding me - how did we miss that tackle? Why do we keep messing up defensively during 3rd and long? That is the 5th 3rd and long conversion for the Hawks.. Come on DDDDD\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"Time to talk about the next season already? Sure nothing is going to change and we are going to suck again.. \",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    },\n\t\t                    {\n\t\t                    \t\"type\":\"text\",\n\t\t                    \t\"postContent\":\"We miss Aldon Smith so much - we absolutely don't have an edge rusher.. what a jack-ass.. blew away so much second chances:(\",\n\t\t                    \t\"postMedia\":\"\"\n\t\t                    }\n\t\t                    ]\n\n\t\tfor(var i = 0 ; i < peelDemoData.length ; i++)\n\t\t{\n\t\t\tvar peelPost = peelDemoData[i];\n\t\t\tvar fakePost = new Object();\n\t\t\tfakePost.postID = i;\n\t\t\tvar minimumCharacterCount = 20\n\t\t\tvar randomCharacterCount = minimumCharacterCount + Math.round(Math.random() * (loremIpsum.length - minimumCharacterCount));\n\t\t\t// console.log(\"random character count: \" + randomCharacterCount);\n\t\t\tvar loremIpsumSubstring = loremIpsum.substring(0, randomCharacterCount);\n\t\t\t// console.log(\"-> \" + loremIpsumSubstring);\n\t\t\tfakePost.postContent = peelPost.postContent;//loremIpsumSubstring\n\t\t\tvar postType = peelPost.type;//postTypes[Math.floor(Math.random() * postTypes.length)];\n\t\t\tfakePost.postType = postType;\n\t\t\tif(postType == \"photo\")\n\t\t\t{\n\t\t\t\tvar fakePhoto = fakePhotos[usedFakePhotos % fakePhotos.length];\n\t\t\t\tfakePost.photo = fakePhoto;\n\t\t\t\t// peelPost.photo = peelPost.postMedia\n\t\t\t\tusedFakePhotos++;\n\t\t\t}\n\t\t\telse if(postType == \"video\")\n\t\t\t{\n\t\t\t\tvar fakeVideo = fakeVideos[usedFakeVideos % fakeVideos.length];\n\t\t\t\tfakePost.video = fakeVideo;\n\t\t\t\t// peelPost.video = peelPost.postMedia\n\t\t\t\tusedFakeVideos++;\n\t\t\t}\n\n\t\t\tvar author = postAuthors[i % postAuthors.length];\n\t\t\tfakePost.postAuthorPhoto = author.photo;\n\t\t\tpeelPost.postAuthorPhoto = author.photo;\n\t\t\tfakePost.postAuthorName = author.name;\n\t\t\tpeelPost.postAuthorName = author.name;\n\n\t\t\tfakePost.likeCount = Math.floor(Math.random() * 100);\n\t\t\tpeelPost.likeCount = Math.floor(Math.random() * 100);\n\t\t\tfakePost.commentCount = Math.floor(Math.random() * 500);\n\t\t\tpeelPost.commentCount = Math.floor(Math.random() * 500);\n\n\t\t\t// console.log(\"fake post \" + i + \" :  \" + JSON.stringify(fakePost));\n\t\t\t// console.log(\"fake post \" + i + \" :  \" + JSON.stringify(peelPost));\n\n\t\t\t// staticPosts.push(fakePost);\n\t\t\tstaticPosts.push(peelPost);\n\t\t}\n\t\treturn staticPosts\n\t}\n\n\tfunction getRepliesForPostID()\n\t{\n\t\t/*\n\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"0\",\n\t\t\t\t\t\t\"replyContent\":\"reply A\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"1\",\n\t\t\t\t\t\t\"replyContent\":\"reply B\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"2\",\n\t\t\t\t\t\t\"replyContent\":\"reply C\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"3\",\n\t\t\t\t\t\t\"replyContent\":\"reply D\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"replyID\":\"4\",\n\t\t\t\t\t\t\"replyContent\":\"reply E\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t */\n\n\t\tvar fakeReplies = [];\n\t\tfor(var i = 0 ; i < 10 ; i++)\n\t\t{\n\t\t\tvar fakeReply = new Object();\n\t\t\tfakeReply.postID = i;\n\t\t\tvar minimumCharacterCount = 20\n\t\t\tvar randomCharacterCount = minimumCharacterCount + Math.round(Math.random() * (loremIpsum.length - minimumCharacterCount));\n\t\t\t// console.log(\"random character count: \" + randomCharacterCount);\n\t\t\tvar loremIpsumSubstring = loremIpsum.substring(0, randomCharacterCount);\n\t\t\t// console.log(\"-> \" + loremIpsumSubstring);\n\t\t\tfakeReply.replyContent = loremIpsumSubstring\n\t\t\tfakeReply.replyType = \"text\";\n\n\t\t\tvar author = postAuthors[i % postAuthors.length];\n\t\t\tfakeReply.postAuthorPhoto = author.photo;\n\t\t\tfakeReply.postAuthorName = author.name;\n\n\t\t\tfakeReply.likeCount = Math.floor(Math.random() * 100);\n\t\t\tfakeReply.commentCount = Math.floor(Math.random() * 500);\n\n\t\t\t// staticPosts.push(fakePost);\n\t\t\tfakeReplies.push(fakeReply);\n\t\t}\n\n\t\treturn fakeReplies\n\t}\n\t\n\treturn{\n\tgetPostsForTopicID:getPostsForTopicID,\n\tgetRepliesForPostID:getRepliesForPostID\n\t}\n});","angular.module('NetworkModule')\n.factory('FDSUtility', function () {\n\t\n\tfunction getStructureById(array, id){\n\t\tif(NETWORK_DEBUG) console.log(\"structureLengths :\"+ array.length);\n\t\tfor(i=0;i<array.length;i++){\n\t\t\tif(array[i].id == id){\n\t\t\t\treturn array[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getIndexById(array, id){\n\t\tif(NETWORK_DEBUG) console.log(\"structureLengths :\"+ array.length);\n\t\tfor(i=0;i<array.length;i++){\n\t\t\tif(array[i].id == id){\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t\n\tfunction isLikedById(array, id){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.like :\"+ tempStructure.signal.like);\n\t\t\tif(tempStructure.signal.like == true){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction isFlaggedById(array, id){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.flag :\"+ tempStructure.signal.flag);\n\t\t\tif(tempStructure.signal.flag == true){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t}\n\t\treturn false;\n\t}\n\n\t\n\tfunction flagById(array, id, flag){\n\t\tvar tempStructure = getStructureById(array,id);\n\t\tif(tempStructure != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element :\"+ tempStructure  + \" tempStructure.signal.flag :\"+ tempStructure.signal.flag);\n\t\t\ttempStructure.signal.flag = flag;\n\t\t\t}\n\t}\n\t\n\t\n\tfunction deleteById(array, id){\n\t\tvar index = getIndexById(array,id);\n\t\t\n\t\tif(index != -1){\n\t\t\tif(NETWORK_DEBUG) console.log(\"found element at:\"+index );\n\t\t\tarray.splice(index,1);\n\t\t\t}\n\t\treturn array;\n\t}\n\n\treturn {\n\t\tisLikedById:isLikedById,\n\t\tisFlaggedById:isFlaggedById,\n\t\tflagById:flagById,\n\t\tdeleteById:deleteById\n\t\t\n\t\t\n\t};\n\n});","angular.module('MediaModule', ['angularFileUpload', 'NetworkModule', 'TopicModule'])\n.factory('MUService',  function () {\n\tvar POST_COMMENT_URI=\"/v1.0/comment/create\";\n\tvar POST_REPLY_URI=\"/v1.0/reply/create\";\n\tvar isComment = true;\n\tvar commentText = \"\";\n\tvar topicId = \"\";\n\tvar commentId = \"\";\n\tvar replyId = \"\";\n\n\tfunction commentPostRequest(){\n\t\tvar createCommentParams = {\"rid\": \"comment\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(POST_COMMENT_URI)};\n\t\tcreateCommentParams.data =\n\t\t{\n\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\"topicId\": topicId,\n\t\t};\n\t\tif(!isComment){\n\t\t\tcreateCommentParams = {\"rid\": \"reply\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(POST_REPLY_URI)};\n\t\t\tcreateCommentParams.data =\n\t\t\t{\n\t\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\t\"topicId\": topicId,\n\t\t\t};\n\t\t\tcreateCommentParams.data.target = {\n\t\t\t\t\t\"type\": \"comment\", // Target type: “comment” or “reply”.\n\t\t\t\t\t\"id\": commentId,  // Target bant ID of comment or reply.\n\t\t\t};\n\n\t\t\tcreateCommentParams.data.commentId = commentId;\n\t\t}\n\t\treturn createCommentParams;\n\t}\n\n\tfunction setCommentParams(tId,text,isCom,comId,repId){\n\t\tif (text === undefined){\n\t\t\ttext = \"\";\n\t\t}\n\t\tif (NETWORK_DEBUG)\n\t\tconsole.log(\"Setting Comment Params: \", tId, text, isCom, comId, repId);\n\t\ttopicId = tId;\n\t\tcommentText = text;\n\t\tisComment = isCom;\n\t\t\n\t\tcommentId = comId;\n\t\treplyId = repId;\n\t}\n\n\tfunction postMediaRequest(mediaData){\n\t\tvar m = {\"media\":[mediaData]};\n\t\tvar sections = [];\n\t\tif(commentText !== undefined){\n\t\t\tsections.push({\"type\": \"html\",\"html\":commentText});\n\t\t}\n\t\tsections.push({\"type\": \"media\", \"media\" : m.media});\n\n\t\tvar createCommentParams = commentPostRequest();\n\t\t\n\t\tvar content =  {\"sections\": sections};\n\t\tcreateCommentParams.data.content = content;\n\t\tif (NETWORK_DEBUG)\n\t\tconsole.log(\"Media comment Request :\"+ JSON.stringify(createCommentParams, null, 10));\n\t\treturn createCommentParams;\n\t}\n\treturn {\n\t\tpostMediaRequest:postMediaRequest,\n\t\tsetCommentParams:setCommentParams,\n\t\tresetCommentParams:function(){\n\t\t\ttopicId = \"\";\n\t\t\tcommentId = \"\";\n\t\t\tcommentText = \"\";\n\t\t}\n\t}\n});\n"],"sourceRoot":"/source/"}