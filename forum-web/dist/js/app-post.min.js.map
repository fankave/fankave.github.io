{"version":3,"sources":["PostController.js","SmartStadiumController.js","MediaDirectives.js","EmbedPlayer.js","ImageControl.js","SocialDirectives.js","DimensionService.js","TimerService.js","ReplyService.js","VideoService.js","SocialService.js"],"names":["angular","module","controller","$scope","$sce","$timeout","$window","$location","$sanitize","$routeParams","networkService","ReplyService","TopicService","CommentService","UserInfoService","URIHelper","SplashService","MUService","FileUploader","ForumStorage","UserAgentService","updateScore","leftTeam","getTeamA","rightTeam","getTeamB","score","getScore","undefined","leftTeamScore","points","rightTeamScore","gameStatus","getGameStatus","topicTitle","getTitle","gamePeriod","getGamePeriod","gameClock","getGameClock","updateCommentInReply","selectedComment","GEN_DEBUG","console","log","postID","getPostId","getCommentById","NETWORK_DEBUG","tempComment","postAuthorName","author","name","postAuthorPhoto","photo","postTimestamp","createdAt","likeCount","metrics","likes","replyCount","replies","mediaAspectFeed","isLiked","signal","like","topicId","isMyComment","isCurrentUser","id","type","mediaUrl","mediaAspectFull","mediaAspectRatio","mediaOrientation","mediaThumbUrl","shared","embed","embedCreatedAt","embedCreatedAtFull","embedType","embedMedia","providerName","embedLogo","provider","logo","playable","embedHtml","comment","updateReplies","repliesData","len","length","i","tempReply","isMyReply","trustAsHtml","push","justReplied","setTimeout","window","scrollTo","document","body","scrollHeight","isMobileUser","mobileBrowser","mobileUserAgent","getMobileUserAgent","toggleFromPost","getFromLocalStorage","initPage","pageClass","getTopicId","setPostId","backToTopicButtonTapped","location","href","indexOf","urlQueryStr","slice","url","setPeelUI","userType","peelShowId","$","css","isPeelUser","getPeelShowId","hidePeelSplash","isSmartStadiumUser","isMI16User","isMWCUser","techMUser","requestReplies","send","getRepliesRequest","getCommentByIdRequest","peelClose","peelWatchOnTV","GOOGLE_ANALYTICS","ga","showId","showNewRepliesIndicator","newRepliesIndicatorTapped","checkDirectReply","directComment","focus","triggerRepliesKeyboard","secureLink","isGuestUser","initReplyPage","paddingTop","height","getElementById","style","paddingBottom","$watch","newValue","oldValue","replyDivs","getElementsByClassName","div","thisReply","thisDiv","onclick","e","target","is","setToLocalStorage","this","each","magnificPopup","isUserLoggedIn","isSocketConnected","init","updateLikeComment","isCommentLiked","getUnlikeCommentRequest","getLikeCommentRequest","updateLikeReply","isReplyLiked","unlikeReplyRequest","likeReplyRequest","deleteReply","deleteReplyRequest","reportReplyAsSpam","flagReplyRequest","deleteComment","deleteCommentRequest","reload","reportCommentAsSpam","flagCommentRequest","imageClick","imageURL","event","cancelBubble","stopPropagation","open","items","src","callbacks","bind","preventDefault","close","unbind","notifyNewReplies","registerObserverCallback","trustSrc","trustAsResourceUrl","addEventListener","xLinkActivated","_this","viewScreen","ssActiveScreen","viewHighlights","viewRoster","viewStats","viewProfileStats","exitView","directive","AnalyticsService","DimensionService","restrict","scope","thisPost","vidIndex","link","elem","attr","setDimensions","aspectRatio","orientation","video","thesePlayerNodes","firstElementChild","childNodes","thisVideo","thisWidth","width","styleObj","setYOffset","setXOffset","offset","y","x","isIOS","post","videoSource","setAspectRatio","dimensions","posterDimensions","loadingSpinner","on","className","zIndex","canPlay","ANALYTICS","addSession","videoLengthPlayed","Math","round","currentTime","exploreSessionEvent","tweetId","ANALYTICS_DEBUG","togglePlayPause","thisThumbnail","thisPlayBtn","thisLoading","paused","ended","play","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","pause","templateUrl","trustSrcHtml","iframePlayer","twttr","widgets","load","image","thisImage","setOffsets","direction","ref","offsetScale","h","scaledY","w","scaledX","$el","embedded","getBoundingClientRect","top","trustSource","shareSubmit","exitShare","highlight","unhighlight","factory","mediaType","classStrings","media","$interval","ChannelService","initTimer","visProp","getPrefix","setVisEvent","timer","timeAndReport","_globalTimerStarted","nonInteraction","prefixes","isHidden","visEvent","replace","visChange","startTimer","stopTimer","endSession","leaveSessionEvent","getChannel","getChannelId","topicID","_lastActiveTab","currentTimer","cancel","closeSocket","_timeout","_restartSession","restartSession","visCallback","hidCallback","time","count","toString","minutes","globalTime","globalTimerStarted","sessionReset","setLastActiveTab","tab","DateUtilityService","Bant","FDSUtility","setReplies","replyData","_replies","tempReplyData","data","results","_replyObject","bant","_topicIdFromReply","notifyObservers","appendToReplies","postReplyData","tempPostedReply","commentId","_currentCommentId","updateReply","replyObj","updateLocalData","newData","updateLikeReplyWithId","liked","tempObject","getReplyById","updateBantLiked","removeReply","splice","getCommentIdByReply","replyGetRequest","uri","varReplyParams","rid","timestamp","Date","getTime","method","encodeURI","replyPostRequest","varPostParams","LIST_REPLIES_URI","getPostReplyRequest","replyId","isReplyToReply","targetType","targetId","createReplyParams","POST_REPLY_URI","lang","content","sections","html","LIKE_REPLY_URI","UNLIKE_REPLY_URI","FLAG_REPLY_URI","DELETE_REPLY_URI","callback","callbackLength","observerCallbacks","pop","isLikedById","updateReplyLocalData","deleteById","flagById","UNFLAG_REPLY_URI","HIDE_REPLY_URI","hideById","UNHIDE_REPLY_URI","_postID","forEach","getTopicIdFromReply","postId","setVideoData","videoData","_videoArray","tempData","_videoObject","isNewObject","j","_videoArrayAuto","_offset","nextOffset","auto","autoObserverCallbacks","newObserverCallbacks","getVideoDataRequest","reqOffset","request","LIST_SOCIAL_URI","LIMIT","getVideoDataRequestAuto","getVideoDataRequestAutoSingle","prevLength","autoRequest","videoArray","resetVideoOffset","videoArrayAutoLength","getPrevLength","setPrevLength","setSocialData","socialData","_socialArray","_socialObject","_socialArrayAuto","getSocialDataRequest","getSocialDataRequestAuto","getSocialDataRequestAutoSingle","socialArray","resetSocialOffset","socialArrayAutoLength"],"mappings":"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","file":"app-post.min.js","sourcesContent":["angular.module(\"PostModule\", [\"NetworkModule\", \"SplashModule\", \"MediaModule\", \"angularFileUpload\"])\n.controller(\"PostController\", [\"$scope\", \"$sce\", \"$timeout\", \"$window\", \"$location\",\"$sanitize\", \"$routeParams\", \"networkService\",\"ReplyService\", \"TopicService\",\"CommentService\", \"UserInfoService\",\"URIHelper\", \"SplashService\", \"MUService\", \"FileUploader\", \"ForumStorage\", \"UserAgentService\",\n\nfunction ($scope, $sce, $timeout, $window, $location, $sanitize, $routeParams, networkService, ReplyService, TopicService, CommentService, UserInfoService,URIHelper,SplashService,MUService,FileUploader,ForumStorage,UserAgentService)\n{\n\n  // Check For Mobile Browser\n  if (UserAgentService.isMobileUser()){\n    $scope.mobileBrowser = true;\n    $scope.mobileUserAgent = UserAgentService.getMobileUserAgent();\n  } else {\n    $scope.mobileBrowser = false;\n  }\n\n  TopicService.toggleFromPost();\n\n  // Retain & Handle State when Returning From External Links\n  if (ForumStorage.getFromLocalStorage('hasUserVisited') === true){\n    $scope.initPage();\n  }\n  var headerHeight;\n\n\t//ga('send', 'pageview', \"/comment/\"+$routeParams.postID);\n\t$scope.pageClass = 'page-post';\n\n\t$scope.postID = $routeParams.postID;\n\t$scope.topicId = TopicService.getTopicId();\n\t//$scope.replies = networkService.getRepliesForPostID();\n\t$scope.justReplied = false;\n\t\n\tReplyService.setPostId($routeParams.postID);\n\n\t$scope.backToTopicButtonTapped = function()\n\t{\n\t\tvar topicId = TopicService.getTopicId();\n    if (window.location.href.indexOf('?') !== -1){\n      var urlQueryStr = window.location.href.slice(window.location.href.indexOf('?'));\n    }\n    if(topicId == undefined)\n      topicId = $scope.comment.topicId;\n    if (urlQueryStr !== undefined){\n      $location.url(\"/topic/\" + topicId + urlQueryStr);\n    } else {\n      $location.url(\"/topic/\" + topicId);\n    }\n\t}\n\n\t$scope.setPeelUI = function(userType, peelShowId){\n\t\tif (userType === 'peel' && peelShowId) {\n      $('#postSection').css('padding-top','104px');\n      $('#backToChatContainer').css('margin-top','54px');\n\t\t} else if (userType === 'email') {\n      $('#postSection').css('padding-top','104px');\n    } else if (userType === 'MI16') {\n      // $('#postSection').css('padding-top','54px');\n\t\t} else {\n      $('#postSection').css('padding-top','50px');\n    }\n\t}\n\n  if (UserInfoService.isPeelUser()){\n    $scope.isPeelUser = true;\n    if (!URIHelper.getPeelShowId()){\n      $scope.peelShowId = false;\n    } else {\n      $scope.peelShowId = true;\n    }\n    SplashService.hidePeelSplash = true;\n    $scope.setPeelUI('peel', $scope.peelShowId);\n  }\n  else if (UserInfoService.isSmartStadiumUser()){\n    $scope.isSmartStadiumUser = true;\n    $scope.setPeelUI('email');\n  }\n  else if (UserInfoService.isMI16User() || UserInfoService.isMWCUser()){\n    $scope.techMUser = true;\n    $scope.setPeelUI();\n  }\n  else {\n    $scope.techMUser = false;\n    $scope.setPeelUI();\n  }\n\n\t$scope.requestReplies = function(){\n\t\t// console.log(\"PostController requestReplies Invoked\");\n\t\tnetworkService.send(ReplyService.getRepliesRequest($scope.postID));\n\t\tvar selectedComment = CommentService.getCommentById($scope.postID);\n\t\tif(selectedComment != undefined){\n\t\t\tupdateCommentInReply(selectedComment);\n\t\t}\n\t\telse{\n      if (NETWORK_DEBUG)\n\t\t\tconsole.log(\"No data from comment service\");\n\t\t\tnetworkService.send(CommentService.getCommentByIdRequest($scope.postID));\n\t\t}\n\t}\n\n\t$scope.peelClose = function()\n\t{\n\t\tconsole.log(\"peelClose()\");\n\t}\n\n\t$scope.peelWatchOnTV = function()\n\t{\n\t\tif(GOOGLE_ANALYTICS === true){\n\t\tga('send', 'event', 'Peel', 'click', 'PeelWatchOnTV');\n\t}\n    if (GEN_DEBUG)\n\t\tconsole.log(\"peelWatchOnTV()\");\n\t\tvar showId = URIHelper.getPeelShowId();\n\t\tif(showId != undefined)\n\t\t\twindow.location = \"peel://tunein/\"+showId;\n\t\telse\n\t\t\twindow.location = \"peel://home\";\n\t}\n\n\t$scope.showNewRepliesIndicator = false;\n\t$scope.newRepliesIndicatorTapped = function()\n\t{\n\t\tif (GEN_DEBUG)\n    console.log(\"newRepliesIndicatorTapped\");\n\t\t$scope.showNewRepliesIndicator = false;\n\t\tupdateReplies();\n\t\twindow.scrollTo(0,document.body.scrollHeight);\n\t}\n\n  $scope.checkDirectReply = function() {\n    if (TopicService.directComment){\n      $('#postCommentField').focus();\n      TopicService.directComment = false;\n    }\n  }\n\n\t$scope.triggerRepliesKeyboard = function() {\n    $('#postCommentField').focus();\n\t}\n\n  $scope.secureLink = function(url, id) {\n    if (UserInfoService.isGuestUser()){\n      return \"\";\n    } else {\n      return url + id;\n    }\n  };\n\t\n\t$scope.initReplyPage = function(){\n\t\t$scope.pageClass = 'page-post';\n\t\t$scope.paddingTop = \"20\";\n\t\t// $scope.pageStyle = {'padding-top': '10em'};\n\n\t\t$scope.requestReplies();\n    // $scope.loadingReply = true;\n\t\tvar replyPostHeader = $(\"#replyPost\").height();\n\t\t// console.log(\"height of repy header: \" + replyPostHeader);\n\t\tvar heightString = replyPostHeader + \"px\";\n\t\t// document.getElementById('postHeader').style.height = '3.5em';//heightString;\n\t\t// document.getElementById('postSection').style.paddingTop = '3.5em';\n\t  if ($scope.mobileBrowser === true){\n      document.getElementById('postSection').style.paddingBottom = \"42px\";\n    }\n\n\t\t$scope.$watch(\"replies\", function (newValue, oldValue)\n\t\t {\n  \t\t\t$timeout(function()\n  \t\t\t{\n  \t\t\t\t// setLinks();\n          var replyDivs = document.getElementsByClassName(\"postRow\");\n          for (div in replyDivs){\n            if (newValue != undefined){\n              var thisReply = newValue[div];\n              if (thisReply != undefined){\n                var thisDiv = replyDivs[div];\n                thisDiv.onclick = function(e) {\n                  if ($(e.target).is('a')){\n                    ForumStorage.setToLocalStorage('replyBookmark', this.id);\n                    return;\n                  }\n                }\n              }\n            }\n          }\n    \t\t\t$('.commentsContainer').each(function()\n    \t\t\t{\n      \t\t\t\t$('.image-link').magnificPopup({\n        \t\t\t\ttype:'image'\n     \t\t\t\t});\n    \t\t\t});\n  \t\t\t});\n\t\t});\n\t}\n\n\tif(UserInfoService.isUserLoggedIn()){\n\t\tif(!networkService.isSocketConnected())\n\t\t\tnetworkService.init();\n\t\t$scope.initReplyPage();\n\t}\n\telse {\n    $location.url(\"/login\");\n\t}\n\n\t$scope.updateLikeComment = function(id) {\n\t\t// console.log(\"PostController updateLikeComment(\" + id + \")\");\n\t\tif(CommentService.isCommentLiked(id)){\n\t\t\tnetworkService.send(CommentService.getUnlikeCommentRequest(id));\n\t\t}\n\t\telse{\n\t\t\tnetworkService.send(CommentService.getLikeCommentRequest(id));\t\n\t\t}\n\t};\n\n\t$scope.updateLikeReply = function(id) {\n\t\t// console.log(\"PostController Like Reply\");\n\t\tif(ReplyService.isReplyLiked(id)){\n\t\t\tnetworkService.send(ReplyService.unlikeReplyRequest(id));\n\t\t}\n\t\telse{\n\t\t\tnetworkService.send(ReplyService.likeReplyRequest(id));\n\t\t}\n\t};\n\n\t$scope.deleteReply = function(id)\n\t{\n\t\tif (GEN_DEBUG)\n    console.log(\"deleteReply(\" + id + \")\");\n\t\tnetworkService.send(ReplyService.deleteReplyRequest(id));\n\t}\n\n\t$scope.reportReplyAsSpam = function(id)\n\t{\n\t\tif (GEN_DEBUG)\n    console.log(\"reportReplyAsSpam(\" + id + \")\");\n\t\tnetworkService.send(ReplyService.flagReplyRequest(id));\n\t}\n\n  $scope.deleteComment = function(id)\n  {\n    if (GEN_DEBUG)\n    console.log(\"deleteComment(\" + id + \")\");\n    // $scope.innerButtonTapped = true;\n    networkService.send(CommentService.deleteCommentRequest(id));\n    $location.url(\"/topic/\" + $scope.topicId);\n    $window.location.reload();\n  }\n\n  $scope.reportCommentAsSpam = function(id)\n  {\n    if (GEN_DEBUG)\n    console.log(\"reportCommentAsSpam(\" + id + \")\");\n    // $scope.innerButtonTapped = true;\n    networkService.send(CommentService.flagCommentRequest(id)); \n  }\n\n\t$scope.imageClick = function(imageURL)\n\t{\n\t\tevent.cancelBubble = true;\n\t   if(event.stopPropagation) event.stopPropagation();\n\n\t\t$.magnificPopup.open({\n                    items: {\n                    \ttype:'image',\n                    \tsrc: imageURL,\n                },\n                type: 'inline',\n                callbacks:\n                {\n\t\t\t\t    open: function()\n\t\t\t\t    {\n\t\t\t\t      $('body').bind('touchmove', function(e){e.preventDefault()})\n\t\t\t\t    },\n\t\t\t\t    close: function()\n\t\t\t\t    {\n\t\t\t\t      $('body').unbind('touchmove')\n\t\t\t\t    }\n\t\t\t\t    // e.t.c.\n\t\t\t\t}\n            });\n\t}\n\n\tfunction updateScore(){\n\t\t//Score update here\n\t\t$scope.leftTeam = TopicService.getTeamA();\n\t\t$scope.rightTeam = TopicService.getTeamB();\n\t\tvar score = TopicService.getScore();\n\t\tif(score != undefined){\n\t\t\t$scope.leftTeamScore = score.points[0];\n\t\t\t$scope.rightTeamScore = score.points[1];\n\t\t}\n\t\t$scope.gameStatus = TopicService.getGameStatus();\n\t\t$scope.topicTitle = TopicService.getTitle();\n\t\tif($scope.gameStatus == \"live\") {\n\t\t\t$scope.gamePeriod = TopicService.getGamePeriod();\n\t\t\t$scope.gameClock = TopicService.getGameClock();\n\t\t}\n\t}\n\n\t function updateCommentInReply(selectedComment){\n    if (GEN_DEBUG)\n\t\tconsole.log(\"Already Had PostID: \", $scope.postID);\n    if (!$scope.postID){\n      $scope.postID = ReplyService.getPostId();\n      if (GEN_DEBUG)\n      console.log(\"Regenerated PostID: \", $scope.postID);\n    }\n    if(selectedComment == undefined){\n\t\t\tselectedComment = CommentService.getCommentById($scope.postID);\n\t\t}\n\t\tif(selectedComment != undefined){\n\t\t\tif(NETWORK_DEBUG) console.log(\"Updated comment in reply triggered\" ); \n\t\t\tvar tempComment = {};\n\t\t\ttempComment = selectedComment;\n\t\t\ttempComment.postAuthorName = selectedComment.author.name;\n\t\t\ttempComment.postAuthorPhoto = selectedComment.author.photo;\n\n\t\t\ttempComment.postTimestamp = selectedComment.createdAt;\n\t\t\ttempComment.likeCount = selectedComment.metrics.likes;\n\t\t\ttempComment.replyCount = selectedComment.metrics.replies;\n\t\t\ttempComment.mediaAspectFeed = selectedComment.mediaAspectFeed;\n\t\t\ttempComment.isLiked = selectedComment.signal.like;\n\t\t\ttempComment.topicId = selectedComment.topicId;\n      tempComment.isMyComment = UserInfoService.isCurrentUser(selectedComment.author.id);\n\n      if (tempComment.type === 'media'){\n          tempComment.mediaUrl = selectedComment.mediaUrl;\n          // tempComment.trustedMediaUrl = $scope.trustSrc(tempComment.mediaUrl);\n          tempComment.mediaAspectFeed = selectedComment.mediaAspectFeed;\n          tempComment.mediaAspectFull = selectedComment.mediaAspectFull;\n          tempComment.mediaAspectRatio = selectedComment.mediaAspectRatio;\n          tempComment.mediaOrientation = selectedComment.mediaOrientation;\n          tempComment.mediaThumbUrl = selectedComment.mediaThumbUrl;\n        }\n\n      if (tempComment.type === 'embed'){\n        tempComment.shared = true;\n        tempComment.embed = selectedComment.embed;\n        tempComment.embed.embedCreatedAt = selectedComment.embedCreatedAt;\n        tempComment.embed.embedCreatedAtFull = selectedComment.embedCreatedAtFull;\n\n        if (tempComment.embedType === 'media'){\n          tempComment.mediaUrl = selectedComment.embedMedia.mediaUrl;\n          tempComment.mediaThumbUrl = selectedComment.embedMedia.mediaThumbUrl;\n          tempComment.mediaAspectFeed = selectedComment.embedMedia.mediaAspectFeed;\n          tempComment.mediaAspectFull = selectedComment.embedMedia.mediaAspectFull;\n          tempComment.mediaAspectRatio = selectedComment.embedMedia.mediaAspectRatio;\n          tempComment.mediaOrientation = selectedComment.embedMedia.mediaOrientation;\n        }\n\n        if (tempComment.providerName === \"Twitter\"){\n          tempComment.embed.embedLogo = \"img/twitterLogo@2x.png\";\n        } else {\n          tempComment.embed.embedLogo = selectedComment.embed.provider.logo;\n        }\n\n        if (selectedComment.embed.type === 'link' && selectedComment.embed.playable === true){\n          tempComment.embedHtml = selectedComment.embedHtml;\n        }\n      }\n\n\t\t\t$scope.comment = tempComment;\n\t\t}\n\t}\n\n  // $scope.hideLoading = function(){\n  //   console.log(\"HIDING LOAD\");\n  //   $scope.loadingReply = false;\n  // };\n\n\tfunction updateReplies(){\n\t\t//TODO: check with ahmed, these values could be individual scope var.\n\t\tvar repliesData = ReplyService.replies();\n\t\tvar len = repliesData.length;\n\n\t\t$scope.replies = [];\n\n\t\tfor(i=0;i<len;i++){\n\t\t\tvar tempReply = {};\n\t\t\ttempReply = repliesData[i];\n\t\t\ttempReply.postAuthorName = repliesData[i].author.name;\n\t\t\ttempReply.postAuthorPhoto = repliesData[i].author.photo;\n\t\t\ttempReply.isMyReply = UserInfoService.isCurrentUser(repliesData[i].author.id);\n\n\t\t\ttempReply.postTimestamp = repliesData[i].createdAt;\n\t\t\ttempReply.likeCount = repliesData[i].metrics.likes;\n\t\t\ttempReply.replyCount = repliesData[i].metrics.replies;\n\t\t\ttempReply.mediaAspectFeed = repliesData[i].mediaAspectFeed;\n\t\t\ttempReply.isLiked = repliesData[i].signal.like;\n\t\t\t\n      if (tempReply.type === 'media'){\n          tempReply.mediaUrl = repliesData[i].mediaUrl;\n          // tempReply.trustedMediaUrl = $scope.trustSrc(tempReply.mediaUrl);\n          tempReply.mediaAspectFeed = repliesData[i].mediaAspectFeed;\n          tempReply.mediaAspectFull = repliesData[i].mediaAspectFull;\n          tempReply.mediaAspectRatio = repliesData[i].mediaAspectRatio;\n          tempReply.mediaOrientation = repliesData[i].mediaOrientation;\n          tempReply.mediaThumbUrl = repliesData[i].mediaThumbUrl;\n        }\n      if (tempReply.type === 'embed'){\n        tempReply.shared = true;\n        tempReply.embed = repliesData[i].embed;\n        tempReply.embed.embedCreatedAt = repliesData[i].embedCreatedAt;\n        tempReply.embed.embedCreatedAtFull = repliesData[i].embedCreatedAtFull;\n\n        if (tempReply.providerName === \"Twitter\"){\n          tempReply.embed.embedLogo = \"img/twitterLogo@2x.png\";\n        } else {\n          tempReply.embed.embedLogo = repliesData[i].embed.provider.logo;\n        }\n\n        if (repliesData[i].embed.type === 'link' && repliesData[i].embed.playable === true){\n          tempReply.embed.embedHtml = $sce.trustAsHtml(repliesData[i].embedHtml);\n        }\n      }\n\n      $scope.replies.push(tempReply);\n\n\t\t\t// console.log(i +\" : updated replies html : \" +$scope.replies[i].html);\n\t\t\t// console.log(i +\" : updated replies author name: \" +$scope.replies[i].postAuthorName);\n\t\t\t// console.log(i +\" : updated replies author photo: \" +$scope.replies[i].postAuthorPhoto);\n\n\t\t\tif($scope.replies[i].type == \"media\"){\n\t\t\t\t// console.log(i +\" : updated replies media : \" +$scope.replies[i].mediaUrl);\n\t\t\t\t// console.log(i +\" : updated replies media : \" +$scope.replies[i].mediaAspectFeed);\n\t\t\t}\n\t\t\t//console.log(i +\" : updated replies likecount : \" +$scope.replies[i].likeCount);\n\n\t\t}\n\n\t\tif($scope.justReplied == true)\n\t\t{\n\t\t\tsetTimeout(function()\n\t\t\t\t{ \n\t\t\t\t\twindow.scrollTo(0,document.body.scrollHeight);\n\t\t\t\t\t$scope.justReplied = false;\n\t\t\t\t}, 1000);\n\t\t}\n\t}\n\t \n\t var notifyNewReplies = function(){\n\n\t\t if($scope.replies == undefined)\n\t\t {\n\t\t\t updateReplies();\n\t\t }\n\t\t else {\n\t\t\t var repliesData = ReplyService.replies();\n\t\t\t var len = repliesData.length;\n\t\t\t if($scope.replies.length < len ){\n\t\t\t\t //console.log(\"newReplies triggered\");\n\t\t\t\t if(!UserInfoService.isCurrentUser(repliesData[len-1].author.id)){\n\t\t\t\t\t $scope.showNewRepliesIndicator = true;\n\t\t\t\t }\n\t\t\t\t else{\n\t\t\t\t\t updateReplies();\n\t\t\t\t }\n\t\t\t }\n\t\t\t else{\n\t\t\t\t updateReplies();\n\t\t\t }\n\n\t\t }\n\t }\n\t \n\tReplyService.registerObserverCallback(notifyNewReplies);\n\tTopicService.registerObserverCallback(updateScore);\n\tCommentService.registerObserverCallback(updateCommentInReply, true);\n\n\t$scope.trustSrc = function(src)\n\t{\n    \treturn $sce.trustAsResourceUrl(src);\n  \t}\n\n  $window.addEventListener(\"beforeunload\", function(){\n    ForumStorage.setToLocalStorage(\"hasUserVisited\", true);\n  });\n\n  $scope.xLinkActivated = false;\n\n\n}]);\n\n","angular.module(\"SmartStadiumModule\", [])\n.controller(\"SmartStadiumController\", [\"$scope\", function ($scope){\n  \n  var _this = this;\n  this.viewScreen = false;\n  this.ssActiveScreen;\n\n  this.viewHighlights = function() {\n    _this.ssActiveScreen = 'highlights';\n    _this.viewScreen = true;\n  };\n\n  this.viewRoster = function() {\n    _this.ssActiveScreen = 'roster';\n    _this.viewScreen = true;\n  };\n\n  this.viewStats = function() {\n    _this.ssActiveScreen = 'stats';\n    _this.viewScreen = true;\n  };\n\n  this.viewProfileStats = function() {\n    _this.ssActiveScreen = 'profileStats';\n    _this.viewScreen = true;\n  };\n\n  this.exitView = function() {\n    _this.viewScreen = false;\n  };\n\n}]);","angular.module('TopicModule')\n.directive('mediaPlayer',\n  ['$sce',\n  'UserAgentService',\n  'AnalyticsService',\n  'DimensionService',\n  function ($sce, UserAgentService, AnalyticsService, DimensionService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=',\n      vidIndex: '@'\n    },\n    link: function(scope,elem,attr) {\n\n      scope.isMobileUser = UserAgentService.isMobileUser();\n      var isIOS = (UserAgentService.getMobileUserAgent() === 'iOS');\n      var post = scope.thisPost;\n\n      scope.videoSource = trustSrc(post.mediaUrl);\n      scope.aspectRatio = DimensionService.setAspectRatio(post.mediaAspectRatio, post.mediaOrientation, 'video');\n      scope.dimensions = setDimensions(post.mediaAspectRatio, post.mediaOrientation);\n      scope.posterDimensions = setDimensions(post.mediaAspectRatio, post.mediaOrientation, post);\n\n      function trustSrc (src){\n        return $sce.trustAsResourceUrl(src);\n      }\n\n      var video = elem[0].firstElementChild.childNodes[1];\n      var loadingSpinner = elem[0].firstElementChild.childNodes[7];\n      \n      // Video Loading Event Listeners\n      $(video).on('waiting', function() {\n        if (GEN_DEBUG)\n          console.log(\"Video Waiting\");\n        if (scope.isMobileUser && !isIOS){\n          loadingSpinner.className = 'media-loading-fullscreen';\n          loadingSpinner.style.zIndex = \"2147483647\";\n        } else {\n          loadingSpinner.className = 'media-loading';\n        }\n      });\n      $(video).on('stalled', function() {\n        if (GEN_DEBUG)\n          console.log(\"Video Stalled\");\n        if (scope.isMobileUser && !isIOS){\n          loadingSpinner.className = 'media-loading-fullscreen';\n          loadingSpinner.style.zIndex = \"2147483647\";\n        } else {\n          loadingSpinner.className = 'media-loading';\n        }\n      });\n      var canPlay;\n      $(video).on('canplay', function() {\n        canPlay = true;\n      });\n      $(video).on('playing', function() {\n        if (GEN_DEBUG)\n          console.log(\"Video Playing\");\n        loadingSpinner.className = 'media-loading-default';\n      });\n      $(video).on('play', function() {\n        if (GEN_DEBUG)\n          console.log(\"Video play clicked\" + scope.thisPost.id);\n        if(GOOGLE_ANALYTICS === true){\n        ga('send', 'event', 'Video','Play', scope.thisPost.id);\n      }\n        if(ANALYTICS)\n        AnalyticsService.addSession('explore_video');\n      });\n      $(video).on('pause', function() {\n        var videoLengthPlayed = Math.round(video.currentTime);\n        if (GEN_DEBUG)\n        console.log(\"Video paused\" + scope.thisPost.id + \": TimePlayed \" + videoLengthPlayed);\n      if(GOOGLE_ANALYTICS === true){\n        ga('send', 'event', 'Video','VideoLengthPlayed', scope.thisPost.id, videoLengthPlayed);\n      }\n        if(ANALYTICS)\n        AnalyticsService.exploreSessionEvent(\"Video\", scope.thisPost.id, scope.thisPost.type, scope.thisPost.tweetId, scope.thisPost.providerName, \"tab\", videoLengthPlayed);\n        if(ANALYTICS_DEBUG){\n          console.log(scope.thisPost);\n          console.log(\"Video\" +  \"   \" + scope.thisPost.id+  \"   \" +  scope.thisPost.type+  \"   \" +  scope.thisPost.tweetId+  \"   \" +  scope.thisPost.providerName+  \"   \" +  \"tab\");\n        }\n      });\n       $(video).on('ended', function() {\n        var videoLengthPlayed = Math.round(video.currentTime);\n      });\n        \n\n      scope.togglePlayPause = function(e) {\n        var thesePlayerNodes = elem[0].firstElementChild.childNodes;\n        var thisVideo = thesePlayerNodes[1];\n        var thisThumbnail = thesePlayerNodes[3];\n        var thisPlayBtn = thesePlayerNodes[5];\n        var thisLoading = thesePlayerNodes[7];\n\n        if (thisVideo.paused || thisVideo.ended){\n          thisPlayBtn.className = 'pause';\n          thisThumbnail.className = 'pause';\n          thisVideo.play();\n          if (scope.isMobileUser){\n            if (thisVideo.requestFullscreen){\n              thisVideo.requestFullscreen();\n            } else if (thisVideo.webkitRequestFullscreen){\n              thisVideo.webkitRequestFullscreen();\n            } else if (thisVideo.mozRequestFullScreen){\n              thisVideo.mozRequestFullScreen();\n            } else if (thisVideo.msRequestFullscreen){\n              thisVideo.msRequestFullscreen();\n            }\n          }\n        }\n        else {\n          thisLoading.className = 'media-loading-default';\n          thisPlayBtn.className = 'media-controls';\n          thisThumbnail.className = 'media-thumbnail';\n          thisVideo.pause();\n        }\n      }\n\n      function setDimensions (aspectRatio, orientation, video) {\n        var thesePlayerNodes = elem[0].firstElementChild.childNodes;\n        var thisVideo = thesePlayerNodes[1];\n        var thisWidth = $(thisVideo).width();\n        if (GEN_DEBUG){\n          // console.log(\"Elem in setD: \", elem);\n          // console.log(\"PlayerNodes in setD: \", thesePlayerNodes);\n          // console.log(\"Video in setD: \", thisVideo);\n          // console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var styleObj = {};\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        styleObj['height'] = height;\n        if (!!video){\n          styleObj['background-image'] = 'url(' + video.mediaThumbUrl + ')';\n          styleObj['background-size'] = 'cover';\n          styleObj['background-position-y'] = setYOffset(video);\n          styleObj['background-position-x'] = setXOffset(video);\n        }\n        if (GEN_DEBUG){\n          // console.log(\"Set Dimensions Object: \", styleObj);\n        }\n        return styleObj;\n      }\n\n      function setYOffset(video){\n        var offset;\n        if (!!video.mediaAspectFeed.y){\n          offset = '-' + video.mediaAspectFeed.y + 'px';\n        }\n        else if (!!video.mediaAspectFull.y){\n          offset = '-' + video.mediaAspectFull.y + 'px';\n        }\n        return offset;\n      }\n\n      function setXOffset(video){\n        var offset;\n        if (!!video.mediaAspectFeed.x){\n          offset = '-' + video.mediaAspectFeed.x + 'px';\n        }\n        else if (!!video.mediaAspectFull.x){\n          offset = '-' + video.mediaAspectFull.x + 'px';\n        }\n        return offset;\n      }\n\n    },\n    templateUrl: 'partials/mediaPlayer.html'\n  };\n}]);\n","angular.module('TopicModule')\n.directive('embedPlayer',\n  ['$sce',\n  'UserAgentService',\n  'DimensionService',\n  function ($sce, UserAgentService, DimensionService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '='\n    },\n    link: function(scope,elem,attr) {\n\n      var isMobileUser = UserAgentService.isMobileUser();\n      var post = scope.thisPost;\n      scope.embedHtml = trustSrcHtml(post.embedHtml);\n      scope.aspectRatio = DimensionService.setAspectRatio(post.mediaAspectRatio, post.mediaOrientation, 'video');\n      scope.dimensions = setDimensions(post.mediaAspectRatio, post.mediaOrientation);\n\n      function trustSrcHtml (src){\n        return $sce.trustAsHtml(src);\n      }\n\n      function setDimensions (aspectRatio, orientation) {\n        var thesePlayerNodes = elem[0].childNodes;\n        var thisVideo = thesePlayerNodes[0];\n        var thisWidth = $(thisVideo).width();\n        if (GEN_DEBUG){\n          console.log(\"PlayerNodes in setD: \", thesePlayerNodes);\n          console.log(\"Video in setD: \", thisVideo, thisVideo.childNodes);\n          console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        var iframePlayer;\n        // 0-second timeout ensures element exists before we manipulate it\n        setTimeout(function(){\n          iframePlayer = thisVideo.childNodes[0];\n          $(iframePlayer).css('height',height);\n          if (GEN_DEBUG) console.log(\"Setting Height On: \", iframePlayer, height);\n          twttr.widgets.load();\n        }, 0);\n      }\n\n    },\n    templateUrl: 'partials/embedPlayer.html'\n  };\n}]);","angular.module('TopicModule')\n.directive('imageControl',\n  ['$sce',\n  'URIHelper',\n  'DimensionService',\n  function ($sce, URIHelper, DimensionService) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '='\n    },\n    link: function(scope,elem,attr) {\n      var $el = elem[0];\n\n      var post = scope.thisPost;\n      scope.aspectRatio = DimensionService.setAspectRatio(post.mediaAspectRatio, post.mediaOrientation, 'image');\n      scope.dimensions = setDimensions(post.mediaAspectRatio, post.mediaOrientation, post);\n\n      scope.imageClick = function(imageURL) {\n\n        $.magnificPopup.open({\n          items: {\n            type:'image',\n            src: imageURL\n          },\n          type: 'inline',\n          callbacks: {\n            open: function(){\n              $('body').bind('touchmove', function(e){e.preventDefault()});\n              if (URIHelper.embedded()){\n                console.log(\"MFP: \", $('.mfp-content').offset(), \" DOC: \", $el.getBoundingClientRect().top);\n                if ($('.mfp-content').offset() !== $el.getBoundingClientRect().top){\n                  console.log(\"Shifting MFP\");\n                  $('.mfp-content').offset({ top: $el.getBoundingClientRect().top - 100 });\n                }\n              }\n            },\n            close: function(){\n              $('body').unbind('touchmove');\n            }\n          }\n        });\n      }\n\n      function setDimensions (aspectRatio, orientation, image) {\n        var thisImage = elem[0].childNodes[0];\n        var thisWidth = $(thisImage).width();\n        if (GEN_DEBUG){\n          console.log(\"Image in setD: \", thisImage);\n          console.log(\"Width in setD: \", thisWidth);\n        }\n\n        // Width Contingencies (landscape)\n        if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n          thisWidth = 381;\n        } else if (aspectRatio === 1 && thisWidth > 300){\n          thisWidth = 300;\n        }\n        if (aspectRatio === 1.778 && thisWidth > 533){\n          thisWidth = 533;\n        }\n        if (aspectRatio === 2 && thisWidth > 600){\n          thisWidth = 600;\n        }\n\n        var styleObj = {};\n        var height = thisWidth / aspectRatio;\n\n        // Height Contingencies (portrait)\n        if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n          height = 300;\n        }\n\n        styleObj['height'] = height;\n        if (!!image){\n          styleObj['background-image'] = 'url(' + image.mediaUrl + ')';\n          styleObj['background-size'] = 'cover';\n          styleObj['background-position-y'] = setOffsets(image, 'y', height) || '';\n          styleObj['background-position-x'] = setOffsets(image, 'x', thisWidth) || '';\n        }\n\n        if (GEN_DEBUG){\n          console.log(\"Set Dimensions Object: \", styleObj);\n        }\n        return styleObj;\n      }\n\n      function setOffsets(image, direction, ref){\n        var offset;\n        var offsetScale; \n        if (direction === 'y'){\n          if (!!image.mediaAspectFeed.y){\n            offsetScale = ref / image.mediaAspectFeed.h;\n            var scaledY = image.mediaAspectFeed.y * offsetScale;\n            offset = '-' + scaledY + 'px';\n          }\n        }\n        if (direction === 'x'){\n          if (!!image.mediaAspectFeed.x){\n            offsetScale = ref / image.mediaAspectFeed.w;\n            var scaledX = image.mediaAspectFeed.x * offsetScale;\n            offset = '-' + scaledX + 'px';\n          }\n        }\n        return offset;\n      }\n\n    },\n    templateUrl: 'partials/imageControl.html'\n  };\n}]);\n","angular.module('SocialModule')\n.directive('shareToChatDialog', ['URIHelper',\n  function (URIHelper) {\n  return {\n    restrict: 'E',\n    scope: {\n      thisPost: '=',\n      trustSource: '&',\n      shareSubmit: '&',\n      exitShare: '&',\n      highlight: '&',\n      unhighlight: '&'\n    },\n    link: function (scope, elem, attr) {\n      if (URIHelper.embedded()){\n        scope.embed = true;\n      }\n    },\n    templateUrl: 'partials/sharePreview.html'\n  };\n}]);","angular.module('TopicModule')\n.factory('DimensionService', function() {\n\n  function setAspectRatio (aspectRatio, orientation, mediaType) {\n    if (GEN_DEBUG) console.log('setAspectRatio: ', aspectRatio, orientation, mediaType);\n    var classStrings = [];\n\n    if (orientation === 'portrait'){\n      if (aspectRatio === 1.778){\n        classStrings.push(mediaType + '-portrait-9x16');\n      } else {\n        classStrings.push(mediaType + '-portrait-1x2')\n      }\n    } else if (orientation === 'square'){\n      classStrings.push(mediaType + '-square');\n    } else {\n      if (aspectRatio === 1.778){\n        classStrings.push(mediaType + '-landscape-16x9');\n      } else {\n        classStrings.push(mediaType + '-landscape-2x1')\n      }\n    }\n    return classStrings;\n  }\n\n  function setDimensions (elem, aspectRatio, orientation, media, mediaType) {\n    var thesePlayerNodes = elem[0].firstElementChild.childNodes;\n    var thisVideo = thesePlayerNodes[1];\n    var thisWidth = $(thisVideo).width();\n    if (GEN_DEBUG){\n      // console.log(\"Elem in setD: \", elem);\n      // console.log(\"PlayerNodes in setD: \", thesePlayerNodes);\n      // console.log(\"Video in setD: \", thisVideo);\n      // console.log(\"Width in setD: \", thisWidth);\n    }\n\n    // Width Contingencies (landscape)\n    if (scope.isMobileUser && aspectRatio === 1 && thisWidth > 380){\n      thisWidth = 381;\n    } else if (aspectRatio === 1 && thisWidth > 300){\n      thisWidth = 300;\n    }\n    if (aspectRatio === 1.778 && thisWidth > 533){\n      thisWidth = 533;\n    }\n    if (aspectRatio === 2 && thisWidth > 600){\n      thisWidth = 600;\n    }\n\n    var styleObj = {};\n    var height = thisWidth / aspectRatio;\n\n    // Height Contingencies (portrait)\n    if ((aspectRatio === 1.778 || aspectRatio === 2) && height > 300){\n      height = 300;\n    }\n\n    styleObj['height'] = height;\n    if (!!video){\n      styleObj['background-image'] = 'url(' + video.mediaThumbUrl + ')';\n      styleObj['background-size'] = 'cover';\n      styleObj['background-position-y'] = setYOffset(video);\n      styleObj['background-position-x'] = setXOffset(video);\n    }\n    if (GEN_DEBUG){\n      // console.log(\"Set Dimensions Object: \", styleObj);\n    }\n    return styleObj;\n  }\n\n  function setOffsets(media, direction, ref){\n    var offset;\n    var offsetScale; \n    if (direction === 'y'){\n      if (!!image.mediaAspectFeed.y){\n        offsetScale = ref / image.mediaAspectFeed.h;\n        var scaledY = image.mediaAspectFeed.y * offsetScale;\n        offset = '-' + scaledY + 'px';\n      }\n    }\n    if (direction === 'x'){\n      if (!!image.mediaAspectFeed.x){\n        offsetScale = ref / image.mediaAspectFeed.w;\n        var scaledX = image.mediaAspectFeed.x * offsetScale;\n        offset = '-' + scaledX + 'px';\n      }\n    }\n    return offset;\n  }\n\n  return {\n    setAspectRatio: setAspectRatio,\n    setDimensions: setDimensions\n  };\n\n});","angular.module('NetworkModule')\n.factory('TimerService',\n  ['$routeParams',\n  '$window',\n  '$timeout',\n  '$interval',\n  'networkService',\n  'AnalyticsService',\n  'ChannelService',\n  'TopicService',\nfunction ($routeParams, $window, $timeout, $interval, networkService, AnalyticsService, ChannelService, TopicService) {\n  var visProp;\n  var timer;\n  var time = 0;\n  var count = 1;\n  var minutes = 1;\n  var _globalTimerStarted = false;\n\n  var _timeout;\n  var _restartSession = false;\n  var _lastActiveTab;\n\n  function initTimer() {\n    visProp = getPrefix();\n    setVisEvent();\n    timer = $interval(timeAndReport, 1000);\n    _globalTimerStarted = true;\n    if (GEN_DEBUG) console.log('TimeOnPage: 1 second');\n    if (GOOGLE_ANALYTICS === true){\n      ga('send', 'event', 'TimeOnPage', '0', '1 second', { 'nonInteraction': 1 });\n    }\n  }\n\n  // Get vendor prefix for document hidden state property\n  function getPrefix() {\n    var prefixes = ['webkit','moz','ms','o'];\n\n    // First check if hidden is natively supported\n    if ('hidden' in $window.document) return 'hidden';\n    // Then check all known prefixes\n    for (var i = 0; i < prefixes.length; i++){\n      if ((prefixes[i] + 'Hidden') in $window.document){\n        return prefixes[i] + 'Hidden';\n      }\n    }\n    // otherwise not supported\n    return null;\n  }\n\n  // Determine if window is in background or not\n  function isHidden() {\n    if (!visProp) return false;\n    return $window.document[visProp];\n  }\n\n  // Event listener for visibility change event\n  function setVisEvent() {\n    if (visProp) {\n      var visEvent = visProp.replace(/[H|h]idden/,'') + 'visibilitychange';\n      // add event listener to start/stop TimeOnPage timer\n      $window.document.addEventListener(visEvent, function(){\n        visChange(startTimer, stopTimer);\n      });\n    }\n  }\n\n  function endSession() {\n    if (NETWORK_DEBUG) console.log(\"Disconnect & End Session\");\n    AnalyticsService.leaveSessionEvent(ChannelService.getChannel() || TopicService.getChannelId(), $routeParams.topicID, _lastActiveTab);\n    if (TopicService.currentTimer()){\n      console.log(\"$AUTO$ Timer Service Canceling Timer\");\n      $interval.cancel(TopicService.currentTimer(false));\n    }\n    networkService.closeSocket();\n    _timeout = undefined;\n    _restartSession = true;\n  }\n\n  function restartSession() {\n    if (NETWORK_DEBUG) console.log(\"Reconnect & Start New Session\");\n    $window.location.reload();\n  }\n\n  // Helper function to run on visibility change; takes two callbacks\n    // ** Register a new visibility-state-dependent event listener via:\n    // window.document.addEventListener(event, visChange(vis, hid))\n  function visChange(visCallback, hidCallback) {\n    if (isHidden()) {\n      if (GEN_DEBUG) console.log('hidden callback fired');\n      hidCallback();\n      _timeout = $timeout(endSession, 20000);\n    } else {\n      if (GEN_DEBUG) console.log('visible callback fired');\n      visCallback();\n      if (_timeout){\n        $timeout.cancel(_timeout);\n      }\n      if (_restartSession){\n        restartSession();\n      }\n    }\n  }\n\n  function startTimer() {\n    if (GEN_DEBUG) console.log('Starting Timer at: ' + time + 'seconds');\n    if (time <= 1800){\n      timer = $interval(timeAndReport, 1000);\n    }\n  }\n  function stopTimer() {\n    if (GEN_DEBUG) console.log('Stopping Timer at: ' + time + 'seconds');\n    $interval.cancel(timer);\n  }\n\n  // Send analytics to google at appropriate intervals\n  function timeAndReport() {\n    time += 1;\n\n    if (time > 1800){\n      $interval.cancel(timer);\n      return;\n    }\n    if (time === 10 || time === 30 || time === 60){\n      if (GEN_DEBUG) console.log('TimeOnPage: ' + time + ' seconds | Count: ' + count);\n    if(GOOGLE_ANALYTICS === true){\n      ga('send', 'event', 'TimeOnPage', count.toString(), (time + ' seconds'), { 'nonInteraction': 1 });\n    }\n      count++;\n    } \n    if (time > 60 && time % 60 === 0){\n      minutes++;\n      if (minutes <= 5 || minutes === 10 || minutes === 20 || minutes === 30){\n        if (GEN_DEBUG) console.log('TimeOnPage: ' + minutes + ' mins | Count: ' + count);\n      if(GOOGLE_ANALYTICS === true){\n        ga('send', 'event', 'TimeOnPage', count.toString(), (minutes + ' mins'), { 'nonInteraction': 1 });\n      }\n        count++;\n      }\n    }\n  }\n\n  return {\n    initTimer: initTimer,\n    endSession: endSession,\n    globalTime: function() {\n      return time;\n    },\n    globalTimerStarted: function() {\n      return _globalTimerStarted;\n    },\n    sessionReset: function() {\n      return _restartSession;\n    },\n    setLastActiveTab: function (tab) {\n      _lastActiveTab = tab;\n    }\n  };\n\n}]);\n","angular.module('NetworkModule')\n.factory('ReplyService', [\"DateUtilityService\",\"Bant\",\"FDSUtility\", \n\tfunction (DateUtilityService,Bant,FDSUtility) {\n\tvar _postID;\n\tvar LIST_REPLIES_URI = \"/v1.0/comment/replies/list/\"\n\tvar POST_REPLY_URI=\"/v1.0/reply/create\";\n\t\n\tvar UPDATE_REPLY_URI = \"/v1.0/reply/content/update/\";\n\tvar DELETE_REPLY_URI = \"/v1.0/reply/delete/\";\n\t\t\n\tvar LIKE_REPLY_URI = \"/v1.0/reply/like/\";\n\tvar UNLIKE_REPLY_URI = \"/v1.0/reply/unlike/\";\n\t\n\tvar HIDE_REPLY_URI = \"/v1.0/reply/hide/\";\n\tvar UNHIDE_REPLY_URI = \"/v1.0/reply/unhide/\";\n\t\n\tvar FLAG_REPLY_URI = \"/v1.0/reply/flag/\";\n\tvar UNFLAG_REPLY_URI = \"/v1.0/reply/unflag/\";\n\t\n\tvar observerCallbacks = [];\n\tvar _replies = [];\n\tvar _topicIdFromReply;\n\tvar _currentCommentId;\n\n\tfunction setReplies(replyData) {\n\t\t_replies = [];\n\t\ttempReplyData = replyData.data.results;\n\t\tif(tempReplyData!= undefined && tempReplyData.length>0){\n\t\t\tvar len = tempReplyData.length;\n\t\t\t// console.log(\"replies #\"+ len);\n\t\t\tfor(i=0;i<len;i++){\n\t\t\t\tvar _replyObject = {};\n\t\t\t\t_replyObject = Bant.bant(tempReplyData[i])\n\t\t\t\tif(_replyObject.id != undefined )\n\t\t\t\t\t_replies.push(_replyObject);\n\t\t\t\t// console.log(\"Reply object\"+_replyObject);\n\t\t\t\t_topicIdFromReply = tempReplyData[i].topicId;;\n\t\t\t}\n\t\t\tnotifyObservers();\n\t\t}\n\t}\n\n\tfunction appendToReplies(postReplyData) {\n\t\tvar tempPostedReply = postReplyData.data;\n\t\tif(tempPostedReply!= undefined){\n\t\t\tif (GEN_DEBUG){\n\t\t\tconsole.log(\"appendToReplies :\"+tempPostedReply);\n\t\t\tconsole.log(\"Reply comment ID :\"+ tempPostedReply.commentId);\n\t\t\tconsole.log(\"Current comment ID :\"+ _currentCommentId);\n\t\t\t}\n\t\t\tif(tempPostedReply.commentId == _currentCommentId){\n\t\t\tvar _replyObject = Bant.bant(tempPostedReply);\n\t\t\tif(_replyObject.id != undefined )\n\t\t\t\t_replies.push(_replyObject);\n\t\t\tnotifyObservers();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction updateReply(replyData){\n\t\t//if Replys ID exist, update it \n\t\t//else append to existing list\n\t\tvar replyObj = replyData.data;\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == replyObj.id){\n\t\t\t\t//update\n\t\t\t\t_replies[i] = Bant.bant(replyObj)\n\t\t\t\tif (GEN_DEBUG)\n\t\t\t\tconsole.log(\"Reply updated\");\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\tappendToReplies(replyData);\n\t\t// console.log(\"ReplyService update Reply\");\n\t\treturn 0;\n\t}\n\t\n\tfunction updateLocalData(newData){\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == newData.id){\n\t\t\t\t//update\n\t\t\t\t_replies[i] = newData;\n\t\t\t\tif(NETWORK_DEBUG)\n\t\t\t\t\tconsole.log(\"updated Data for id:\"+ _replies[i].id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction updateLikeReplyWithId(id, liked){\n\t\tif(NETWORK_DEBUG)\n\t\tconsole.log(\"updateLikeReplyWithId :\"+ id + \"   liked \"+ liked);\n\t\tif((id != undefined)){\n\t\t\tvar tempObject;\n\t\t\ttempObject = getReplyById(id);\n\t\t\ttempObject = Bant.updateBantLiked(tempObject, liked);\n\t\t\tupdateLocalData(tempObject);\n\n\t\t\tnotifyObservers();\n\t\t}\n\t\t\n\t}\n\n\tfunction removeReply(replyData){\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == replyData.id){\n\t\t\t\t//remove element\n\t\t\t\t_replies.splice(i,1);\n\t\t\t}\n\t\t}\n\n\t}\n\t\n\tfunction getReplyById(id){\n\t\tif(NETWORK_DEBUG) console.log(\"_replies :\"+ _replies.length);\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == id){\n\t\t\t\t//remove element\n\t\t\t\treturn _replies[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getCommentIdByReply(id){\n\t\tif(NETWORK_DEBUG) console.log(\"_replies :\"+ _replies.length);\n\t\tfor(i=0;i<_replies.length;i++){\n\t\t\tif(_replies[i].id == id){\n\t\t\t\t//remove element\n\t\t\t\treturn _replies[i].commentId;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction replyGetRequest(uri){\n\t\treturn  varReplyParams = {\"rid\": \"reply\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\"uri\": encodeURI(uri)};\n\t\t\n\t}\n\t\n\tfunction replyPostRequest(uri){\n\t\treturn varPostParams = {\n\t\t\t\t\"rid\": \"reply\",\n\t\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\t\"method\": \"POST\",\n\t\t\t\t\"uri\": encodeURI(uri)}\n\t\t\n\t}\n\t\n\tfunction getRepliesRequest(commentId){\n\t\t_currentCommentId = commentId;\n\t\tvar uri = LIST_REPLIES_URI + commentId;\n\t\treturn replyGetRequest (uri);\n\t\t\n\t}\n\n\tfunction getPostReplyRequest(topicId, commentId,replyData, replyId, isReplyToReply){\n\t\tvar targetType = \"comment\";\n\t\tvar targetId = commentId;\n\t\tif(isReplyToReply != undefined && isReplyToReply == true ){\n\t\t\ttargetType = \"reply\";\n\t\t\ttargetId = replyId;\n\t\t}\n\t\tif (NETWORK_DEBUG)\n\t\tconsole.log(\"Topicid : \"+topicId,\"commentid : \"+commentId,\"replydata : \"+replyData);\n\t\tvar createReplyParams = replyPostRequest(POST_REPLY_URI);\n\t\tcreateReplyParams.data = \t\n\t\t{\n\t\t\t\t\"lang\": \"en\", \n\t\t\t\t\"content\": {\"sections\":[{\"type\":\"html\",\"html\":replyData}]},\n\t\t\t\t\"target\": {\n\t\t\t\t\t\"type\": targetType, // Target type: “comment” or “reply”.\n\t\t\t\t\t\"id\":targetId,  // Target bant ID of comment or reply.\n\t\t\t\t},\n\n\t\t\t\t\"topicId\": topicId,\n\t\t\t\t\"commentId\": commentId\n\t\t};\n\t\treturn createReplyParams;\n\t}\n\n\tfunction likeReplyRequest(id){\n\t\treturn  replyPostRequest(LIKE_REPLY_URI + id);\n\t}\n\n\tfunction unlikeReplyRequest(id){\n\t\treturn  replyPostRequest(UNLIKE_REPLY_URI + id);\n\t}\n\t\n\t\n\tfunction hideReplyRequest(id){\n\t\treturn  replyPostRequest(HIDE_REPLY_URI + id);\n\t}\n\n\tfunction unhideReplyRequest(id){\n\t\treturn  replyPostRequest(UNHIDE_REPLY_URI + id);\n\t}\n\t\n\tfunction flagReplyRequest(id){\n\t\treturn  replyPostRequest(FLAG_REPLY_URI + id +\"?reason=spam\");\n\t}\n\n\tfunction unflagReplyRequest(id){\n\t\treturn  replyPostRequest(UNFLAG_REPLY_URI + id);\n\t}\n\t\n\tfunction deleteReplyRequest(id){\n\t\treturn  replyPostRequest(DELETE_REPLY_URI + id);\n\t}\n\t\n\t//call this when you know '_replies' has been changed\n\tvar notifyObservers = function(){\n\t\tangular.forEach(observerCallbacks, function(callback){\n\t\t\tcallback();\n\t\t});\n\t};\n\t\n\tfunction registerObserverCallback(callback){\n\t\t//register an observer\n\t\t// console.log(\"reply callback registered\");\n\t\tvar callbackLength  = observerCallbacks.length;\n\t\twhile(callbackLength > 0){\n\t\t\tcallbackLength = observerCallbacks.length;\n\t\t\tobserverCallbacks.pop();\n\t\t}\n\t\tobserverCallbacks.push(callback);\n\t}\n\tfunction isReplyLiked(id){\n\t\treturn FDSUtility.isLikedById(_replies, id);\n\t}\n\t\n\tfunction updateReplyLocalData(uri,id){\n\t\tif(uri == LIKE_REPLY_URI+id){\n\t\t\tupdateLikeReplyWithId(id, true)\n\t\t}\n\t\telse if(uri == UNLIKE_REPLY_URI+id){\n\t\t\tupdateLikeReplyWithId(id, false)\n\t\t}\n\t\telse if(uri == DELETE_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.deleteById(_replies,id);\n\t\t\tnotifyObservers();\n\t\t\treturn 0;\n\t\t}\n\t\telse if(uri == FLAG_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.flagById(_replies, true);\n\t\t\t}\n\t\telse if(uri == UNFLAG_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.flagById(_replies, false);\n\t\t}\n\t\telse if(uri == HIDE_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.hideById(_replies, true);\n\t\t}\n\t\telse if(uri == UNHIDE_REPLY_URI+id){\n\t\t\t_replies = FDSUtility.hideById(_replies, false);\n\t\t}\n\t}\n\n\t\n\treturn {\n\t\treplies: function(){return _replies },\n\t\tgetTopicIdFromReply: function(){return _topicIdFromReply; },\n\t\tgetPostId: function(){return _postID ;},\n\t\tsetPostId: function(postId){_postID = postId ;},\n\t\tsetReplies:setReplies,\n\t\tupdateReply:updateReply,\n\t\tappendToReplies:appendToReplies,\n\t\tupdateLikeReplyWithId:updateLikeReplyWithId,\n\t\tupdateReplyLocalData:updateReplyLocalData,\n\t\tremoveReply:removeReply,\n\t\tgetPostReplyRequest:getPostReplyRequest,\n\t\tlikeReplyRequest:likeReplyRequest,\n\t\tunlikeReplyRequest:unlikeReplyRequest,\n\t\tdeleteReplyRequest:deleteReplyRequest,\n\t\tflagReplyRequest:flagReplyRequest,\n\t\tregisterObserverCallback:registerObserverCallback,\n\t\tgetRepliesRequest:getRepliesRequest,\n\t\tisReplyLiked:isReplyLiked,\n\t\tgetCommentIdByReply:getCommentIdByReply\n\t};\n\n}]);","angular.module('SocialModule')\n.factory('VideoService', [\"Bant\",\n\tfunction (Bant) {\n\tvar LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n\tvar observerCallbacks = [];\n\tvar autoObserverCallbacks = [];\n  var newObserverCallbacks = [];\n\tvar _videoArray = [];\n\tvar _videoArrayAuto = [];\n\tvar _offset = 0;\n\tvar LIMIT = 10;\n\tvar prevLength = 0;\n\n\tfunction setVideoData(videoData) {\n\t\t_videoArray = [];\n\t\tvar tempData = videoData.data.results;\n\t\tvar len = !!tempData ? tempData.length : 0;\n\n\t\tif (!!tempData && len > 0){\n\t\t\tfor (var i = 0; i < len; i++){\n\t\t\t\tvar _videoObject = Bant.bant(tempData[i]);\n\t\t\t\tif (!!_videoObject.id){\n    \t\t\tvar isNewObject = true;\n    \t\t\tfor (var j = 0; j < _videoArrayAuto.length; j++){\n            if (_videoArrayAuto[j].id === _videoObject.id){\n              isNewObject = false;\n              break;\n            }\n    \t\t\t}\n    \t\t\t_videoArray.push(_videoObject);\n          if (len === 1 && isNewObject && videoData.rid === \"video_auto\"){\n            if (GEN_DEBUG) console.log(\"$AUTO$ SINGLE REQUEST FOUND NEW VIDEO - NOTIFYING\");\n            notifyObservers('new');\n            return;\n          }\n   \t\t\t  if (isNewObject && videoData.rid === \"video_auto\"){\n\t\t\t\t\t\t_videoArrayAuto.push(_videoObject);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(videoData.rid === \"video\"){\n\t\t\t\t_offset = videoData.data.nextOffset;\n\t\t\t\tnotifyObservers();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnotifyObservers(true);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t//call this when you know 'comments' has been changed\n  var notifyObservers = function(autoRequest){\n\t  if (autoRequest === true){\n      angular.forEach(autoObserverCallbacks, function(callback){\n        console.log(\"Notify observer in autoRequest \", callback);\n        callback();\n      });\n    }\n    else if (autoRequest === 'new'){\n      angular.forEach(newObserverCallbacks, function(callback){\n        console.log(\"Notify observer in newRequest \", callback);\n        callback();\n      });\n    }\n    else {\n      angular.forEach(observerCallbacks, function(callback){\n        callback();\n      });\n    }\n\t};\n\n  function registerObserverCallback(callback, auto){\n    //register an observer\n    if (auto === true){\n      var callbackLength = autoObserverCallbacks.length;\n      while (callbackLength > 0){\n        callbackLength = autoObserverCallbacks.length;\n        autoObserverCallbacks.pop();\n      }\n      autoObserverCallbacks.push(callback);\n    }\n    else if (auto === 'new'){\n      var callbackLength = newObserverCallbacks.length;\n      while (callbackLength > 0){\n        callbackLength = newObserverCallbacks.length;\n        newObserverCallbacks.pop();\n      }\n      newObserverCallbacks.push(callback);\n    }\n    else {\n      var callbackLength = observerCallbacks.length;\n      while (callbackLength > 0){\n        callbackLength = observerCallbacks.length;\n        observerCallbacks.pop();\n      }\n      observerCallbacks.push(callback);\n    }\n  }\n\n\tfunction getVideoDataRequest(id, offset){\n\t\tvar reqOffset = _offset;\n\t\tvar request = {\n\t\t\t\"rid\": \"video\",\n\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\"method\": \"GET\",\n\t\t\t\"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset+\"&filter=video\")\n\t\t};\n\t\tif (NETWORK_DEBUG)\n\t\tconsole.log(\"Video Request: \", request);\n\t\treturn request;\n\t}\n\n\tfunction getVideoDataRequestAuto(id){\n\t\tvar request = {\n\t\t\t\"rid\": \"video_auto\",\n\t\t\t\"timestamp\": new Date().getTime(),\n\t\t\t\"method\": \"GET\",\n\t\t\t\"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+0+\"&filter=video\")\n\t\t};\n\t\tif (NETWORK_DEBUG)\n\t\tconsole.log(\"Video Request Auto: \", request);\n\t\treturn request;\n\t}\n\n  function getVideoDataRequestAutoSingle(id){\n    var request = {\n      \"rid\": \"video_auto\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=1&offset=0&filter=video\")\n    };\n    if (NETWORK_DEBUG)\n    console.log(\"Video Request Single Auto: \", request);\n    return request;\n  }\n\n\treturn {\n\t\tvideoArray: function(){\n\t\t\treturn _videoArray;\n\t\t},\n\t\tresetVideoOffset: function(){\n      _offset = 0;\n    },\n\t\tsetVideoData:setVideoData,\n\t\tgetVideoDataRequest:getVideoDataRequest,\n\t\tgetVideoDataRequestAuto:getVideoDataRequestAuto,\n    getVideoDataRequestAutoSingle:getVideoDataRequestAutoSingle,\n\t\tregisterObserverCallback:registerObserverCallback,\n\t\tvideoArrayAutoLength: function(){\n      return _videoArrayAuto.length;\n    },\n    getPrevLength: function(){\n      return prevLength;\n    },\n    setPrevLength: function(length){\n      prevLength = length;\n    }\n\t};\n\n}]);","angular.module('SocialModule')\n.factory('SocialService', [\"Bant\", \n  function (Bant) {\n  var LIST_SOCIAL_URI = \"/v1.0/channel/social/list/\";\n\n\n  var observerCallbacks = [];\n  var autoObserverCallbacks = [];\n  var newObserverCallbacks = [];\n  var _socialArray = [];\n  var _socialArrayAuto = [];\n  var _offset = 0;\n  var LIMIT = 20;\n  var prevLength = 0;\n\n  function setSocialData(socialData) {\n    _socialArray = [];\n    var tempData = socialData.data.results;\n    var len = !!tempData ? tempData.length : 0;\n\n    if (!!tempData && len > 0){\n      for (var i = 0; i < len; i++){\n        var _socialObject = Bant.bant(tempData[i]);\n        if (!!_socialObject.id){\n          var isNewObject = true;\n          for (var j = 0; j < _socialArrayAuto.length; j++){\n            if (_socialArrayAuto[j].id === _socialObject.id){\n              isNewObject = false;\n              break;\n            }\n          }\n          _socialArray.push(_socialObject);\n          if (len === 1 && isNewObject && socialData.rid === \"social_auto\"){\n            if (GEN_DEBUG) console.log(\"$AUTO$ SINGLE REQUEST FOUND NEW SOCIAL - NOTIFYING\");\n            notifyObservers('new');\n            return;\n          }\n          if (isNewObject && socialData.rid === \"social_auto\"){\n            _socialArrayAuto.push(_socialObject);\n          }\n        }\n      }\n      if (socialData.rid === \"social\"){\n        _offset = socialData.data.nextOffset;\n        notifyObservers();\n      }\n      else {\n        notifyObservers(true);\n      }\n    }\n  }\n\n  var notifyObservers = function(autoRequest){\n   if (autoRequest === true){\n      angular.forEach(autoObserverCallbacks, function(callback){\n        console.log(\"Notify observer in autoRequest \", callback);\n        callback();\n      });\n    }\n    else if (autoRequest === 'new'){\n      angular.forEach(newObserverCallbacks, function(callback){\n        console.log(\"Notify observer in newRequest \", callback);\n        callback();\n      });\n    }\n    else {\n      angular.forEach(observerCallbacks, function(callback){\n        callback();\n      });\n    }\n  };\n\n  function registerObserverCallback(callback, auto){\n    //register an observer\n    if (auto === true){\n      var callbackLength = autoObserverCallbacks.length;\n      while (callbackLength > 0){\n        callbackLength = autoObserverCallbacks.length;\n        autoObserverCallbacks.pop();\n      }\n      autoObserverCallbacks.push(callback);\n    }\n    else if (auto === 'new'){\n      var callbackLength = newObserverCallbacks.length;\n      while (callbackLength > 0){\n        callbackLength = newObserverCallbacks.length;\n        newObserverCallbacks.pop();\n      }\n      newObserverCallbacks.push(callback);\n    }\n    else {\n      var callbackLength = observerCallbacks.length;\n      while (callbackLength > 0){\n        callbackLength = observerCallbacks.length;\n        observerCallbacks.pop();\n      }\n      observerCallbacks.push(callback);\n    }\n  }\n\n  function getSocialDataRequest(id, offset){\n    var reqOffset = _offset;\n    var request = {\n      \"rid\": \"social\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+reqOffset)\n    };\n    if (NETWORK_DEBUG)\n    console.log(\"Social Request: \", request);\n    return request;\n  }\n\n\n  function getSocialDataRequestAuto(id){\n    var request = {\n      \"rid\": \"social_auto\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=\"+LIMIT+\"&offset=\"+0)\n    };\n    if (NETWORK_DEBUG)\n    console.log(\"Social Request Auto: \", request);\n    return request;\n  }\n\n  function getSocialDataRequestAutoSingle(id){\n    var request = {\n      \"rid\": \"social_auto\",\n      \"timestamp\": new Date().getTime(),\n      \"method\": \"GET\",\n      \"uri\": encodeURI(LIST_SOCIAL_URI+id+\"?limit=1&offset=0\")\n    };\n    if (NETWORK_DEBUG)\n    console.log(\"Social Request Single Auto: \", request);\n    return request;\n  }\n\n  return {\n    socialArray: function(){\n      return _socialArray;\n    },\n    resetSocialOffset: function(){\n      _offset = 0;\n    },\n    setSocialData: setSocialData,\n    getSocialDataRequest: getSocialDataRequest,\n    getSocialDataRequestAuto: getSocialDataRequestAuto,\n    getSocialDataRequestAutoSingle: getSocialDataRequestAutoSingle,\n    registerObserverCallback: registerObserverCallback,\n    socialArrayAutoLength: function(){\n      return _socialArrayAuto.length;\n    },\n    getPrevLength: function(){\n      return prevLength;\n    },\n    setPrevLength: function(length){\n      prevLength = length;\n    }\n  };\n\n}]); "],"sourceRoot":"/source/"}